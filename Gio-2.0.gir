<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.1"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <package name="gio-2.0"/>
  <package name="gio-unix-2.0"/>
  <c:include name="gio/gio.h"/>
  <namespace name="Gio"
             version="2.0"
             shared-library="libgio-2.0.so.0"
             c:prefix="G">
    <class name="Action"
           c:type="GAction"
           version="2.26"
           parent="GObject.Object"
           glib:type-name="GAction"
           glib:get-type="g_action_get_type"
           glib:type-struct="ActionClass">
      <doc xml:whitespace="preserve">The &lt;structname&gt;GAction&lt;/structname&gt; structure contains private
data and should only be accessed using the provided API</doc>
      <constructor name="new" c:identifier="g_action_new">
        <return-value transfer-ownership="full">
          <type name="Action" c:type="GAction*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="parameter_type" transfer-ownership="none">
            <type name="GLib.VariantType" c:type="GVariantType*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_stateful" c:identifier="g_action_new_stateful">
        <return-value transfer-ownership="full">
          <type name="Action" c:type="GAction*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="parameter_type" transfer-ownership="none">
            <type name="GLib.VariantType" c:type="GVariantType*"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="get_state_hint" invoker="get_state_hint">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_state">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_name" c:identifier="g_action_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_parameter_type"
              c:identifier="g_action_get_parameter_type">
        <return-value transfer-ownership="none">
          <type name="GLib.VariantType" c:type="GVariantType*"/>
        </return-value>
      </method>
      <method name="get_state_type" c:identifier="g_action_get_state_type">
        <return-value transfer-ownership="none">
          <type name="GLib.VariantType" c:type="GVariantType*"/>
        </return-value>
      </method>
      <method name="get_state_hint" c:identifier="g_action_get_state_hint">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
      </method>
      <method name="get_enabled" c:identifier="g_action_get_enabled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_enabled" c:identifier="g_action_set_enabled">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enabled" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_state" c:identifier="g_action_get_state">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
      </method>
      <method name="set_state" c:identifier="g_action_set_state">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="activate" c:identifier="g_action_activate">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="parameter" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <property name="enabled"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="parameter-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GLib.VariantType" c:type="GVariantType"/>
      </property>
      <property name="state"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="GLib.Variant" c:type="GVariant"/>
      </property>
      <property name="state-type" transfer-ownership="none">
        <type name="GLib.VariantType" c:type="GVariantType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ActionPrivate" c:type="GActionPrivate*"/>
      </field>
      <glib:signal name="activate">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ActionClass"
            c:type="GActionClass"
            glib:is-gtype-struct-for="Action"
            version="2.26">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_state_hint">
        <callback name="get_state_hint" c:type="get_state_hint">
          <return-value transfer-ownership="full">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="GAction*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_state">
        <callback name="set_state" c:type="set_state">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="GAction*"/>
            </parameter>
            <parameter name="state" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="vfunc_padding">
        <array zero-terminated="0" c:type="gpointer" fixed-size="6">
          <type name="any"/>
        </array>
      </field>
      <field name="activate">
        <callback name="activate" c:type="activate">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="GAction*"/>
            </parameter>
            <parameter name="parameter" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="signal_padding">
        <array zero-terminated="0" c:type="gpointer" fixed-size="6">
          <type name="any"/>
        </array>
      </field>
    </record>
    <class name="ActionGroup"
           c:type="GActionGroup"
           version="2.26"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GActionGroup"
           glib:get-type="g_action_group_get_type"
           glib:type-struct="ActionGroupClass">
      <doc xml:whitespace="preserve">The #GActionGroup structure contains private data and should only be accessed using the provided API.</doc>
      <virtual-method name="has_action" invoker="has_action">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="list_actions" invoker="list_actions">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </virtual-method>
      <virtual-method name="get_enabled" invoker="get_enabled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_parameter_type" invoker="get_parameter_type">
        <return-value transfer-ownership="none">
          <type name="GLib.VariantType" c:type="GVariantType*"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_state_type" invoker="get_state_type">
        <return-value transfer-ownership="none">
          <type name="GLib.VariantType" c:type="GVariantType*"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_state_hint" invoker="get_state_hint">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_state" invoker="get_state">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_state" invoker="set_state">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="activate" invoker="activate">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="parameter" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="has_action" c:identifier="g_action_group_has_action">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_actions" c:identifier="g_action_group_list_actions">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_parameter_type"
              c:identifier="g_action_group_get_parameter_type">
        <return-value transfer-ownership="none">
          <type name="GLib.VariantType" c:type="GVariantType*"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_state_type"
              c:identifier="g_action_group_get_state_type">
        <return-value transfer-ownership="none">
          <type name="GLib.VariantType" c:type="GVariantType*"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_state_hint"
              c:identifier="g_action_group_get_state_hint">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_enabled" c:identifier="g_action_group_get_enabled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_state" c:identifier="g_action_group_get_state">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_state" c:identifier="g_action_group_set_state">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="activate" c:identifier="g_action_group_activate">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="parameter" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="action_added" c:identifier="g_action_group_action_added">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="action_removed"
              c:identifier="g_action_group_action_removed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="action_enabled_changed"
              c:identifier="g_action_group_action_enabled_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="action_state_changed"
              c:identifier="g_action_group_action_state_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="state" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ActionGroupPrivate" c:type="GActionGroupPrivate*"/>
      </field>
      <glib:signal name="action-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="action-enabled-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="action-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="action-state-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ActionGroupClass"
            c:type="GActionGroupClass"
            glib:is-gtype-struct-for="ActionGroup"
            version="2.26">
      <doc xml:whitespace="preserve">The virtual function table for #GActionGroup.</doc>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="has_action">
        <callback name="has_action" c:type="has_action">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="list_actions">
        <callback name="list_actions" c:type="list_actions">
          <return-value transfer-ownership="full">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_enabled">
        <callback name="get_enabled" c:type="get_enabled">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_parameter_type">
        <callback name="get_parameter_type" c:type="get_parameter_type">
          <return-value transfer-ownership="none">
            <type name="GLib.VariantType" c:type="GVariantType*"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_state_type">
        <callback name="get_state_type" c:type="get_state_type">
          <return-value transfer-ownership="none">
            <type name="GLib.VariantType" c:type="GVariantType*"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_state_hint">
        <callback name="get_state_hint" c:type="get_state_hint">
          <return-value transfer-ownership="full">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_state">
        <callback name="get_state" c:type="get_state">
          <return-value transfer-ownership="full">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_state">
        <callback name="set_state" c:type="set_state">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="activate">
        <callback name="activate" c:type="activate">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="parameter" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="vtable_padding">
        <array zero-terminated="0" c:type="gpointer" fixed-size="6">
          <type name="any"/>
        </array>
      </field>
      <field name="action_added">
        <callback name="action_added" c:type="action_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="action_removed">
        <callback name="action_removed" c:type="action_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="action_enabled_changed">
        <callback name="action_enabled_changed"
                  c:type="action_enabled_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="enabled" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="action_state_changed">
        <callback name="action_state_changed" c:type="action_state_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="action_group" transfer-ownership="none">
              <type name="ActionGroup" c:type="GActionGroup*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="signal_padding">
        <array zero-terminated="0" c:type="gpointer" fixed-size="6">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="ActionGroupPrivate" c:type="GActionGroupPrivate">
    </record>
    <record name="ActionPrivate" c:type="GActionPrivate">
    </record>
    <interface name="AppInfo"
               c:type="GAppInfo"
               glib:type-name="GAppInfo"
               glib:get-type="g_app_info_get_type"
               glib:type-struct="AppInfoIface">
      <doc xml:whitespace="preserve">Information about an installed application and methods to launch
it (with file arguments).</doc>
      <virtual-method name="dup" invoker="dup">
        <return-value transfer-ownership="full">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="equal" invoker="equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo2" transfer-ownership="none">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_id" invoker="get_id">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_description" invoker="get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_executable" invoker="get_executable">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon">
        <return-value transfer-ownership="none">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="launch" introspectable="0" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="filenames" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="launch_context" transfer-ownership="none">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="supports_uris" invoker="supports_uris">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="supports_files" invoker="supports_files">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="launch_uris" invoker="launch_uris" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="uris" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="utf8"/>
            </type>
          </parameter>
          <parameter name="launch_context"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="should_show" invoker="should_show">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="set_as_default_for_type"
                      invoker="set_as_default_for_type"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_as_default_for_extension"
                      invoker="set_as_default_for_extension"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="extension" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_supports_type"
                      invoker="add_supports_type"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_remove_supports_type"
                      invoker="can_remove_supports_type">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="remove_supports_type"
                      invoker="remove_supports_type"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_delete" invoker="can_delete">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="do_delete">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_commandline" invoker="get_commandline">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_display_name" invoker="get_display_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <method name="dup" c:identifier="g_app_info_dup">
        <return-value transfer-ownership="full">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
      </method>
      <method name="equal" c:identifier="g_app_info_equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="appinfo2" transfer-ownership="none">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_id" c:identifier="g_app_info_get_id">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="g_app_info_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_display_name"
              c:identifier="g_app_info_get_display_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_description" c:identifier="g_app_info_get_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_executable" c:identifier="g_app_info_get_executable">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_commandline" c:identifier="g_app_info_get_commandline">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_icon" c:identifier="g_app_info_get_icon">
        <return-value transfer-ownership="none">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="launch" c:identifier="g_app_info_launch" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="files" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="File"/>
            </type>
          </parameter>
          <parameter name="launch_context"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_uris" c:identifier="g_app_info_supports_uris">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="supports_files" c:identifier="g_app_info_supports_files">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="launch_uris"
              c:identifier="g_app_info_launch_uris"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="uris" transfer-ownership="none">
            <type name="GLib.List" c:type="GList*">
              <type name="utf8"/>
            </type>
          </parameter>
          <parameter name="launch_context"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="should_show" c:identifier="g_app_info_should_show">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_as_default_for_type"
              c:identifier="g_app_info_set_as_default_for_type"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_as_default_for_extension"
              c:identifier="g_app_info_set_as_default_for_extension"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="extension" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_supports_type"
              c:identifier="g_app_info_add_supports_type"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_remove_supports_type"
              c:identifier="g_app_info_can_remove_supports_type">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="remove_supports_type"
              c:identifier="g_app_info_remove_supports_type"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_delete" c:identifier="g_app_info_can_delete">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="delete" c:identifier="g_app_info_delete">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
    </interface>
    <bitfield name="AppInfoCreateFlags"
              glib:type-name="GAppInfoCreateFlags"
              glib:get-type="g_app_info_create_flags_get_type"
              c:type="GAppInfoCreateFlags">
      <doc xml:whitespace="preserve">Flags used when creating a #GAppInfo.</doc>
      <member name="none"
              value="0"
              c:identifier="G_APP_INFO_CREATE_NONE"
              glib:nick="none"/>
      <member name="needs_terminal"
              value="1"
              c:identifier="G_APP_INFO_CREATE_NEEDS_TERMINAL"
              glib:nick="needs-terminal"/>
      <member name="supports_uris"
              value="2"
              c:identifier="G_APP_INFO_CREATE_SUPPORTS_URIS"
              glib:nick="supports-uris"/>
      <member name="supports_startup_notification"
              value="4"
              c:identifier="G_APP_INFO_CREATE_SUPPORTS_STARTUP_NOTIFICATION"
              glib:nick="supports-startup-notification"/>
    </bitfield>
    <record name="AppInfoIface"
            c:type="GAppInfoIface"
            glib:is-gtype-struct-for="AppInfo">
      <doc xml:whitespace="preserve">Application Information interface, for operating system portability.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="dup">
        <callback name="dup" c:type="dup">
          <return-value transfer-ownership="full">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="equal">
        <callback name="equal" c:type="equal">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo1" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="appinfo2" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_id">
        <callback name="get_id" c:type="get_id">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_description">
        <callback name="get_description" c:type="get_description">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_executable">
        <callback name="get_executable" c:type="get_executable">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon">
        <callback name="get_icon" c:type="get_icon">
          <return-value transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="launch">
        <callback name="launch" c:type="launch" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="filenames" transfer-ownership="none">
              <type name="GLib.List" c:type="GList*">
                <type name="any" c:type="gpointer"/>
              </type>
            </parameter>
            <parameter name="launch_context" transfer-ownership="none">
              <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="supports_uris">
        <callback name="supports_uris" c:type="supports_uris">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="supports_files">
        <callback name="supports_files" c:type="supports_files">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="launch_uris">
        <callback name="launch_uris" c:type="launch_uris" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="uris" transfer-ownership="none">
              <type name="GLib.List" c:type="GList*">
                <type name="utf8"/>
              </type>
            </parameter>
            <parameter name="launch_context"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="should_show">
        <callback name="should_show" c:type="should_show">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_as_default_for_type">
        <callback name="set_as_default_for_type"
                  c:type="set_as_default_for_type"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="content_type" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_as_default_for_extension">
        <callback name="set_as_default_for_extension"
                  c:type="set_as_default_for_extension"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="extension" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_supports_type">
        <callback name="add_supports_type"
                  c:type="add_supports_type"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="content_type" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_remove_supports_type">
        <callback name="can_remove_supports_type"
                  c:type="can_remove_supports_type">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remove_supports_type">
        <callback name="remove_supports_type"
                  c:type="remove_supports_type"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="content_type" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_delete">
        <callback name="can_delete" c:type="can_delete">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="do_delete">
        <callback name="do_delete" c:type="do_delete">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_commandline">
        <callback name="get_commandline" c:type="get_commandline">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_display_name">
        <callback name="get_display_name" c:type="get_display_name">
          <return-value transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="appinfo" transfer-ownership="none">
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="AppLaunchContext"
           c:type="GAppLaunchContext"
           parent="GObject.Object"
           glib:type-name="GAppLaunchContext"
           glib:get-type="g_app_launch_context_get_type"
           glib:type-struct="AppLaunchContextClass">
      <doc xml:whitespace="preserve">Integrating the launch with the launching application. This is used to
handle for instance startup notification and launching the new application
on the same screen as the launching window.</doc>
      <constructor name="new" c:identifier="g_app_launch_context_new">
        <return-value transfer-ownership="full">
          <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
        </return-value>
      </constructor>
      <virtual-method name="get_display" invoker="get_display">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GAppInfo</doc>
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GList of #GFile objects</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="File"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_startup_notify_id"
                      invoker="get_startup_notify_id">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GAppInfo</doc>
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GList of of #GFile objects</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="File"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="launch_failed" invoker="launch_failed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="startup_notify_id" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_display"
              c:identifier="g_app_launch_context_get_display">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GAppInfo</doc>
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GList of #GFile objects</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="File"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_startup_notify_id"
              c:identifier="g_app_launch_context_get_startup_notify_id">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GAppInfo</doc>
            <type name="AppInfo" c:type="GAppInfo*"/>
          </parameter>
          <parameter name="files" transfer-ownership="none">
            <doc xml:whitespace="preserve">a #GList of of #GFile objects</doc>
            <type name="GLib.List" c:type="GList*">
              <type name="File"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="launch_failed"
              c:identifier="g_app_launch_context_launch_failed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="startup_notify_id" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="AppLaunchContextPrivate"
              c:type="GAppLaunchContextPrivate*"/>
      </field>
    </class>
    <record name="AppLaunchContextClass"
            c:type="GAppLaunchContextClass"
            glib:is-gtype-struct-for="AppLaunchContext">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_display">
        <callback name="get_display" c:type="get_display">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #GAppInfo</doc>
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="files" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #GList of #GFile objects</doc>
              <type name="GLib.List" c:type="GList*">
                <type name="File"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_startup_notify_id">
        <callback name="get_startup_notify_id" c:type="get_startup_notify_id">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #GAppInfo</doc>
              <type name="AppInfo" c:type="GAppInfo*"/>
            </parameter>
            <parameter name="files" transfer-ownership="none">
              <doc xml:whitespace="preserve">a #GList of of #GFile objects</doc>
              <type name="GLib.List" c:type="GList*">
                <type name="File"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="launch_failed">
        <callback name="launch_failed" c:type="launch_failed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
            </parameter>
            <parameter name="startup_notify_id" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="AppLaunchContextPrivate" c:type="GAppLaunchContextPrivate">
    </record>
    <class name="Application"
           c:type="GApplication"
           version="2.26"
           parent="GObject.Object"
           glib:type-name="GApplication"
           glib:get-type="g_application_get_type"
           glib:type-struct="ApplicationClass">
      <doc xml:whitespace="preserve">The &lt;structname&gt;GApplication&lt;/structname&gt; structure contains private
data and should only be accessed using the provided API</doc>
      <implements name="Initable"/>
      <constructor name="new" c:identifier="g_application_new">
        <return-value transfer-ownership="full">
          <type name="Application" c:type="GApplication*"/>
        </return-value>
        <parameters>
          <parameter name="appid" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="argc" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="argv" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </constructor>
      <function name="try_new" c:identifier="g_application_try_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="Application" c:type="GApplication*"/>
        </return-value>
        <parameters>
          <parameter name="appid" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="argc" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="argv" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </function>
      <function name="unregistered_try_new"
                c:identifier="g_application_unregistered_try_new"
                throws="1">
        <return-value transfer-ownership="full">
          <type name="Application" c:type="GApplication*"/>
        </return-value>
        <parameters>
          <parameter name="appid" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="argc" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="argv" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </function>
      <function name="get_instance" c:identifier="g_application_get_instance">
        <return-value transfer-ownership="full">
          <type name="Application" c:type="GApplication*"/>
        </return-value>
      </function>
      <virtual-method name="run" invoker="run">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="register" c:identifier="g_application_register">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_id" c:identifier="g_application_get_id">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="add_action" c:identifier="g_application_add_action">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="description" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_action" c:identifier="g_application_remove_action">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_actions" c:identifier="g_application_list_actions">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="set_action_enabled"
              c:identifier="g_application_set_action_enabled">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_action_enabled"
              c:identifier="g_application_get_action_enabled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_action_description"
              c:identifier="g_application_get_action_description">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="invoke_action" c:identifier="g_application_invoke_action">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="platform_data" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="run" c:identifier="g_application_run">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="quit_with_data"
              c:identifier="g_application_quit_with_data">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="platform_data" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_remote" c:identifier="g_application_is_remote">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="application-id"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="argv"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GLib.Variant" c:type="GVariant"/>
      </property>
      <property name="default-quit"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-remote" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="platform-data"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GLib.Variant" c:type="GVariant"/>
      </property>
      <property name="register"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ApplicationPrivate" c:type="GApplicationPrivate*"/>
      </field>
      <glib:signal name="action-with-data">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="prepare-activation">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="quit-with-data">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ApplicationClass"
            c:type="GApplicationClass"
            glib:is-gtype-struct-for="Application"
            version="2.26">
      <doc xml:whitespace="preserve">The &lt;structname&gt;GApplicationClass&lt;/structname&gt; structure contains
private data only</doc>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="action_with_data">
        <callback name="action_with_data" c:type="action_with_data">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="application" transfer-ownership="none">
              <type name="Application" c:type="GApplication*"/>
            </parameter>
            <parameter name="action_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="platform_data" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="quit_with_data">
        <callback name="quit_with_data" c:type="quit_with_data">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="application" transfer-ownership="none">
              <type name="Application" c:type="GApplication*"/>
            </parameter>
            <parameter name="platform_data" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="prepare_activation">
        <callback name="prepare_activation" c:type="prepare_activation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="application" transfer-ownership="none">
              <type name="Application" c:type="GApplication*"/>
            </parameter>
            <parameter name="arguments" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
            <parameter name="platform_data" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="run">
        <callback name="run" c:type="run">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="application" transfer-ownership="none">
              <type name="Application" c:type="GApplication*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ApplicationPrivate" c:type="GApplicationPrivate">
    </record>
    <bitfield name="AskPasswordFlags"
              glib:type-name="GAskPasswordFlags"
              glib:get-type="g_ask_password_flags_get_type"
              c:type="GAskPasswordFlags">
      <doc xml:whitespace="preserve">#GAskPasswordFlags are used to request specific information from the
user, or to notify the user of their choices in an authentication
situation.</doc>
      <member name="need_password"
              value="1"
              c:identifier="G_ASK_PASSWORD_NEED_PASSWORD"
              glib:nick="need-password"/>
      <member name="need_username"
              value="2"
              c:identifier="G_ASK_PASSWORD_NEED_USERNAME"
              glib:nick="need-username"/>
      <member name="need_domain"
              value="4"
              c:identifier="G_ASK_PASSWORD_NEED_DOMAIN"
              glib:nick="need-domain"/>
      <member name="saving_supported"
              value="8"
              c:identifier="G_ASK_PASSWORD_SAVING_SUPPORTED"
              glib:nick="saving-supported"/>
      <member name="anonymous_supported"
              value="16"
              c:identifier="G_ASK_PASSWORD_ANONYMOUS_SUPPORTED"
              glib:nick="anonymous-supported"/>
    </bitfield>
    <interface name="AsyncInitable"
               c:type="GAsyncInitable"
               version="2.22"
               glib:type-name="GAsyncInitable"
               glib:get-type="g_async_initable_get_type"
               glib:type-struct="AsyncInitableIface">
      <doc xml:whitespace="preserve">Interface for asynchronously initializable objects.</doc>
      <virtual-method name="init_async" invoker="init_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="init_finish" invoker="init_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="init_async" c:identifier="g_async_initable_init_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="init_finish"
              c:identifier="g_async_initable_init_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="new_finish"
              c:identifier="g_async_initable_new_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="AsyncInitableIface"
            c:type="GAsyncInitableIface"
            glib:is-gtype-struct-for="AsyncInitable"
            version="2.22">
      <doc xml:whitespace="preserve">Provides an interface for asynchronous initializing object such that
initialization may fail.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="init_async">
        <callback name="init_async" c:type="init_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="initable" transfer-ownership="none">
              <type name="AsyncInitable" c:type="GAsyncInitable*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="init_finish">
        <callback name="init_finish" c:type="init_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="initable" transfer-ownership="none">
              <type name="AsyncInitable" c:type="GAsyncInitable*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <callback name="AsyncReadyCallback" c:type="GAsyncReadyCallback">
      <doc xml:whitespace="preserve">Type definition for a function that will be called back when an asynchronous
operation within GIO has been completed.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="source_object" transfer-ownership="none">
          <doc xml:whitespace="preserve">the object the asynchronous operation was started with.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="res" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GAsyncResult.</doc>
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">user data passed to the callback.</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <interface name="AsyncResult"
               c:type="GAsyncResult"
               glib:type-name="GAsyncResult"
               glib:get-type="g_async_result_get_type"
               glib:type-struct="AsyncResultIface">
      <doc xml:whitespace="preserve">Holds results information for an asynchronous operation,
usually passed directly to a asynchronous _finish() operation.</doc>
      <virtual-method name="get_user_data" invoker="get_user_data">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_source_object" invoker="get_source_object">
        <return-value transfer-ownership="full">
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
      </virtual-method>
      <method name="get_user_data" c:identifier="g_async_result_get_user_data">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="get_source_object"
              c:identifier="g_async_result_get_source_object">
        <return-value transfer-ownership="full">
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
      </method>
    </interface>
    <record name="AsyncResultIface"
            c:type="GAsyncResultIface"
            glib:is-gtype-struct-for="AsyncResult">
      <doc xml:whitespace="preserve">Interface definition for #GAsyncResult.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_user_data">
        <callback name="get_user_data" c:type="get_user_data">
          <return-value transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </return-value>
          <parameters>
            <parameter name="async_result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_source_object">
        <callback name="get_source_object" c:type="get_source_object">
          <return-value transfer-ownership="full">
            <type name="GObject.Object" c:type="GObject*"/>
          </return-value>
          <parameters>
            <parameter name="async_result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="BufferedInputStream"
           c:type="GBufferedInputStream"
           parent="FilterInputStream"
           glib:type-name="GBufferedInputStream"
           glib:get-type="g_buffered_input_stream_get_type"
           glib:type-struct="BufferedInputStreamClass">
      <doc xml:whitespace="preserve">Implements #GFilterInputStream with a sized input buffer.</doc>
      <constructor name="new" c:identifier="g_buffered_input_stream_new">
        <return-value transfer-ownership="full">
          <type name="BufferedInputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sized"
                   c:identifier="g_buffered_input_stream_new_sized">
        <return-value transfer-ownership="full">
          <type name="BufferedInputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="fill" invoker="fill" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="fill_async" invoker="fill_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="fill_finish" invoker="fill_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_buffer_size"
              c:identifier="g_buffered_input_stream_get_buffer_size">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="set_buffer_size"
              c:identifier="g_buffered_input_stream_set_buffer_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_available"
              c:identifier="g_buffered_input_stream_get_available">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="peek" c:identifier="g_buffered_input_stream_peek">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_buffer"
              c:identifier="g_buffered_input_stream_peek_buffer">
        <return-value transfer-ownership="none">
          <type name="any" c:type="void*"/>
        </return-value>
        <parameters>
          <parameter name="count"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill"
              c:identifier="g_buffered_input_stream_fill"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill_async"
              c:identifier="g_buffered_input_stream_fill_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="fill_finish"
              c:identifier="g_buffered_input_stream_fill_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_byte"
              c:identifier="g_buffered_input_stream_read_byte"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <property name="buffer-size"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="FilterInputStream" c:type="GFilterInputStream"/>
      </field>
      <field name="priv">
        <type name="BufferedInputStreamPrivate"
              c:type="GBufferedInputStreamPrivate*"/>
      </field>
    </class>
    <record name="BufferedInputStreamClass"
            c:type="GBufferedInputStreamClass"
            glib:is-gtype-struct-for="BufferedInputStream">
      <field name="parent_class">
        <type name="FilterInputStreamClass" c:type="GFilterInputStreamClass"/>
      </field>
      <field name="fill">
        <callback name="fill" c:type="fill" throws="1">
          <return-value transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gssize" c:type="gssize"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fill_async">
        <callback name="fill_async" c:type="fill_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gssize" c:type="gssize"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="fill_finish">
        <callback name="fill_finish" c:type="fill_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="BufferedInputStream" c:type="GBufferedInputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="BufferedInputStreamPrivate"
            c:type="GBufferedInputStreamPrivate">
    </record>
    <class name="BufferedOutputStream"
           c:type="GBufferedOutputStream"
           parent="FilterOutputStream"
           glib:type-name="GBufferedOutputStream"
           glib:get-type="g_buffered_output_stream_get_type"
           glib:type-struct="BufferedOutputStreamClass">
      <doc xml:whitespace="preserve">An implementation of #GFilterOutputStream with a sized buffer.</doc>
      <constructor name="new" c:identifier="g_buffered_output_stream_new">
        <return-value transfer-ownership="full">
          <type name="BufferedOutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sized"
                   c:identifier="g_buffered_output_stream_new_sized">
        <return-value transfer-ownership="full">
          <type name="BufferedOutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_buffer_size"
              c:identifier="g_buffered_output_stream_get_buffer_size">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="set_buffer_size"
              c:identifier="g_buffered_output_stream_set_buffer_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_auto_grow"
              c:identifier="g_buffered_output_stream_get_auto_grow">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_auto_grow"
              c:identifier="g_buffered_output_stream_set_auto_grow">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="auto_grow" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="auto-grow" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="buffer-size"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="FilterOutputStream" c:type="GFilterOutputStream"/>
      </field>
      <field name="priv">
        <type name="BufferedOutputStreamPrivate"
              c:type="GBufferedOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="BufferedOutputStreamClass"
            c:type="GBufferedOutputStreamClass"
            glib:is-gtype-struct-for="BufferedOutputStream">
      <field name="parent_class">
        <type name="FilterOutputStreamClass"
              c:type="GFilterOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="BufferedOutputStreamPrivate"
            c:type="GBufferedOutputStreamPrivate">
    </record>
    <callback name="BusAcquiredCallback"
              c:type="GBusAcquiredCallback"
              version="2.26">
      <doc xml:whitespace="preserve">Invoked when a connection to a message bus has been obtained.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">The #GDBusConnection to a message bus.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The name that is requested to be owned.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">User data passed to g_bus_own_name().</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="BusNameAcquiredCallback"
              c:type="GBusNameAcquiredCallback"
              version="2.26">
      <doc xml:whitespace="preserve">Invoked when the name is acquired.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">The #GDBusConnection on which to acquired the name.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The name being owned.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">User data passed to g_bus_own_name() or g_bus_own_name_on_connection().</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="BusNameAppearedCallback"
              c:type="GBusNameAppearedCallback"
              version="2.26">
      <doc xml:whitespace="preserve">Invoked when the name being watched is known to have to have a owner.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">The #GDBusConnection the name is being watched on.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The name being watched.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="name_owner" transfer-ownership="none">
          <doc xml:whitespace="preserve">Unique name of the owner of the name being watched.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <doc xml:whitespace="preserve">User data passed to g_bus_watch_name().</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="BusNameLostCallback"
              c:type="GBusNameLostCallback"
              version="2.26">
      <doc xml:whitespace="preserve">Invoked when the name is lost or @connection has been closed.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">The #GDBusConnection on which to acquire the name or %NULL if the connection was disconnected.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The name being owned.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">User data passed to g_bus_own_name() or g_bus_own_name_on_connection().</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="BusNameOwnerFlags"
              version="2.26"
              glib:type-name="GBusNameOwnerFlags"
              glib:get-type="g_bus_name_owner_flags_get_type"
              c:type="GBusNameOwnerFlags">
      <doc xml:whitespace="preserve">Flags used in g_bus_own_name().</doc>
      <member name="none"
              value="0"
              c:identifier="G_BUS_NAME_OWNER_FLAGS_NONE"
              glib:nick="none"/>
      <member name="allow_replacement"
              value="1"
              c:identifier="G_BUS_NAME_OWNER_FLAGS_ALLOW_REPLACEMENT"
              glib:nick="allow-replacement"/>
      <member name="replace"
              value="2"
              c:identifier="G_BUS_NAME_OWNER_FLAGS_REPLACE"
              glib:nick="replace"/>
    </bitfield>
    <callback name="BusNameVanishedCallback"
              c:type="GBusNameVanishedCallback"
              version="2.26">
      <doc xml:whitespace="preserve">Invoked when the name being watched is known not to have to have a owner.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">The #GDBusConnection the name is being watched on.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The name being watched.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">User data passed to g_bus_watch_name().</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="BusNameWatcherFlags"
              version="2.26"
              glib:type-name="GBusNameWatcherFlags"
              glib:get-type="g_bus_name_watcher_flags_get_type"
              c:type="GBusNameWatcherFlags">
      <doc xml:whitespace="preserve">Flags used in g_bus_watch_name().</doc>
      <member name="none"
              value="0"
              c:identifier="G_BUS_NAME_WATCHER_FLAGS_NONE"
              glib:nick="none"/>
      <member name="auto_start"
              value="1"
              c:identifier="G_BUS_NAME_WATCHER_FLAGS_AUTO_START"
              glib:nick="auto-start"/>
    </bitfield>
    <enumeration name="BusType"
                 version="2.26"
                 glib:type-name="GBusType"
                 glib:get-type="g_bus_type_get_type"
                 c:type="GBusType">
      <doc xml:whitespace="preserve">An enumeration for well-known message buses.</doc>
      <member name="starter"
              value="-1"
              c:identifier="G_BUS_TYPE_STARTER"
              glib:nick="starter"/>
      <member name="none"
              value="0"
              c:identifier="G_BUS_TYPE_NONE"
              glib:nick="none"/>
      <member name="system"
              value="1"
              c:identifier="G_BUS_TYPE_SYSTEM"
              glib:nick="system"/>
      <member name="session"
              value="2"
              c:identifier="G_BUS_TYPE_SESSION"
              glib:nick="session"/>
    </enumeration>
    <class name="Cancellable"
           c:type="GCancellable"
           parent="GObject.Object"
           glib:type-name="GCancellable"
           glib:get-type="g_cancellable_get_type"
           glib:type-struct="CancellableClass">
      <doc xml:whitespace="preserve">Allows actions to be cancelled.</doc>
      <constructor name="new" c:identifier="g_cancellable_new">
        <return-value transfer-ownership="full">
          <type name="Cancellable" c:type="GCancellable*"/>
        </return-value>
      </constructor>
      <function name="get_current" c:identifier="g_cancellable_get_current">
        <return-value transfer-ownership="full">
          <type name="Cancellable" c:type="GCancellable*"/>
        </return-value>
      </function>
      <method name="is_cancelled" c:identifier="g_cancellable_is_cancelled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_error_if_cancelled"
              c:identifier="g_cancellable_set_error_if_cancelled"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_fd" c:identifier="g_cancellable_get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <method name="make_pollfd" c:identifier="g_cancellable_make_pollfd">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="pollfd" transfer-ownership="none">
            <type name="GLib.PollFD" c:type="GPollFD*"/>
          </parameter>
        </parameters>
      </method>
      <method name="release_fd" c:identifier="g_cancellable_release_fd">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="push_current" c:identifier="g_cancellable_push_current">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="pop_current" c:identifier="g_cancellable_pop_current">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="reset" c:identifier="g_cancellable_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="connect" c:identifier="g_cancellable_connect">
        <return-value transfer-ownership="none">
          <type name="ulong" c:type="gulong"/>
        </return-value>
        <parameters>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="data_destroy_func"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="disconnect" c:identifier="g_cancellable_disconnect">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handler_id" transfer-ownership="none">
            <type name="ulong" c:type="gulong"/>
          </parameter>
        </parameters>
      </method>
      <method name="cancel" c:identifier="g_cancellable_cancel">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="CancellablePrivate" c:type="GCancellablePrivate*"/>
      </field>
      <glib:signal name="cancelled">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="CancellableClass"
            c:type="GCancellableClass"
            glib:is-gtype-struct-for="Cancellable">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="cancelled">
        <callback name="cancelled" c:type="cancelled">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="CancellablePrivate" c:type="GCancellablePrivate">
    </record>
    <class name="CharsetConverter"
           c:type="GCharsetConverter"
           parent="GObject.Object"
           glib:type-name="GCharsetConverter"
           glib:get-type="g_charset_converter_get_type"
           glib:type-struct="CharsetConverterClass">
      <implements name="Converter"/>
      <implements name="Initable"/>
      <constructor name="new"
                   c:identifier="g_charset_converter_new"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="CharsetConverter" c:type="GCharsetConverter*"/>
        </return-value>
        <parameters>
          <parameter name="to_charset" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="from_charset" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_use_fallback"
              c:identifier="g_charset_converter_set_use_fallback">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="use_fallback" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_use_fallback"
              c:identifier="g_charset_converter_get_use_fallback">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_num_fallbacks"
              c:identifier="g_charset_converter_get_num_fallbacks">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <property name="from-charset"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="to-charset"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="use-fallback"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="CharsetConverterClass"
            c:type="GCharsetConverterClass"
            glib:is-gtype-struct-for="CharsetConverter">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <interface name="Converter"
               c:type="GConverter"
               version="2.24"
               glib:type-name="GConverter"
               glib:get-type="g_converter_get_type"
               glib:type-struct="ConverterIface">
      <doc xml:whitespace="preserve">Seek object for streaming operations.</doc>
      <virtual-method name="convert" invoker="convert" throws="1">
        <return-value transfer-ownership="full">
          <type name="ConverterResult" c:type="GConverterResult"/>
        </return-value>
        <parameters>
          <parameter name="inbuf" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="inbuf_size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="outbuf" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="outbuf_size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="ConverterFlags" c:type="GConverterFlags"/>
          </parameter>
          <parameter name="bytes_read"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="bytes_written"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="reset" invoker="reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="convert" c:identifier="g_converter_convert" throws="1">
        <return-value transfer-ownership="full">
          <type name="ConverterResult" c:type="GConverterResult"/>
        </return-value>
        <parameters>
          <parameter name="inbuf" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="inbuf_size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="outbuf" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="outbuf_size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="ConverterFlags" c:type="GConverterFlags"/>
          </parameter>
          <parameter name="bytes_read"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="bytes_written"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="g_converter_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </interface>
    <bitfield name="ConverterFlags"
              version="2.24"
              glib:type-name="GConverterFlags"
              glib:get-type="g_converter_flags_get_type"
              c:type="GConverterFlags">
      <doc xml:whitespace="preserve">Flags used when calling a g_converter_convert().</doc>
      <member name="none"
              value="0"
              c:identifier="G_CONVERTER_NO_FLAGS"
              glib:nick="none"/>
      <member name="input_at_end"
              value="1"
              c:identifier="G_CONVERTER_INPUT_AT_END"
              glib:nick="input-at-end"/>
      <member name="flush"
              value="2"
              c:identifier="G_CONVERTER_FLUSH"
              glib:nick="flush"/>
    </bitfield>
    <record name="ConverterIface"
            c:type="GConverterIface"
            glib:is-gtype-struct-for="Converter"
            version="2.24">
      <doc xml:whitespace="preserve">Provides an interface for converting data from one type
to another type. The conversion can be stateful
and may fail at any place.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="convert">
        <callback name="convert" c:type="convert" throws="1">
          <return-value transfer-ownership="full">
            <type name="ConverterResult" c:type="GConverterResult"/>
          </return-value>
          <parameters>
            <parameter name="converter" transfer-ownership="none">
              <type name="Converter" c:type="GConverter*"/>
            </parameter>
            <parameter name="inbuf" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="inbuf_size" transfer-ownership="none">
              <type name="gsize" c:type="gsize"/>
            </parameter>
            <parameter name="outbuf" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="outbuf_size" transfer-ownership="none">
              <type name="gsize" c:type="gsize"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="ConverterFlags" c:type="GConverterFlags"/>
            </parameter>
            <parameter name="bytes_read"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="gsize" c:type="gsize*"/>
            </parameter>
            <parameter name="bytes_written"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="gsize" c:type="gsize*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reset">
        <callback name="reset" c:type="reset">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="converter" transfer-ownership="none">
              <type name="Converter" c:type="GConverter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="ConverterInputStream"
           c:type="GConverterInputStream"
           parent="FilterInputStream"
           glib:type-name="GConverterInputStream"
           glib:get-type="g_converter_input_stream_get_type"
           glib:type-struct="ConverterInputStreamClass">
      <doc xml:whitespace="preserve">An implementation of #GFilterInputStream that allows data
conversion.</doc>
      <constructor name="new" c:identifier="g_converter_input_stream_new">
        <return-value transfer-ownership="full">
          <type name="ConverterInputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="converter" transfer-ownership="none">
            <type name="Converter" c:type="GConverter*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_converter"
              c:identifier="g_converter_input_stream_get_converter">
        <return-value transfer-ownership="full">
          <type name="Converter" c:type="GConverter*"/>
        </return-value>
      </method>
      <property name="converter"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Converter" c:type="GConverter"/>
      </property>
      <field name="parent_instance">
        <type name="FilterInputStream" c:type="GFilterInputStream"/>
      </field>
      <field name="priv">
        <type name="ConverterInputStreamPrivate"
              c:type="GConverterInputStreamPrivate*"/>
      </field>
    </class>
    <record name="ConverterInputStreamClass"
            c:type="GConverterInputStreamClass"
            glib:is-gtype-struct-for="ConverterInputStream">
      <field name="parent_class">
        <type name="FilterInputStreamClass" c:type="GFilterInputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ConverterInputStreamPrivate"
            c:type="GConverterInputStreamPrivate">
    </record>
    <class name="ConverterOutputStream"
           c:type="GConverterOutputStream"
           parent="FilterOutputStream"
           glib:type-name="GConverterOutputStream"
           glib:get-type="g_converter_output_stream_get_type"
           glib:type-struct="ConverterOutputStreamClass">
      <doc xml:whitespace="preserve">An implementation of #GFilterOutputStream that allows data
conversion.</doc>
      <constructor name="new" c:identifier="g_converter_output_stream_new">
        <return-value transfer-ownership="full">
          <type name="ConverterOutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
          <parameter name="converter" transfer-ownership="none">
            <type name="Converter" c:type="GConverter*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_converter"
              c:identifier="g_converter_output_stream_get_converter">
        <return-value transfer-ownership="full">
          <type name="Converter" c:type="GConverter*"/>
        </return-value>
      </method>
      <property name="converter"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Converter" c:type="GConverter"/>
      </property>
      <field name="parent_instance">
        <type name="FilterOutputStream" c:type="GFilterOutputStream"/>
      </field>
      <field name="priv">
        <type name="ConverterOutputStreamPrivate"
              c:type="GConverterOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="ConverterOutputStreamClass"
            c:type="GConverterOutputStreamClass"
            glib:is-gtype-struct-for="ConverterOutputStream">
      <field name="parent_class">
        <type name="FilterOutputStreamClass"
              c:type="GFilterOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ConverterOutputStreamPrivate"
            c:type="GConverterOutputStreamPrivate">
    </record>
    <enumeration name="ConverterResult"
                 version="2.24"
                 glib:type-name="GConverterResult"
                 glib:get-type="g_converter_result_get_type"
                 c:type="GConverterResult">
      <doc xml:whitespace="preserve">Results returned from g_converter_convert().</doc>
      <member name="error"
              value="0"
              c:identifier="G_CONVERTER_ERROR"
              glib:nick="error"/>
      <member name="converted"
              value="1"
              c:identifier="G_CONVERTER_CONVERTED"
              glib:nick="converted"/>
      <member name="finished"
              value="2"
              c:identifier="G_CONVERTER_FINISHED"
              glib:nick="finished"/>
      <member name="flushed"
              value="3"
              c:identifier="G_CONVERTER_FLUSHED"
              glib:nick="flushed"/>
    </enumeration>
    <class name="Credentials"
           c:type="GCredentials"
           parent="GObject.Object"
           glib:type-name="GCredentials"
           glib:get-type="g_credentials_get_type"
           glib:type-struct="CredentialsClass">
      <constructor name="new" c:identifier="g_credentials_new">
        <return-value transfer-ownership="full">
          <type name="Credentials" c:type="GCredentials*"/>
        </return-value>
      </constructor>
      <method name="to_string" c:identifier="g_credentials_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_native" c:identifier="g_credentials_get_native">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="native_type" transfer-ownership="none">
            <type name="CredentialsType" c:type="GCredentialsType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_native" c:identifier="g_credentials_set_native">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="native_type" transfer-ownership="none">
            <type name="CredentialsType" c:type="GCredentialsType"/>
          </parameter>
          <parameter name="native" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_same_user"
              c:identifier="g_credentials_is_same_user"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="other_credentials" transfer-ownership="none">
            <type name="Credentials" c:type="GCredentials*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_unix_user"
              c:identifier="g_credentials_get_unix_user"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="uid_t"/>
        </return-value>
      </method>
      <method name="set_unix_user"
              c:identifier="g_credentials_set_unix_user"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="uid" transfer-ownership="none">
            <type name="uint" c:type="uid_t"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="CredentialsClass"
            c:type="GCredentialsClass"
            glib:is-gtype-struct-for="Credentials">
    </record>
    <enumeration name="CredentialsType"
                 version="2.26"
                 glib:type-name="GCredentialsType"
                 glib:get-type="g_credentials_type_get_type"
                 c:type="GCredentialsType">
      <doc xml:whitespace="preserve">Enumeration describing different kinds of native credential types.</doc>
      <member name="invalid"
              value="0"
              c:identifier="G_CREDENTIALS_TYPE_INVALID"
              glib:nick="invalid"/>
      <member name="linux_ucred"
              value="1"
              c:identifier="G_CREDENTIALS_TYPE_LINUX_UCRED"
              glib:nick="linux-ucred"/>
    </enumeration>
    <record name="DBusAnnotationInfo"
            c:type="GDBusAnnotationInfo"
            version="2.26"
            glib:type-name="GDBusAnnotationInfo"
            glib:get-type="g_dbus_annotation_info_get_type">
      <doc xml:whitespace="preserve">Information about an annotation.</doc>
      <field name="ref_count" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="key" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="value" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="annotations" writable="1">
        <type name="DBusAnnotationInfo" c:type="GDBusAnnotationInfo**"/>
      </field>
      <method name="lookup" c:identifier="g_dbus_annotation_info_lookup">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="g_dbus_annotation_info_ref">
        <return-value transfer-ownership="full">
          <type name="DBusAnnotationInfo" c:type="GDBusAnnotationInfo*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="g_dbus_annotation_info_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <record name="DBusArgInfo"
            c:type="GDBusArgInfo"
            version="2.26"
            glib:type-name="GDBusArgInfo"
            glib:get-type="g_dbus_arg_info_get_type">
      <doc xml:whitespace="preserve">Information about an argument for a method or a signal.</doc>
      <field name="ref_count" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="signature" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="annotations" writable="1">
        <type name="DBusAnnotationInfo" c:type="GDBusAnnotationInfo**"/>
      </field>
      <method name="ref" c:identifier="g_dbus_arg_info_ref">
        <return-value transfer-ownership="full">
          <type name="DBusArgInfo" c:type="GDBusArgInfo*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="g_dbus_arg_info_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <class name="DBusAuthObserver"
           c:type="GDBusAuthObserver"
           parent="GObject.Object"
           glib:type-name="GDBusAuthObserver"
           glib:get-type="g_dbus_auth_observer_get_type">
      <constructor name="new" c:identifier="g_dbus_auth_observer_new">
        <return-value transfer-ownership="full">
          <type name="DBusAuthObserver" c:type="GDBusAuthObserver*"/>
        </return-value>
      </constructor>
      <method name="authorize_authenticated_peer"
              c:identifier="g_dbus_auth_observer_authorize_authenticated_peer">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="stream" transfer-ownership="none">
            <type name="IOStream" c:type="GIOStream*"/>
          </parameter>
          <parameter name="credentials" transfer-ownership="none">
            <type name="Credentials" c:type="GCredentials*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="authorize-authenticated-peer">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="IOStream" c:type="GIOStream"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="Credentials" c:type="GCredentials"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <bitfield name="DBusCallFlags"
              version="2.26"
              glib:type-name="GDBusCallFlags"
              glib:get-type="g_dbus_call_flags_get_type"
              c:type="GDBusCallFlags">
      <doc xml:whitespace="preserve">Flags used in g_dbus_connection_call() and similar APIs.</doc>
      <member name="none"
              value="0"
              c:identifier="G_DBUS_CALL_FLAGS_NONE"
              glib:nick="none"/>
      <member name="no_auto_start"
              value="1"
              c:identifier="G_DBUS_CALL_FLAGS_NO_AUTO_START"
              glib:nick="no-auto-start"/>
    </bitfield>
    <bitfield name="DBusCapabilityFlags"
              version="2.26"
              glib:type-name="GDBusCapabilityFlags"
              glib:get-type="g_dbus_capability_flags_get_type"
              c:type="GDBusCapabilityFlags">
      <doc xml:whitespace="preserve">Capabilities negotiated with the remote peer.</doc>
      <member name="none"
              value="0"
              c:identifier="G_DBUS_CAPABILITY_FLAGS_NONE"
              glib:nick="none"/>
      <member name="unix_fd_passing"
              value="1"
              c:identifier="G_DBUS_CAPABILITY_FLAGS_UNIX_FD_PASSING"
              glib:nick="unix-fd-passing"/>
    </bitfield>
    <class name="DBusConnection"
           c:type="GDBusConnection"
           parent="GObject.Object"
           glib:type-name="GDBusConnection"
           glib:get-type="g_dbus_connection_get_type">
      <implements name="AsyncInitable"/>
      <implements name="Initable"/>
      <constructor name="new_finish"
                   c:identifier="g_dbus_connection_new_finish"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="g_dbus_connection_new_sync"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </return-value>
        <parameters>
          <parameter name="stream" transfer-ownership="none">
            <type name="IOStream" c:type="GIOStream*"/>
          </parameter>
          <parameter name="guid" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusConnectionFlags" c:type="GDBusConnectionFlags"/>
          </parameter>
          <parameter name="observer" transfer-ownership="none">
            <type name="DBusAuthObserver" c:type="GDBusAuthObserver*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_address_finish"
                   c:identifier="g_dbus_connection_new_for_address_finish"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_address_sync"
                   c:identifier="g_dbus_connection_new_for_address_sync"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusConnectionFlags" c:type="GDBusConnectionFlags"/>
          </parameter>
          <parameter name="observer" transfer-ownership="none">
            <type name="DBusAuthObserver" c:type="GDBusAuthObserver*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="new" c:identifier="g_dbus_connection_new">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stream" transfer-ownership="none">
            <type name="IOStream" c:type="GIOStream*"/>
          </parameter>
          <parameter name="guid" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusConnectionFlags" c:type="GDBusConnectionFlags"/>
          </parameter>
          <parameter name="observer" transfer-ownership="none">
            <type name="DBusAuthObserver" c:type="GDBusAuthObserver*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_for_address"
                c:identifier="g_dbus_connection_new_for_address">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusConnectionFlags" c:type="GDBusConnectionFlags"/>
          </parameter>
          <parameter name="observer" transfer-ownership="none">
            <type name="DBusAuthObserver" c:type="GDBusAuthObserver*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="start_message_processing"
              c:identifier="g_dbus_connection_start_message_processing">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="is_closed" c:identifier="g_dbus_connection_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_stream" c:identifier="g_dbus_connection_get_stream">
        <return-value transfer-ownership="full">
          <type name="IOStream" c:type="GIOStream*"/>
        </return-value>
      </method>
      <method name="get_guid" c:identifier="g_dbus_connection_get_guid">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_unique_name"
              c:identifier="g_dbus_connection_get_unique_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_peer_credentials"
              c:identifier="g_dbus_connection_get_peer_credentials">
        <return-value transfer-ownership="full">
          <type name="Credentials" c:type="GCredentials*"/>
        </return-value>
      </method>
      <method name="get_exit_on_close"
              c:identifier="g_dbus_connection_get_exit_on_close">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_exit_on_close"
              c:identifier="g_dbus_connection_set_exit_on_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="exit_on_close" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_capabilities"
              c:identifier="g_dbus_connection_get_capabilities">
        <return-value transfer-ownership="full">
          <type name="DBusCapabilityFlags" c:type="GDBusCapabilityFlags"/>
        </return-value>
      </method>
      <method name="close" c:identifier="g_dbus_connection_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="g_dbus_connection_close_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_sync"
              c:identifier="g_dbus_connection_close_sync"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush" c:identifier="g_dbus_connection_flush">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush_finish"
              c:identifier="g_dbus_connection_flush_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush_sync"
              c:identifier="g_dbus_connection_flush_sync"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_message"
              c:identifier="g_dbus_connection_send_message"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="DBusMessage" c:type="GDBusMessage*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusSendMessageFlags" c:type="GDBusSendMessageFlags"/>
          </parameter>
          <parameter name="out_serial"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_message_with_reply"
              c:identifier="g_dbus_connection_send_message_with_reply">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="DBusMessage" c:type="GDBusMessage*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusSendMessageFlags" c:type="GDBusSendMessageFlags"/>
          </parameter>
          <parameter name="timeout_msec" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="out_serial"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="7">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_message_with_reply_finish"
              c:identifier="g_dbus_connection_send_message_with_reply_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusMessage" c:type="GDBusMessage*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_message_with_reply_sync"
              c:identifier="g_dbus_connection_send_message_with_reply_sync"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusMessage" c:type="GDBusMessage*"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <type name="DBusMessage" c:type="GDBusMessage*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusSendMessageFlags" c:type="GDBusSendMessageFlags"/>
          </parameter>
          <parameter name="timeout_msec" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="out_serial"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="uint32" c:type="guint32*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_signal"
              c:identifier="g_dbus_connection_emit_signal"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="destination_bus_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="interface_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="signal_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="parameters" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call" c:identifier="g_dbus_connection_call">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bus_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="interface_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="method_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="parameters" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="reply_type" transfer-ownership="none">
            <type name="GLib.VariantType" c:type="GVariantType*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusCallFlags" c:type="GDBusCallFlags"/>
          </parameter>
          <parameter name="timeout_msec" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="11">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_finish"
              c:identifier="g_dbus_connection_call_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_sync"
              c:identifier="g_dbus_connection_call_sync"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="bus_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="interface_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="method_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="parameters" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="reply_type" transfer-ownership="none">
            <type name="GLib.VariantType" c:type="GVariantType*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusCallFlags" c:type="GDBusCallFlags"/>
          </parameter>
          <parameter name="timeout_msec" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="register_object"
              c:identifier="g_dbus_connection_register_object"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="interface_info" transfer-ownership="none">
            <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
          </parameter>
          <parameter name="vtable" transfer-ownership="none">
            <type name="DBusInterfaceVTable" c:type="GDBusInterfaceVTable*"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="unregister_object"
              c:identifier="g_dbus_connection_unregister_object">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="registration_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="register_subtree"
              c:identifier="g_dbus_connection_register_subtree"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="vtable" transfer-ownership="none">
            <type name="DBusSubtreeVTable" c:type="GDBusSubtreeVTable*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusSubtreeFlags" c:type="GDBusSubtreeFlags"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="unregister_subtree"
              c:identifier="g_dbus_connection_unregister_subtree">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="registration_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="signal_subscribe"
              c:identifier="g_dbus_connection_signal_subscribe">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="sender" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="interface_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="member" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="arg0" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusSignalFlags" c:type="GDBusSignalFlags"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="notified"
                     closure="8"
                     destroy="9">
            <type name="DBusSignalCallback" c:type="GDBusSignalCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="signal_unsubscribe"
              c:identifier="g_dbus_connection_signal_unsubscribe">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="subscription_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_filter" c:identifier="g_dbus_connection_add_filter">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="filter_function"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="DBusMessageFilterFunction"
                  c:type="GDBusMessageFilterFunction"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="user_data_free_func"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_filter"
              c:identifier="g_dbus_connection_remove_filter">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="filter_id" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="address"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="authentication-observer"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DBusAuthObserver" c:type="GDBusAuthObserver"/>
      </property>
      <property name="capabilities" transfer-ownership="none">
        <type name="DBusCapabilityFlags" c:type="GDBusCapabilityFlags"/>
      </property>
      <property name="closed" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="exit-on-close" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="flags"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DBusConnectionFlags" c:type="GDBusConnectionFlags"/>
      </property>
      <property name="guid"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="stream"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="IOStream" c:type="GIOStream"/>
      </property>
      <property name="unique-name" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <glib:signal name="closed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <bitfield name="DBusConnectionFlags"
              version="2.26"
              glib:type-name="GDBusConnectionFlags"
              glib:get-type="g_dbus_connection_flags_get_type"
              c:type="GDBusConnectionFlags">
      <doc xml:whitespace="preserve">Flags used when creating a new #GDBusConnection.</doc>
      <member name="none"
              value="0"
              c:identifier="G_DBUS_CONNECTION_FLAGS_NONE"
              glib:nick="none"/>
      <member name="authentication_client"
              value="1"
              c:identifier="G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_CLIENT"
              glib:nick="authentication-client"/>
      <member name="authentication_server"
              value="2"
              c:identifier="G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_SERVER"
              glib:nick="authentication-server"/>
      <member name="authentication_allow_anonymous"
              value="4"
              c:identifier="G_DBUS_CONNECTION_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS"
              glib:nick="authentication-allow-anonymous"/>
      <member name="message_bus_connection"
              value="8"
              c:identifier="G_DBUS_CONNECTION_FLAGS_MESSAGE_BUS_CONNECTION"
              glib:nick="message-bus-connection"/>
      <member name="delay_message_processing"
              value="16"
              c:identifier="G_DBUS_CONNECTION_FLAGS_DELAY_MESSAGE_PROCESSING"
              glib:nick="delay-message-processing"/>
    </bitfield>
    <enumeration name="DBusError"
                 version="2.26"
                 glib:type-name="GDBusError"
                 glib:get-type="g_dbus_error_get_type"
                 c:type="GDBusError"
                 glib:error-quark="g_dbus_error_quark">
      <doc xml:whitespace="preserve">A generic error; "something went wrong" - see the error message for
more.
There was not enough memory to complete an operation.
The bus doesn't know how to launch a service to supply the bus name
you wanted.
The bus name you referenced doesn't exist (i.e. no application owns
it).
No reply to a message expecting one, usually means a timeout occurred.
Something went wrong reading or writing to a socket, for example.
A D-Bus bus address was malformed.
Requested operation isn't supported (like ENOSYS on UNIX).
Some limited resource is exhausted.
Security restrictions don't allow doing what you're trying to do.
Authentication didn't work.
Unable to connect to server (probably caused by ECONNREFUSED on a
socket).
Certain timeout errors, possibly ETIMEDOUT on a socket.  Note that
%G_DBUS_ERROR_NO_REPLY is used for message reply timeouts. Warning:
this is confusingly-named given that %G_DBUS_ERROR_TIMED_OUT also
exists. We can't fix it for compatibility reasons so just be
careful.
No network access (probably ENETUNREACH on a socket).
Can't bind a socket since its address is in use (i.e. EADDRINUSE).
The connection is disconnected and you're trying to use it.
Invalid arguments passed to a method call.
Missing file.
Existing file and the operation you're using does not silently overwrite.
Method name you invoked isn't known by the object you invoked it on.
confusingly-named given that %G_DBUS_ERROR_TIMEOUT also exists. We
can't fix it for compatibility reasons so just be careful.
Tried to remove or modify a match rule that didn't exist.
The match rule isn't syntactically valid.
While starting a new process, the exec() call failed.
While starting a new process, the fork() call failed.
While starting a new process, the child exited with a status code.
While starting a new process, the child exited on a signal.
While starting a new process, something went wrong.
We failed to setup the environment correctly.
We failed to setup the config parser correctly.
Bus name was not valid.
Service file not found in system-services directory.
Permissions are incorrect on the setuid helper.
Service file invalid (Name, User or Exec missing).
Tried to get a UNIX process ID and it wasn't available.
Tried to get a UNIX process ID and it wasn't available.
A type signature is not valid.
A file contains invalid syntax or is otherwise broken.
Asked for SELinux security context and it wasn't available.
Asked for ADT audit data and it wasn't available.
There's already an object with the requested object path.
Error codes for the %G_DBUS_ERROR error domain.</doc>
      <member name="failed"
              value="0"
              c:identifier="G_DBUS_ERROR_FAILED"
              glib:nick="failed"/>
      <member name="no_memory"
              value="1"
              c:identifier="G_DBUS_ERROR_NO_MEMORY"
              glib:nick="no-memory"/>
      <member name="service_unknown"
              value="2"
              c:identifier="G_DBUS_ERROR_SERVICE_UNKNOWN"
              glib:nick="service-unknown"/>
      <member name="name_has_no_owner"
              value="3"
              c:identifier="G_DBUS_ERROR_NAME_HAS_NO_OWNER"
              glib:nick="name-has-no-owner"/>
      <member name="no_reply"
              value="4"
              c:identifier="G_DBUS_ERROR_NO_REPLY"
              glib:nick="no-reply"/>
      <member name="io_error"
              value="5"
              c:identifier="G_DBUS_ERROR_IO_ERROR"
              glib:nick="io-error"/>
      <member name="bad_address"
              value="6"
              c:identifier="G_DBUS_ERROR_BAD_ADDRESS"
              glib:nick="bad-address"/>
      <member name="not_supported"
              value="7"
              c:identifier="G_DBUS_ERROR_NOT_SUPPORTED"
              glib:nick="not-supported"/>
      <member name="limits_exceeded"
              value="8"
              c:identifier="G_DBUS_ERROR_LIMITS_EXCEEDED"
              glib:nick="limits-exceeded"/>
      <member name="access_denied"
              value="9"
              c:identifier="G_DBUS_ERROR_ACCESS_DENIED"
              glib:nick="access-denied"/>
      <member name="auth_failed"
              value="10"
              c:identifier="G_DBUS_ERROR_AUTH_FAILED"
              glib:nick="auth-failed"/>
      <member name="no_server"
              value="11"
              c:identifier="G_DBUS_ERROR_NO_SERVER"
              glib:nick="no-server"/>
      <member name="timeout"
              value="12"
              c:identifier="G_DBUS_ERROR_TIMEOUT"
              glib:nick="timeout"/>
      <member name="no_network"
              value="13"
              c:identifier="G_DBUS_ERROR_NO_NETWORK"
              glib:nick="no-network"/>
      <member name="address_in_use"
              value="14"
              c:identifier="G_DBUS_ERROR_ADDRESS_IN_USE"
              glib:nick="address-in-use"/>
      <member name="disconnected"
              value="15"
              c:identifier="G_DBUS_ERROR_DISCONNECTED"
              glib:nick="disconnected"/>
      <member name="invalid_args"
              value="16"
              c:identifier="G_DBUS_ERROR_INVALID_ARGS"
              glib:nick="invalid-args"/>
      <member name="file_not_found"
              value="17"
              c:identifier="G_DBUS_ERROR_FILE_NOT_FOUND"
              glib:nick="file-not-found"/>
      <member name="file_exists"
              value="18"
              c:identifier="G_DBUS_ERROR_FILE_EXISTS"
              glib:nick="file-exists"/>
      <member name="unknown_method"
              value="19"
              c:identifier="G_DBUS_ERROR_UNKNOWN_METHOD"
              glib:nick="unknown-method"/>
      <member name="timed_out"
              value="20"
              c:identifier="G_DBUS_ERROR_TIMED_OUT"
              glib:nick="timed-out"/>
      <member name="match_rule_not_found"
              value="21"
              c:identifier="G_DBUS_ERROR_MATCH_RULE_NOT_FOUND"
              glib:nick="match-rule-not-found"/>
      <member name="match_rule_invalid"
              value="22"
              c:identifier="G_DBUS_ERROR_MATCH_RULE_INVALID"
              glib:nick="match-rule-invalid"/>
      <member name="spawn_exec_failed"
              value="23"
              c:identifier="G_DBUS_ERROR_SPAWN_EXEC_FAILED"
              glib:nick="spawn-exec-failed"/>
      <member name="spawn_fork_failed"
              value="24"
              c:identifier="G_DBUS_ERROR_SPAWN_FORK_FAILED"
              glib:nick="spawn-fork-failed"/>
      <member name="spawn_child_exited"
              value="25"
              c:identifier="G_DBUS_ERROR_SPAWN_CHILD_EXITED"
              glib:nick="spawn-child-exited"/>
      <member name="spawn_child_signaled"
              value="26"
              c:identifier="G_DBUS_ERROR_SPAWN_CHILD_SIGNALED"
              glib:nick="spawn-child-signaled"/>
      <member name="spawn_failed"
              value="27"
              c:identifier="G_DBUS_ERROR_SPAWN_FAILED"
              glib:nick="spawn-failed"/>
      <member name="spawn_setup_failed"
              value="28"
              c:identifier="G_DBUS_ERROR_SPAWN_SETUP_FAILED"
              glib:nick="spawn-setup-failed"/>
      <member name="spawn_config_invalid"
              value="29"
              c:identifier="G_DBUS_ERROR_SPAWN_CONFIG_INVALID"
              glib:nick="spawn-config-invalid"/>
      <member name="spawn_service_invalid"
              value="30"
              c:identifier="G_DBUS_ERROR_SPAWN_SERVICE_INVALID"
              glib:nick="spawn-service-invalid"/>
      <member name="spawn_service_not_found"
              value="31"
              c:identifier="G_DBUS_ERROR_SPAWN_SERVICE_NOT_FOUND"
              glib:nick="spawn-service-not-found"/>
      <member name="spawn_permissions_invalid"
              value="32"
              c:identifier="G_DBUS_ERROR_SPAWN_PERMISSIONS_INVALID"
              glib:nick="spawn-permissions-invalid"/>
      <member name="spawn_file_invalid"
              value="33"
              c:identifier="G_DBUS_ERROR_SPAWN_FILE_INVALID"
              glib:nick="spawn-file-invalid"/>
      <member name="spawn_no_memory"
              value="34"
              c:identifier="G_DBUS_ERROR_SPAWN_NO_MEMORY"
              glib:nick="spawn-no-memory"/>
      <member name="unix_process_id_unknown"
              value="35"
              c:identifier="G_DBUS_ERROR_UNIX_PROCESS_ID_UNKNOWN"
              glib:nick="unix-process-id-unknown"/>
      <member name="invalid_signature"
              value="36"
              c:identifier="G_DBUS_ERROR_INVALID_SIGNATURE"
              glib:nick="invalid-signature"/>
      <member name="invalid_file_content"
              value="37"
              c:identifier="G_DBUS_ERROR_INVALID_FILE_CONTENT"
              glib:nick="invalid-file-content"/>
      <member name="selinux_security_context_unknown"
              value="38"
              c:identifier="G_DBUS_ERROR_SELINUX_SECURITY_CONTEXT_UNKNOWN"
              glib:nick="selinux-security-context-unknown"/>
      <member name="adt_audit_data_unknown"
              value="39"
              c:identifier="G_DBUS_ERROR_ADT_AUDIT_DATA_UNKNOWN"
              glib:nick="adt-audit-data-unknown"/>
      <member name="object_path_in_use"
              value="40"
              c:identifier="G_DBUS_ERROR_OBJECT_PATH_IN_USE"
              glib:nick="object-path-in-use"/>
    </enumeration>
    <record name="DBusErrorEntry" c:type="GDBusErrorEntry" version="2.26">
      <doc xml:whitespace="preserve">Struct used in g_dbus_error_register_error_domain().</doc>
      <field name="error_code" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="dbus_error_name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <callback name="DBusInterfaceGetPropertyFunc"
              c:type="GDBusInterfaceGetPropertyFunc"
              version="2.26">
      <doc xml:whitespace="preserve">The type of the @get_property function in #GDBusInterfaceVTable.
consumed - otherwise its reference count is decreased by one.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">A #GVariant with the value for @property_name or %NULL if</doc>
        <type name="GLib.Variant" c:type="GVariant*"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GDBusConnection.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="sender" transfer-ownership="none">
          <doc xml:whitespace="preserve">The unique bus name of the remote caller.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <doc xml:whitespace="preserve">The object path that the method was invoked on.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The D-Bus interface name for the property.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The name of the property to get the value of.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <doc xml:whitespace="preserve">Return location for error.</doc>
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <doc xml:whitespace="preserve">The @user_data #gpointer passed to g_dbus_connection_register_object().</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="DBusInterfaceInfo"
            c:type="GDBusInterfaceInfo"
            version="2.26"
            glib:type-name="GDBusInterfaceInfo"
            glib:get-type="g_dbus_interface_info_get_type">
      <doc xml:whitespace="preserve">Information about a D-Bus interface.</doc>
      <field name="ref_count" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="methods" writable="1">
        <type name="DBusMethodInfo" c:type="GDBusMethodInfo**"/>
      </field>
      <field name="signals" writable="1">
        <type name="DBusSignalInfo" c:type="GDBusSignalInfo**"/>
      </field>
      <field name="properties" writable="1">
        <type name="DBusPropertyInfo" c:type="GDBusPropertyInfo**"/>
      </field>
      <field name="annotations" writable="1">
        <type name="DBusAnnotationInfo" c:type="GDBusAnnotationInfo**"/>
      </field>
      <method name="lookup_method"
              c:identifier="g_dbus_interface_info_lookup_method">
        <return-value transfer-ownership="full">
          <type name="DBusMethodInfo" c:type="GDBusMethodInfo*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_signal"
              c:identifier="g_dbus_interface_info_lookup_signal">
        <return-value transfer-ownership="full">
          <type name="DBusSignalInfo" c:type="GDBusSignalInfo*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_property"
              c:identifier="g_dbus_interface_info_lookup_property">
        <return-value transfer-ownership="full">
          <type name="DBusPropertyInfo" c:type="GDBusPropertyInfo*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_xml"
              c:identifier="g_dbus_interface_info_generate_xml">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="indent" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="string_builder" transfer-ownership="none">
            <type name="GLib.String" c:type="GString*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="g_dbus_interface_info_ref">
        <return-value transfer-ownership="full">
          <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="g_dbus_interface_info_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <callback name="DBusInterfaceMethodCallFunc"
              c:type="GDBusInterfaceMethodCallFunc"
              version="2.26">
      <doc xml:whitespace="preserve">The type of the @method_call function in #GDBusInterfaceVTable.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GDBusConnection.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="sender" transfer-ownership="none">
          <doc xml:whitespace="preserve">The unique bus name of the remote caller.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <doc xml:whitespace="preserve">The object path that the method was invoked on.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The D-Bus interface name the method was invoked on.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="method_name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The name of the method that was invoked.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GVariant tuple with parameters.</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
        <parameter name="invocation" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GDBusMethodInvocation object that can be used to return a value or error.</doc>
          <type name="DBusMethodInvocation" c:type="GDBusMethodInvocation*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="7">
          <doc xml:whitespace="preserve">The @user_data #gpointer passed to g_dbus_connection_register_object().</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="DBusInterfaceSetPropertyFunc"
              c:type="GDBusInterfaceSetPropertyFunc"
              version="2.26">
      <doc xml:whitespace="preserve">The type of the @set_property function in #GDBusInterfaceVTable.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if the property was set to @value, %FALSE if @error is set.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GDBusConnection.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="sender" transfer-ownership="none">
          <doc xml:whitespace="preserve">The unique bus name of the remote caller.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <doc xml:whitespace="preserve">The object path that the method was invoked on.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The D-Bus interface name for the property.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="property_name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The name of the property to get the value of.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="value" transfer-ownership="none">
          <doc xml:whitespace="preserve">The value to set the property to.</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <doc xml:whitespace="preserve">Return location for error.</doc>
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="7">
          <doc xml:whitespace="preserve">The @user_data #gpointer passed to g_dbus_connection_register_object().</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="DBusInterfaceVTable"
            c:type="GDBusInterfaceVTable"
            version="2.26">
      <doc xml:whitespace="preserve">Virtual table for handling properties and method calls for a D-Bus
interface.
If you want to handle getting/setting D-Bus properties asynchronously, simply
register an object with the &lt;literal&gt;org.freedesktop.DBus.Properties&lt;/literal&gt;
D-Bus interface using g_dbus_connection_register_object().</doc>
      <field name="method_call" writable="1">
        <type name="DBusInterfaceMethodCallFunc"
              c:type="GDBusInterfaceMethodCallFunc"/>
      </field>
      <field name="get_property" writable="1">
        <type name="DBusInterfaceGetPropertyFunc"
              c:type="GDBusInterfaceGetPropertyFunc"/>
      </field>
      <field name="set_property" writable="1">
        <type name="DBusInterfaceSetPropertyFunc"
              c:type="GDBusInterfaceSetPropertyFunc"/>
      </field>
      <field name="padding" writable="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="8">
          <type name="any"/>
        </array>
      </field>
    </record>
    <class name="DBusMessage"
           c:type="GDBusMessage"
           parent="GObject.Object"
           glib:type-name="GDBusMessage"
           glib:get-type="g_dbus_message_get_type">
      <constructor name="new" c:identifier="g_dbus_message_new">
        <return-value transfer-ownership="full">
          <type name="DBusMessage" c:type="GDBusMessage*"/>
        </return-value>
      </constructor>
      <constructor name="new_signal" c:identifier="g_dbus_message_new_signal">
        <return-value transfer-ownership="full">
          <type name="DBusMessage" c:type="GDBusMessage*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="interface_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="signal" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_method_call"
                   c:identifier="g_dbus_message_new_method_call">
        <return-value transfer-ownership="full">
          <type name="DBusMessage" c:type="GDBusMessage*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="interface_" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="method" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_method_reply"
                   c:identifier="g_dbus_message_new_method_reply">
        <return-value transfer-ownership="full">
          <type name="DBusMessage" c:type="GDBusMessage*"/>
        </return-value>
        <parameters>
          <parameter name="method_call_message" transfer-ownership="none">
            <type name="DBusMessage" c:type="GDBusMessage*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_method_error"
                   c:identifier="g_dbus_message_new_method_error"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="DBusMessage" c:type="GDBusMessage*"/>
        </return-value>
        <parameters>
          <parameter name="method_call_message" transfer-ownership="none">
            <type name="DBusMessage" c:type="GDBusMessage*"/>
          </parameter>
          <parameter name="error_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="error_message_format" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_method_error_literal"
                   c:identifier="g_dbus_message_new_method_error_literal">
        <return-value transfer-ownership="full">
          <type name="DBusMessage" c:type="GDBusMessage*"/>
        </return-value>
        <parameters>
          <parameter name="method_call_message" transfer-ownership="none">
            <type name="DBusMessage" c:type="GDBusMessage*"/>
          </parameter>
          <parameter name="error_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="error_message" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_blob"
                   c:identifier="g_dbus_message_new_from_blob"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusMessage" c:type="GDBusMessage*"/>
        </return-value>
        <parameters>
          <parameter name="blob" transfer-ownership="none">
            <array c:type="guchar*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="blob_len" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="capabilities" transfer-ownership="none">
            <type name="DBusCapabilityFlags" c:type="GDBusCapabilityFlags"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="bytes_needed"
                c:identifier="g_dbus_message_bytes_needed"
                throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="blob" transfer-ownership="none">
            <array c:type="guchar*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="blob_len" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </function>
      <method name="print" c:identifier="g_dbus_message_print">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="indent" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_byte_order"
              c:identifier="g_dbus_message_get_byte_order">
        <return-value transfer-ownership="full">
          <type name="DBusMessageByteOrder" c:type="GDBusMessageByteOrder"/>
        </return-value>
      </method>
      <method name="set_byte_order"
              c:identifier="g_dbus_message_set_byte_order">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="byte_order" transfer-ownership="none">
            <type name="DBusMessageByteOrder" c:type="GDBusMessageByteOrder"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_message_type"
              c:identifier="g_dbus_message_get_message_type">
        <return-value transfer-ownership="full">
          <type name="DBusMessageType" c:type="GDBusMessageType"/>
        </return-value>
      </method>
      <method name="set_message_type"
              c:identifier="g_dbus_message_set_message_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="DBusMessageType" c:type="GDBusMessageType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_flags" c:identifier="g_dbus_message_get_flags">
        <return-value transfer-ownership="full">
          <type name="DBusMessageFlags" c:type="GDBusMessageFlags"/>
        </return-value>
      </method>
      <method name="set_flags" c:identifier="g_dbus_message_set_flags">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusMessageFlags" c:type="GDBusMessageFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_serial" c:identifier="g_dbus_message_get_serial">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="set_serial" c:identifier="g_dbus_message_set_serial">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="serial" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_header" c:identifier="g_dbus_message_get_header">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="header_field" transfer-ownership="none">
            <type name="DBusMessageHeaderField"
                  c:type="GDBusMessageHeaderField"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_header" c:identifier="g_dbus_message_set_header">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="header_field" transfer-ownership="none">
            <type name="DBusMessageHeaderField"
                  c:type="GDBusMessageHeaderField"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_header_fields"
              c:identifier="g_dbus_message_get_header_fields">
        <return-value transfer-ownership="full">
          <array c:type="guchar*">
            <type name="uint8"/>
          </array>
        </return-value>
      </method>
      <method name="get_body" c:identifier="g_dbus_message_get_body">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
      </method>
      <method name="set_body" c:identifier="g_dbus_message_set_body">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="body" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_unix_fd_list"
              c:identifier="g_dbus_message_get_unix_fd_list">
        <return-value transfer-ownership="full">
          <type name="UnixFDList" c:type="GUnixFDList*"/>
        </return-value>
      </method>
      <method name="set_unix_fd_list"
              c:identifier="g_dbus_message_set_unix_fd_list">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="fd_list" transfer-ownership="none">
            <type name="UnixFDList" c:type="GUnixFDList*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_reply_serial"
              c:identifier="g_dbus_message_get_reply_serial">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="set_reply_serial"
              c:identifier="g_dbus_message_set_reply_serial">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interface" c:identifier="g_dbus_message_get_interface">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_interface" c:identifier="g_dbus_message_set_interface">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_member" c:identifier="g_dbus_message_get_member">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_member" c:identifier="g_dbus_message_set_member">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_path" c:identifier="g_dbus_message_get_path">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_path" c:identifier="g_dbus_message_set_path">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_sender" c:identifier="g_dbus_message_get_sender">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_sender" c:identifier="g_dbus_message_set_sender">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_destination"
              c:identifier="g_dbus_message_get_destination">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_destination"
              c:identifier="g_dbus_message_set_destination">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_error_name"
              c:identifier="g_dbus_message_get_error_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_error_name"
              c:identifier="g_dbus_message_set_error_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_signature" c:identifier="g_dbus_message_get_signature">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_signature" c:identifier="g_dbus_message_set_signature">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_num_unix_fds"
              c:identifier="g_dbus_message_get_num_unix_fds">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
      </method>
      <method name="set_num_unix_fds"
              c:identifier="g_dbus_message_set_num_unix_fds">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="value" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_arg0" c:identifier="g_dbus_message_get_arg0">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="to_blob" c:identifier="g_dbus_message_to_blob" throws="1">
        <return-value transfer-ownership="full">
          <array c:type="guchar*">
            <type name="uint8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="out_size"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="capabilities" transfer-ownership="none">
            <type name="DBusCapabilityFlags" c:type="GDBusCapabilityFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_gerror"
              c:identifier="g_dbus_message_to_gerror"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
    </class>
    <enumeration name="DBusMessageByteOrder"
                 version="2.26"
                 glib:type-name="GDBusMessageByteOrder"
                 glib:get-type="g_dbus_message_byte_order_get_type"
                 c:type="GDBusMessageByteOrder">
      <doc xml:whitespace="preserve">Enumeration used to describe the byte order of a D-Bus message.</doc>
      <member name="big_endian"
              value="66"
              c:identifier="G_DBUS_MESSAGE_BYTE_ORDER_BIG_ENDIAN"
              glib:nick="big-endian"/>
      <member name="little_endian"
              value="108"
              c:identifier="G_DBUS_MESSAGE_BYTE_ORDER_LITTLE_ENDIAN"
              glib:nick="little-endian"/>
    </enumeration>
    <callback name="DBusMessageFilterFunction"
              c:type="GDBusMessageFilterFunction"
              version="2.26">
      <doc xml:whitespace="preserve">Signature for function used in g_dbus_connection_add_filter().
If you modify an outgoing message, make sure to return
%G_DBUS_MESSAGE_FILTER_RESULT_MESSAGE_ALTERED instead of
%G_DBUS_MESSAGE_FILTER_RESULT_NO_EFFECT so the message can be
re-serialized. If an error occurs during re-serialization, a
warning will be printed on standard error.
describing what to do with @message.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">A value from the #GDBusMessageFilterResult enumeration</doc>
        <type name="DBusMessageFilterResult"
              c:type="GDBusMessageFilterResult"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GDBusConnection.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="message" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GDBusMessage.</doc>
          <type name="DBusMessage" c:type="GDBusMessage*"/>
        </parameter>
        <parameter name="incoming" transfer-ownership="none">
          <doc xml:whitespace="preserve">%TRUE if it is a message received from the other peer, %FALSE if it is a message to be sent to the other peer.</doc>
          <type name="boolean" c:type="gboolean"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <doc xml:whitespace="preserve">User data passed when adding the filter.</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="DBusMessageFilterResult"
                 version="2.26"
                 glib:type-name="GDBusMessageFilterResult"
                 glib:get-type="g_dbus_message_filter_result_get_type"
                 c:type="GDBusMessageFilterResult">
      <doc xml:whitespace="preserve">Possible return values for #GDBusMessageFilterFunction when
handling a #GDBusMessage.</doc>
      <member name="no_effect"
              value="0"
              c:identifier="G_DBUS_MESSAGE_FILTER_RESULT_NO_EFFECT"
              glib:nick="no-effect"/>
      <member name="message_consumed"
              value="1"
              c:identifier="G_DBUS_MESSAGE_FILTER_RESULT_MESSAGE_CONSUMED"
              glib:nick="message-consumed"/>
      <member name="message_altered"
              value="2"
              c:identifier="G_DBUS_MESSAGE_FILTER_RESULT_MESSAGE_ALTERED"
              glib:nick="message-altered"/>
    </enumeration>
    <bitfield name="DBusMessageFlags"
              version="2.26"
              glib:type-name="GDBusMessageFlags"
              glib:get-type="g_dbus_message_flags_get_type"
              c:type="GDBusMessageFlags">
      <doc xml:whitespace="preserve">Message flags used in #GDBusMessage.</doc>
      <member name="none"
              value="0"
              c:identifier="G_DBUS_MESSAGE_FLAGS_NONE"
              glib:nick="none"/>
      <member name="no_reply_expected"
              value="1"
              c:identifier="G_DBUS_MESSAGE_FLAGS_NO_REPLY_EXPECTED"
              glib:nick="no-reply-expected"/>
      <member name="no_auto_start"
              value="2"
              c:identifier="G_DBUS_MESSAGE_FLAGS_NO_AUTO_START"
              glib:nick="no-auto-start"/>
    </bitfield>
    <enumeration name="DBusMessageHeaderField"
                 version="2.26"
                 glib:type-name="GDBusMessageHeaderField"
                 glib:get-type="g_dbus_message_header_field_get_type"
                 c:type="GDBusMessageHeaderField">
      <doc xml:whitespace="preserve">Header fields used in #GDBusMessage.</doc>
      <member name="invalid"
              value="0"
              c:identifier="G_DBUS_MESSAGE_HEADER_FIELD_INVALID"
              glib:nick="invalid"/>
      <member name="path"
              value="1"
              c:identifier="G_DBUS_MESSAGE_HEADER_FIELD_PATH"
              glib:nick="path"/>
      <member name="interface"
              value="2"
              c:identifier="G_DBUS_MESSAGE_HEADER_FIELD_INTERFACE"
              glib:nick="interface"/>
      <member name="member"
              value="3"
              c:identifier="G_DBUS_MESSAGE_HEADER_FIELD_MEMBER"
              glib:nick="member"/>
      <member name="error_name"
              value="4"
              c:identifier="G_DBUS_MESSAGE_HEADER_FIELD_ERROR_NAME"
              glib:nick="error-name"/>
      <member name="reply_serial"
              value="5"
              c:identifier="G_DBUS_MESSAGE_HEADER_FIELD_REPLY_SERIAL"
              glib:nick="reply-serial"/>
      <member name="destination"
              value="6"
              c:identifier="G_DBUS_MESSAGE_HEADER_FIELD_DESTINATION"
              glib:nick="destination"/>
      <member name="sender"
              value="7"
              c:identifier="G_DBUS_MESSAGE_HEADER_FIELD_SENDER"
              glib:nick="sender"/>
      <member name="signature"
              value="8"
              c:identifier="G_DBUS_MESSAGE_HEADER_FIELD_SIGNATURE"
              glib:nick="signature"/>
      <member name="num_unix_fds"
              value="9"
              c:identifier="G_DBUS_MESSAGE_HEADER_FIELD_NUM_UNIX_FDS"
              glib:nick="num-unix-fds"/>
    </enumeration>
    <enumeration name="DBusMessageType"
                 version="2.26"
                 glib:type-name="GDBusMessageType"
                 glib:get-type="g_dbus_message_type_get_type"
                 c:type="GDBusMessageType">
      <doc xml:whitespace="preserve">Message types used in #GDBusMessage.</doc>
      <member name="invalid"
              value="0"
              c:identifier="G_DBUS_MESSAGE_TYPE_INVALID"
              glib:nick="invalid"/>
      <member name="method_call"
              value="1"
              c:identifier="G_DBUS_MESSAGE_TYPE_METHOD_CALL"
              glib:nick="method-call"/>
      <member name="method_return"
              value="2"
              c:identifier="G_DBUS_MESSAGE_TYPE_METHOD_RETURN"
              glib:nick="method-return"/>
      <member name="error"
              value="3"
              c:identifier="G_DBUS_MESSAGE_TYPE_ERROR"
              glib:nick="error"/>
      <member name="signal"
              value="4"
              c:identifier="G_DBUS_MESSAGE_TYPE_SIGNAL"
              glib:nick="signal"/>
    </enumeration>
    <record name="DBusMethodInfo"
            c:type="GDBusMethodInfo"
            version="2.26"
            glib:type-name="GDBusMethodInfo"
            glib:get-type="g_dbus_method_info_get_type">
      <doc xml:whitespace="preserve">Information about a method on an D-Bus interface.</doc>
      <field name="ref_count" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="in_args" writable="1">
        <type name="DBusArgInfo" c:type="GDBusArgInfo**"/>
      </field>
      <field name="out_args" writable="1">
        <type name="DBusArgInfo" c:type="GDBusArgInfo**"/>
      </field>
      <field name="annotations" writable="1">
        <type name="DBusAnnotationInfo" c:type="GDBusAnnotationInfo**"/>
      </field>
      <method name="ref" c:identifier="g_dbus_method_info_ref">
        <return-value transfer-ownership="full">
          <type name="DBusMethodInfo" c:type="GDBusMethodInfo*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="g_dbus_method_info_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <class name="DBusMethodInvocation"
           c:type="GDBusMethodInvocation"
           parent="GObject.Object"
           glib:type-name="GDBusMethodInvocation"
           glib:get-type="g_dbus_method_invocation_get_type">
      <method name="get_sender"
              c:identifier="g_dbus_method_invocation_get_sender">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_object_path"
              c:identifier="g_dbus_method_invocation_get_object_path">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_interface_name"
              c:identifier="g_dbus_method_invocation_get_interface_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_method_name"
              c:identifier="g_dbus_method_invocation_get_method_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_method_info"
              c:identifier="g_dbus_method_invocation_get_method_info">
        <return-value transfer-ownership="none">
          <type name="DBusMethodInfo" c:type="GDBusMethodInfo*"/>
        </return-value>
      </method>
      <method name="get_connection"
              c:identifier="g_dbus_method_invocation_get_connection">
        <return-value transfer-ownership="full">
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </return-value>
      </method>
      <method name="get_message"
              c:identifier="g_dbus_method_invocation_get_message">
        <return-value transfer-ownership="full">
          <type name="DBusMessage" c:type="GDBusMessage*"/>
        </return-value>
      </method>
      <method name="get_parameters"
              c:identifier="g_dbus_method_invocation_get_parameters">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
      </method>
      <method name="get_user_data"
              c:identifier="g_dbus_method_invocation_get_user_data">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="return_value"
              c:identifier="g_dbus_method_invocation_return_value">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="parameters" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="return_error"
              c:identifier="g_dbus_method_invocation_return_error"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="domain" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="code" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="return_error_literal"
              c:identifier="g_dbus_method_invocation_return_error_literal">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="domain" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="code" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="message" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="return_gerror"
              c:identifier="g_dbus_method_invocation_return_gerror">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="error" transfer-ownership="none">
            <type name="GLib.Error" c:type="GError*"/>
          </parameter>
        </parameters>
      </method>
      <method name="return_dbus_error"
              c:identifier="g_dbus_method_invocation_return_dbus_error">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="error_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="error_message" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="DBusNodeInfo"
            c:type="GDBusNodeInfo"
            version="2.26"
            glib:type-name="GDBusNodeInfo"
            glib:get-type="g_dbus_node_info_get_type">
      <doc xml:whitespace="preserve">Information about nodes in a remote object hierarchy.</doc>
      <field name="ref_count" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="path" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="interfaces" writable="1">
        <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo**"/>
      </field>
      <field name="nodes" writable="1">
        <type name="DBusNodeInfo" c:type="GDBusNodeInfo**"/>
      </field>
      <field name="annotations" writable="1">
        <type name="DBusAnnotationInfo" c:type="GDBusAnnotationInfo**"/>
      </field>
      <constructor name="new_for_xml"
                   c:identifier="g_dbus_node_info_new_for_xml"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusNodeInfo" c:type="GDBusNodeInfo*"/>
        </return-value>
        <parameters>
          <parameter name="xml_data" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="lookup_interface"
              c:identifier="g_dbus_node_info_lookup_interface">
        <return-value transfer-ownership="full">
          <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="generate_xml" c:identifier="g_dbus_node_info_generate_xml">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="indent" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
          <parameter name="string_builder" transfer-ownership="none">
            <type name="GLib.String" c:type="GString*"/>
          </parameter>
        </parameters>
      </method>
      <method name="ref" c:identifier="g_dbus_node_info_ref">
        <return-value transfer-ownership="full">
          <type name="DBusNodeInfo" c:type="GDBusNodeInfo*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="g_dbus_node_info_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <record name="DBusPropertyInfo"
            c:type="GDBusPropertyInfo"
            version="2.26"
            glib:type-name="GDBusPropertyInfo"
            glib:get-type="g_dbus_property_info_get_type">
      <doc xml:whitespace="preserve">Information about a D-Bus property on a D-Bus interface.</doc>
      <field name="ref_count" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="signature" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="flags" writable="1">
        <type name="DBusPropertyInfoFlags" c:type="GDBusPropertyInfoFlags"/>
      </field>
      <field name="annotations" writable="1">
        <type name="DBusAnnotationInfo" c:type="GDBusAnnotationInfo**"/>
      </field>
      <method name="ref" c:identifier="g_dbus_property_info_ref">
        <return-value transfer-ownership="full">
          <type name="DBusPropertyInfo" c:type="GDBusPropertyInfo*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="g_dbus_property_info_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <bitfield name="DBusPropertyInfoFlags"
              version="2.26"
              glib:type-name="GDBusPropertyInfoFlags"
              glib:get-type="g_dbus_property_info_flags_get_type"
              c:type="GDBusPropertyInfoFlags">
      <doc xml:whitespace="preserve">Flags describing the access control of a D-Bus property.</doc>
      <member name="none"
              value="0"
              c:identifier="G_DBUS_PROPERTY_INFO_FLAGS_NONE"
              glib:nick="none"/>
      <member name="readable"
              value="1"
              c:identifier="G_DBUS_PROPERTY_INFO_FLAGS_READABLE"
              glib:nick="readable"/>
      <member name="writable"
              value="2"
              c:identifier="G_DBUS_PROPERTY_INFO_FLAGS_WRITABLE"
              glib:nick="writable"/>
    </bitfield>
    <class name="DBusProxy"
           c:type="GDBusProxy"
           version="2.26"
           parent="GObject.Object"
           glib:type-name="GDBusProxy"
           glib:get-type="g_dbus_proxy_get_type"
           glib:type-struct="DBusProxyClass">
      <doc xml:whitespace="preserve">The #GDBusProxy structure contains only private data and
should only be accessed using the provided API.</doc>
      <implements name="AsyncInitable"/>
      <implements name="Initable"/>
      <constructor name="new_finish"
                   c:identifier="g_dbus_proxy_new_finish"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusProxy" c:type="GDBusProxy*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_sync"
                   c:identifier="g_dbus_proxy_new_sync"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusProxy" c:type="GDBusProxy*"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <type name="DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="info" transfer-ownership="none" allow-none="1">
            <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none" allow-none="1">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="interface_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_finish"
                   c:identifier="g_dbus_proxy_new_for_bus_finish"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusProxy" c:type="GDBusProxy*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_for_bus_sync"
                   c:identifier="g_dbus_proxy_new_for_bus_sync"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusProxy" c:type="GDBusProxy*"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <type name="BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="interface_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="new" c:identifier="g_dbus_proxy_new">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <type name="DBusConnection" c:type="GDBusConnection*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="interface_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="8">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <function name="new_for_bus" c:identifier="g_dbus_proxy_new_for_bus">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="bus_type" transfer-ownership="none">
            <type name="BusType" c:type="GBusType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusProxyFlags" c:type="GDBusProxyFlags"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
          </parameter>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="object_path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="interface_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="8">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="properties_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="changed_properties" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="invalidated_properties" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="signal">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sender_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="signal_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="parameters" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_connection" c:identifier="g_dbus_proxy_get_connection">
        <return-value transfer-ownership="full">
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </return-value>
      </method>
      <method name="get_flags" c:identifier="g_dbus_proxy_get_flags">
        <return-value transfer-ownership="full">
          <type name="DBusProxyFlags" c:type="GDBusProxyFlags"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="g_dbus_proxy_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_name_owner" c:identifier="g_dbus_proxy_get_name_owner">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_object_path"
              c:identifier="g_dbus_proxy_get_object_path">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_interface_name"
              c:identifier="g_dbus_proxy_get_interface_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_default_timeout"
              c:identifier="g_dbus_proxy_get_default_timeout">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="set_default_timeout"
              c:identifier="g_dbus_proxy_set_default_timeout">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="timeout_msec" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_interface_info"
              c:identifier="g_dbus_proxy_get_interface_info">
        <return-value transfer-ownership="full">
          <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
        </return-value>
      </method>
      <method name="set_interface_info"
              c:identifier="g_dbus_proxy_set_interface_info">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cached_property"
              c:identifier="g_dbus_proxy_get_cached_property">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="property_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cached_property"
              c:identifier="g_dbus_proxy_set_cached_property">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="property_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_cached_property_names"
              c:identifier="g_dbus_proxy_get_cached_property_names">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="call" c:identifier="g_dbus_proxy_call">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="method_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="parameters" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusCallFlags" c:type="GDBusCallFlags"/>
          </parameter>
          <parameter name="timeout_msec" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="7">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_finish"
              c:identifier="g_dbus_proxy_call_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="call_sync"
              c:identifier="g_dbus_proxy_call_sync"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="method_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="parameters" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusCallFlags" c:type="GDBusCallFlags"/>
          </parameter>
          <parameter name="timeout_msec" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <property name="g-bus-type"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="BusType" c:type="GBusType"/>
      </property>
      <property name="g-connection"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DBusConnection" c:type="GDBusConnection"/>
      </property>
      <property name="g-default-timeout"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="g-flags"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DBusProxyFlags" c:type="GDBusProxyFlags"/>
      </property>
      <property name="g-interface-info" writable="1" transfer-ownership="none">
        <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo"/>
      </property>
      <property name="g-interface-name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="g-name"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="g-name-owner" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="g-object-path"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="DBusProxyPrivate" c:type="GDBusProxyPrivate*"/>
      </field>
      <glib:signal name="g-properties-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Strv" c:type="GStrv"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="g-signal">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DBusProxyClass"
            c:type="GDBusProxyClass"
            glib:is-gtype-struct-for="DBusProxy"
            version="2.26">
      <doc xml:whitespace="preserve">Class structure for #GDBusProxy.</doc>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="properties_changed">
        <callback name="properties_changed" c:type="g_properties_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="DBusProxy" c:type="GDBusProxy*"/>
            </parameter>
            <parameter name="changed_properties" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
            <parameter name="invalidated_properties" transfer-ownership="none">
              <array c:type="gchar**">
                <type name="utf8"/>
              </array>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="signal">
        <callback name="signal" c:type="g_signal">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="DBusProxy" c:type="GDBusProxy*"/>
            </parameter>
            <parameter name="sender_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="signal_name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="parameters" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding">
        <array zero-terminated="0" c:type="gpointer" fixed-size="32">
          <type name="any"/>
        </array>
      </field>
    </record>
    <bitfield name="DBusProxyFlags"
              version="2.26"
              glib:type-name="GDBusProxyFlags"
              glib:get-type="g_dbus_proxy_flags_get_type"
              c:type="GDBusProxyFlags">
      <doc xml:whitespace="preserve">Flags used when constructing an instance of a #GDBusProxy derived class.</doc>
      <member name="none"
              value="0"
              c:identifier="G_DBUS_PROXY_FLAGS_NONE"
              glib:nick="none"/>
      <member name="do_not_load_properties"
              value="1"
              c:identifier="G_DBUS_PROXY_FLAGS_DO_NOT_LOAD_PROPERTIES"
              glib:nick="do-not-load-properties"/>
      <member name="do_not_connect_signals"
              value="2"
              c:identifier="G_DBUS_PROXY_FLAGS_DO_NOT_CONNECT_SIGNALS"
              glib:nick="do-not-connect-signals"/>
      <member name="do_not_auto_start"
              value="4"
              c:identifier="G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START"
              glib:nick="do-not-auto-start"/>
    </bitfield>
    <record name="DBusProxyPrivate" c:type="GDBusProxyPrivate">
    </record>
    <bitfield name="DBusSendMessageFlags"
              version="2.26"
              glib:type-name="GDBusSendMessageFlags"
              glib:get-type="g_dbus_send_message_flags_get_type"
              c:type="GDBusSendMessageFlags">
      <doc xml:whitespace="preserve">Flags used when sending #GDBusMessage&lt;!-- --&gt;s on a #GDBusConnection.</doc>
      <member name="none"
              value="0"
              c:identifier="G_DBUS_SEND_MESSAGE_FLAGS_NONE"
              glib:nick="none"/>
      <member name="preserve_serial"
              value="1"
              c:identifier="G_DBUS_SEND_MESSAGE_FLAGS_PRESERVE_SERIAL"
              glib:nick="preserve-serial"/>
    </bitfield>
    <class name="DBusServer"
           c:type="GDBusServer"
           parent="GObject.Object"
           glib:type-name="GDBusServer"
           glib:get-type="g_dbus_server_get_type">
      <implements name="Initable"/>
      <constructor name="new_sync"
                   c:identifier="g_dbus_server_new_sync"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="DBusServer" c:type="GDBusServer*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="DBusServerFlags" c:type="GDBusServerFlags"/>
          </parameter>
          <parameter name="guid" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="observer" transfer-ownership="none">
            <type name="DBusAuthObserver" c:type="GDBusAuthObserver*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_client_address"
              c:identifier="g_dbus_server_get_client_address">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_guid" c:identifier="g_dbus_server_get_guid">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_flags" c:identifier="g_dbus_server_get_flags">
        <return-value transfer-ownership="full">
          <type name="DBusServerFlags" c:type="GDBusServerFlags"/>
        </return-value>
      </method>
      <method name="start" c:identifier="g_dbus_server_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="stop" c:identifier="g_dbus_server_stop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="is_active" c:identifier="g_dbus_server_is_active">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="active" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="address"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="authentication-observer"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DBusAuthObserver" c:type="GDBusAuthObserver"/>
      </property>
      <property name="client-address" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="flags"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="DBusServerFlags" c:type="GDBusServerFlags"/>
      </property>
      <property name="guid"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <glib:signal name="new-connection">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="DBusConnection" c:type="GDBusConnection"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <bitfield name="DBusServerFlags"
              version="2.26"
              glib:type-name="GDBusServerFlags"
              glib:get-type="g_dbus_server_flags_get_type"
              c:type="GDBusServerFlags">
      <doc xml:whitespace="preserve">Flags used when creating a #GDBusServer.</doc>
      <member name="none"
              value="0"
              c:identifier="G_DBUS_SERVER_FLAGS_NONE"
              glib:nick="none"/>
      <member name="run_in_thread"
              value="1"
              c:identifier="G_DBUS_SERVER_FLAGS_RUN_IN_THREAD"
              glib:nick="run-in-thread"/>
      <member name="authentication_allow_anonymous"
              value="2"
              c:identifier="G_DBUS_SERVER_FLAGS_AUTHENTICATION_ALLOW_ANONYMOUS"
              glib:nick="authentication-allow-anonymous"/>
    </bitfield>
    <callback name="DBusSignalCallback"
              c:type="GDBusSignalCallback"
              version="2.26">
      <doc xml:whitespace="preserve">Signature for callback function used in g_dbus_connection_signal_subscribe().</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GDBusConnection.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="sender_name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The unique bus name of the sender of the signal.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <doc xml:whitespace="preserve">The object path that the signal was emitted on.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The name of the interface.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="signal_name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The name of the signal.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GVariant tuple with parameters for the signal.</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <doc xml:whitespace="preserve">User data passed when subscribing to the signal.</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="DBusSignalFlags"
              version="2.26"
              glib:type-name="GDBusSignalFlags"
              glib:get-type="g_dbus_signal_flags_get_type"
              c:type="GDBusSignalFlags">
      <doc xml:whitespace="preserve">Flags used when subscribing to signals via g_dbus_connection_signal_subscribe().</doc>
      <member name="none"
              value="0"
              c:identifier="G_DBUS_SIGNAL_FLAGS_NONE"
              glib:nick="none"/>
    </bitfield>
    <record name="DBusSignalInfo"
            c:type="GDBusSignalInfo"
            version="2.26"
            glib:type-name="GDBusSignalInfo"
            glib:get-type="g_dbus_signal_info_get_type">
      <doc xml:whitespace="preserve">Information about a signal on a D-Bus interface.</doc>
      <field name="ref_count" writable="1">
        <type name="int" c:type="gint"/>
      </field>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="args" writable="1">
        <type name="DBusArgInfo" c:type="GDBusArgInfo**"/>
      </field>
      <field name="annotations" writable="1">
        <type name="DBusAnnotationInfo" c:type="GDBusAnnotationInfo**"/>
      </field>
      <method name="ref" c:identifier="g_dbus_signal_info_ref">
        <return-value transfer-ownership="full">
          <type name="DBusSignalInfo" c:type="GDBusSignalInfo*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="g_dbus_signal_info_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </record>
    <callback name="DBusSubtreeDispatchFunc"
              c:type="GDBusSubtreeDispatchFunc"
              version="2.26">
      <doc xml:whitespace="preserve">The type of the @dispatch function in #GDBusSubtreeVTable.
Subtrees are flat.  @node, if non-%NULL, is always exactly one</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">A #GDBusInterfaceVTable or %NULL if you don't want to handle the methods.</doc>
        <type name="DBusInterfaceVTable" c:type="GDBusInterfaceVTable*"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GDBusConnection.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="sender" transfer-ownership="none">
          <doc xml:whitespace="preserve">The unique bus name of the remote caller.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <doc xml:whitespace="preserve">The object path that was registered with g_dbus_connection_register_subtree().</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="interface_name" transfer-ownership="none">
          <doc xml:whitespace="preserve">The D-Bus interface name that the method call or property access is for.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="node" transfer-ownership="none">
          <doc xml:whitespace="preserve">A node that is a child of @object_path (relative to @object_path) or %NULL for the root of the subtree.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="out_user_data" transfer-ownership="none">
          <doc xml:whitespace="preserve">Return location for user data to pass to functions in the returned #GDBusInterfaceVTable (never %NULL).</doc>
          <type name="any" c:type="gpointer*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="6">
          <doc xml:whitespace="preserve">The @user_data #gpointer passed to g_dbus_connection_register_subtree().</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="DBusSubtreeEnumerateFunc"
              c:type="GDBusSubtreeEnumerateFunc"
              version="2.26">
      <doc xml:whitespace="preserve">The type of the @enumerate function in #GDBusSubtreeVTable.
This function is called when generating introspection data and also
when preparing to dispatch incoming messages in the event that the
%G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES flag is not
Hierarchies are not supported; the items that you return should not
contain the '/' character.
The return value will be freed with g_strfreev().</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">A newly allocated array of strings for node names that are children of @object_path.</doc>
        <array c:type="gchar**">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GDBusConnection.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="sender" transfer-ownership="none">
          <doc xml:whitespace="preserve">The unique bus name of the remote caller.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <doc xml:whitespace="preserve">The object path that was registered with g_dbus_connection_register_subtree().</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="3">
          <doc xml:whitespace="preserve">The @user_data #gpointer passed to g_dbus_connection_register_subtree().</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="DBusSubtreeFlags"
              version="2.26"
              glib:type-name="GDBusSubtreeFlags"
              glib:get-type="g_dbus_subtree_flags_get_type"
              c:type="GDBusSubtreeFlags">
      <doc xml:whitespace="preserve">Flags passed to g_dbus_connection_register_subtree().</doc>
      <member name="none"
              value="0"
              c:identifier="G_DBUS_SUBTREE_FLAGS_NONE"
              glib:nick="none"/>
      <member name="dispatch_to_unenumerated_nodes"
              value="1"
              c:identifier="G_DBUS_SUBTREE_FLAGS_DISPATCH_TO_UNENUMERATED_NODES"
              glib:nick="dispatch-to-unenumerated-nodes"/>
    </bitfield>
    <callback name="DBusSubtreeIntrospectFunc"
              c:type="GDBusSubtreeIntrospectFunc"
              version="2.26">
      <doc xml:whitespace="preserve">The type of the @introspect function in #GDBusSubtreeVTable.
Subtrees are flat.  @node, if non-%NULL, is always exactly one
This function should return %NULL to indicate that there is no object
at this node.
If this function returns non-%NULL, the return value is expected to
be a %NULL-terminated array of pointers to #GDBusInterfaceInfo
structures describing the interfaces implemented by @node.  This
array will have g_dbus_interface_info_unref() called on each item
before being freed with g_free().
The difference between returning %NULL and an array containing zero
items is that the standard DBus interfaces will returned to the
remote introspector in the empty array case, but not in the %NULL
case.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">A %NULL-terminated array of pointers to #GDBusInterfaceInfo, or %NULL.</doc>
        <type name="DBusInterfaceInfo" c:type="GDBusInterfaceInfo**"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <doc xml:whitespace="preserve">A #GDBusConnection.</doc>
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="sender" transfer-ownership="none">
          <doc xml:whitespace="preserve">The unique bus name of the remote caller.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="object_path" transfer-ownership="none">
          <doc xml:whitespace="preserve">The object path that was registered with g_dbus_connection_register_subtree().</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="node" transfer-ownership="none">
          <doc xml:whitespace="preserve">A node that is a child of @object_path (relative to @object_path) or %NULL for the root of the subtree.</doc>
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="4">
          <doc xml:whitespace="preserve">The @user_data #gpointer passed to g_dbus_connection_register_subtree().</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="DBusSubtreeVTable"
            c:type="GDBusSubtreeVTable"
            version="2.26">
      <doc xml:whitespace="preserve">Virtual table for handling subtrees registered with g_dbus_connection_register_subtree().</doc>
      <field name="enumerate" writable="1">
        <type name="DBusSubtreeEnumerateFunc"
              c:type="GDBusSubtreeEnumerateFunc"/>
      </field>
      <field name="introspect" writable="1">
        <type name="DBusSubtreeIntrospectFunc"
              c:type="GDBusSubtreeIntrospectFunc"/>
      </field>
      <field name="dispatch" writable="1">
        <type name="DBusSubtreeDispatchFunc"
              c:type="GDBusSubtreeDispatchFunc"/>
      </field>
      <field name="padding" writable="1">
        <array zero-terminated="0" c:type="gpointer" fixed-size="8">
          <type name="any"/>
        </array>
      </field>
    </record>
    <constant name="DESKTOP_APP_INFO_LOOKUP_EXTENSION_POINT_NAME"
              value="gio-desktop-app-info-lookup">
      <type name="utf8"/>
    </constant>
    <class name="DataInputStream"
           c:type="GDataInputStream"
           parent="BufferedInputStream"
           glib:type-name="GDataInputStream"
           glib:get-type="g_data_input_stream_get_type"
           glib:type-struct="DataInputStreamClass">
      <doc xml:whitespace="preserve">An implementation of #GBufferedInputStream that allows for high-level
data manipulation of arbitrary data (including binary operations).</doc>
      <constructor name="new" c:identifier="g_data_input_stream_new">
        <return-value transfer-ownership="full">
          <type name="DataInputStream" c:type="GDataInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_byte_order"
              c:identifier="g_data_input_stream_set_byte_order">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="order" transfer-ownership="none">
            <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_byte_order"
              c:identifier="g_data_input_stream_get_byte_order">
        <return-value transfer-ownership="full">
          <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
        </return-value>
      </method>
      <method name="set_newline_type"
              c:identifier="g_data_input_stream_set_newline_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="DataStreamNewlineType"
                  c:type="GDataStreamNewlineType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_newline_type"
              c:identifier="g_data_input_stream_get_newline_type">
        <return-value transfer-ownership="full">
          <type name="DataStreamNewlineType" c:type="GDataStreamNewlineType"/>
        </return-value>
      </method>
      <method name="read_byte"
              c:identifier="g_data_input_stream_read_byte"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint8" c:type="guchar"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_int16"
              c:identifier="g_data_input_stream_read_int16"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="int16" c:type="gint16"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_uint16"
              c:identifier="g_data_input_stream_read_uint16"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_int32"
              c:identifier="g_data_input_stream_read_int32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="int32" c:type="gint32"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_uint32"
              c:identifier="g_data_input_stream_read_uint32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_int64"
              c:identifier="g_data_input_stream_read_int64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="int64" c:type="gint64"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_uint64"
              c:identifier="g_data_input_stream_read_uint64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_line"
              c:identifier="g_data_input_stream_read_line"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_line_async"
              c:identifier="g_data_input_stream_read_line_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_line_finish"
              c:identifier="g_data_input_stream_read_line_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_until"
              c:identifier="g_data_input_stream_read_until"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="stop_chars" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_until_async"
              c:identifier="g_data_input_stream_read_until_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="stop_chars" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_until_finish"
              c:identifier="g_data_input_stream_read_until_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <property name="byte-order" writable="1" transfer-ownership="none">
        <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
      </property>
      <property name="newline-type" writable="1" transfer-ownership="none">
        <type name="DataStreamNewlineType" c:type="GDataStreamNewlineType"/>
      </property>
      <field name="parent_instance">
        <type name="BufferedInputStream" c:type="GBufferedInputStream"/>
      </field>
      <field name="priv">
        <type name="DataInputStreamPrivate" c:type="GDataInputStreamPrivate*"/>
      </field>
    </class>
    <record name="DataInputStreamClass"
            c:type="GDataInputStreamClass"
            glib:is-gtype-struct-for="DataInputStream">
      <field name="parent_class">
        <type name="BufferedInputStreamClass"
              c:type="GBufferedInputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DataInputStreamPrivate" c:type="GDataInputStreamPrivate">
    </record>
    <class name="DataOutputStream"
           c:type="GDataOutputStream"
           parent="FilterOutputStream"
           glib:type-name="GDataOutputStream"
           glib:get-type="g_data_output_stream_get_type"
           glib:type-struct="DataOutputStreamClass">
      <doc xml:whitespace="preserve">An implementation of #GBufferedOutputStream that allows for high-level
data manipulation of arbitrary data (including binary operations).</doc>
      <constructor name="new" c:identifier="g_data_output_stream_new">
        <return-value transfer-ownership="full">
          <type name="DataOutputStream" c:type="GDataOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="base_stream" transfer-ownership="none">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_byte_order"
              c:identifier="g_data_output_stream_set_byte_order">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="order" transfer-ownership="none">
            <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_byte_order"
              c:identifier="g_data_output_stream_get_byte_order">
        <return-value transfer-ownership="full">
          <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
        </return-value>
      </method>
      <method name="put_byte"
              c:identifier="g_data_output_stream_put_byte"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="uint8" c:type="guchar"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int16"
              c:identifier="g_data_output_stream_put_int16"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="int16" c:type="gint16"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint16"
              c:identifier="g_data_output_stream_put_uint16"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int32"
              c:identifier="g_data_output_stream_put_int32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint32"
              c:identifier="g_data_output_stream_put_uint32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_int64"
              c:identifier="g_data_output_stream_put_int64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_uint64"
              c:identifier="g_data_output_stream_put_uint64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="put_string"
              c:identifier="g_data_output_stream_put_string"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="str" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <property name="byte-order" writable="1" transfer-ownership="none">
        <type name="DataStreamByteOrder" c:type="GDataStreamByteOrder"/>
      </property>
      <field name="parent_instance">
        <type name="FilterOutputStream" c:type="GFilterOutputStream"/>
      </field>
      <field name="priv">
        <type name="DataOutputStreamPrivate"
              c:type="GDataOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="DataOutputStreamClass"
            c:type="GDataOutputStreamClass"
            glib:is-gtype-struct-for="DataOutputStream">
      <field name="parent_class">
        <type name="FilterOutputStreamClass"
              c:type="GFilterOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="DataOutputStreamPrivate" c:type="GDataOutputStreamPrivate">
    </record>
    <enumeration name="DataStreamByteOrder"
                 glib:type-name="GDataStreamByteOrder"
                 glib:get-type="g_data_stream_byte_order_get_type"
                 c:type="GDataStreamByteOrder">
      <doc xml:whitespace="preserve">#GDataStreamByteOrder is used to ensure proper endianness of streaming data sources
across various machine architectures.</doc>
      <member name="big_endian"
              value="0"
              c:identifier="G_DATA_STREAM_BYTE_ORDER_BIG_ENDIAN"
              glib:nick="big-endian"/>
      <member name="little_endian"
              value="1"
              c:identifier="G_DATA_STREAM_BYTE_ORDER_LITTLE_ENDIAN"
              glib:nick="little-endian"/>
      <member name="host_endian"
              value="2"
              c:identifier="G_DATA_STREAM_BYTE_ORDER_HOST_ENDIAN"
              glib:nick="host-endian"/>
    </enumeration>
    <enumeration name="DataStreamNewlineType"
                 glib:type-name="GDataStreamNewlineType"
                 glib:get-type="g_data_stream_newline_type_get_type"
                 c:type="GDataStreamNewlineType">
      <doc xml:whitespace="preserve">#GDataStreamNewlineType is used when checking for or setting the line endings for a given file.</doc>
      <member name="lf"
              value="0"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_LF"
              glib:nick="lf"/>
      <member name="cr"
              value="1"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_CR"
              glib:nick="cr"/>
      <member name="cr_lf"
              value="2"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_CR_LF"
              glib:nick="cr-lf"/>
      <member name="any"
              value="3"
              c:identifier="G_DATA_STREAM_NEWLINE_TYPE_ANY"
              glib:nick="any"/>
    </enumeration>
    <class name="DesktopAppInfo"
           c:type="GDesktopAppInfo"
           parent="GObject.Object"
           glib:type-name="GDesktopAppInfo"
           glib:get-type="g_desktop_app_info_get_type"
           glib:type-struct="DesktopAppInfoClass">
      <implements name="AppInfo"/>
      <constructor name="new_from_filename"
                   c:identifier="g_desktop_app_info_new_from_filename">
        <return-value transfer-ownership="full">
          <type name="DesktopAppInfo" c:type="GDesktopAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_keyfile"
                   c:identifier="g_desktop_app_info_new_from_keyfile">
        <return-value transfer-ownership="full">
          <type name="DesktopAppInfo" c:type="GDesktopAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="key_file" transfer-ownership="none">
            <type name="GLib.KeyFile" c:type="GKeyFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new" c:identifier="g_desktop_app_info_new">
        <return-value transfer-ownership="full">
          <type name="DesktopAppInfo" c:type="GDesktopAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="desktop_id" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="set_desktop_env"
                c:identifier="g_desktop_app_info_set_desktop_env">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="desktop_env" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_filename"
              c:identifier="g_desktop_app_info_get_filename">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_is_hidden"
              c:identifier="g_desktop_app_info_get_is_hidden">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
    </class>
    <record name="DesktopAppInfoClass"
            c:type="GDesktopAppInfoClass"
            glib:is-gtype-struct-for="DesktopAppInfo">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <interface name="DesktopAppInfoLookup"
               c:type="GDesktopAppInfoLookup"
               glib:type-name="GDesktopAppInfoLookup"
               glib:get-type="g_desktop_app_info_lookup_get_type"
               glib:type-struct="DesktopAppInfoLookupIface">
      <doc xml:whitespace="preserve">Interface that is used by backends to associate default
handlers with URI schemes.</doc>
      <virtual-method name="get_default_for_uri_scheme"
                      invoker="get_default_for_uri_scheme">
        <return-value transfer-ownership="full">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="uri_scheme" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_default_for_uri_scheme"
              c:identifier="g_desktop_app_info_lookup_get_default_for_uri_scheme">
        <return-value transfer-ownership="full">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="uri_scheme" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="DesktopAppInfoLookupIface"
            c:type="GDesktopAppInfoLookupIface"
            glib:is-gtype-struct-for="DesktopAppInfoLookup">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_default_for_uri_scheme">
        <callback name="get_default_for_uri_scheme"
                  c:type="get_default_for_uri_scheme">
          <return-value transfer-ownership="full">
            <type name="AppInfo" c:type="GAppInfo*"/>
          </return-value>
          <parameters>
            <parameter name="lookup" transfer-ownership="none">
              <type name="DesktopAppInfoLookup"
                    c:type="GDesktopAppInfoLookup*"/>
            </parameter>
            <parameter name="uri_scheme" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="Drive"
               c:type="GDrive"
               glib:type-name="GDrive"
               glib:get-type="g_drive_get_type"
               glib:type-struct="DriveIface">
      <doc xml:whitespace="preserve">Opaque drive object.</doc>
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="has_volumes" invoker="has_volumes">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_volumes" invoker="get_volumes">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Volume"/>
          </type>
        </return-value>
      </virtual-method>
      <virtual-method name="is_media_removable" invoker="is_media_removable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="has_media" invoker="has_media">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="is_media_check_automatic"
                      invoker="is_media_check_automatic">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_eject" invoker="can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_poll_for_media" invoker="can_poll_for_media">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="eject" invoker="eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_finish" invoker="eject_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="poll_for_media" invoker="poll_for_media">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="3">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="poll_for_media_finish"
                      invoker="poll_for_media_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_identifier" invoker="get_identifier">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enumerate_identifiers"
                      invoker="enumerate_identifiers">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </virtual-method>
      <virtual-method name="get_start_stop_type" invoker="get_start_stop_type">
        <return-value transfer-ownership="full">
          <type name="DriveStartStopType" c:type="GDriveStartStopType"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_start" invoker="can_start">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_start_degraded" invoker="can_start_degraded">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="start" invoker="start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="start_finish" invoker="start_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_stop" invoker="can_stop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="stop" invoker="stop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="stop_finish" invoker="stop_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_with_operation"
                      invoker="eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_with_operation_finish"
                      invoker="eject_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_name" c:identifier="g_drive_get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_icon" c:identifier="g_drive_get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="has_volumes" c:identifier="g_drive_has_volumes">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_volumes" c:identifier="g_drive_get_volumes">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Volume"/>
          </type>
        </return-value>
      </method>
      <method name="is_media_removable"
              c:identifier="g_drive_is_media_removable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_media" c:identifier="g_drive_has_media">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_media_check_automatic"
              c:identifier="g_drive_is_media_check_automatic">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="can_poll_for_media"
              c:identifier="g_drive_can_poll_for_media">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="can_eject" c:identifier="g_drive_can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="eject" c:identifier="g_drive_eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_finish"
              c:identifier="g_drive_eject_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll_for_media" c:identifier="g_drive_poll_for_media">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll_for_media_finish"
              c:identifier="g_drive_poll_for_media_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_identifier" c:identifier="g_drive_get_identifier">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_identifiers"
              c:identifier="g_drive_enumerate_identifiers">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_start_stop_type"
              c:identifier="g_drive_get_start_stop_type">
        <return-value transfer-ownership="full">
          <type name="DriveStartStopType" c:type="GDriveStartStopType"/>
        </return-value>
      </method>
      <method name="can_start" c:identifier="g_drive_can_start">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="can_start_degraded"
              c:identifier="g_drive_can_start_degraded">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="start" c:identifier="g_drive_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_finish"
              c:identifier="g_drive_start_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_stop" c:identifier="g_drive_can_stop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="stop" c:identifier="g_drive_stop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_finish" c:identifier="g_drive_stop_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_with_operation"
              c:identifier="g_drive_eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_with_operation_finish"
              c:identifier="g_drive_eject_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="disconnected">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="eject-button">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="stop-button">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="DriveIface"
            c:type="GDriveIface"
            glib:is-gtype-struct-for="Drive">
      <doc xml:whitespace="preserve">Interface for creating #GDrive implementations.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="disconnected">
        <callback name="disconnected" c:type="disconnected">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_button">
        <callback name="eject_button" c:type="eject_button">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon">
        <callback name="get_icon" c:type="get_icon">
          <return-value transfer-ownership="full">
            <type name="Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="has_volumes">
        <callback name="has_volumes" c:type="has_volumes">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_volumes">
        <callback name="get_volumes" c:type="get_volumes">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*">
              <type name="Volume"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_media_removable">
        <callback name="is_media_removable" c:type="is_media_removable">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="has_media">
        <callback name="has_media" c:type="has_media">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_media_check_automatic">
        <callback name="is_media_check_automatic"
                  c:type="is_media_check_automatic">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_eject">
        <callback name="can_eject" c:type="can_eject">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_poll_for_media">
        <callback name="can_poll_for_media" c:type="can_poll_for_media">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject">
        <callback name="eject" c:type="eject">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_finish">
        <callback name="eject_finish" c:type="eject_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="poll_for_media">
        <callback name="poll_for_media" c:type="poll_for_media">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="3">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="poll_for_media_finish">
        <callback name="poll_for_media_finish"
                  c:type="poll_for_media_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_identifier">
        <callback name="get_identifier" c:type="get_identifier">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="kind" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enumerate_identifiers">
        <callback name="enumerate_identifiers" c:type="enumerate_identifiers">
          <return-value transfer-ownership="full">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_start_stop_type">
        <callback name="get_start_stop_type" c:type="get_start_stop_type">
          <return-value transfer-ownership="full">
            <type name="DriveStartStopType" c:type="GDriveStartStopType"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_start">
        <callback name="can_start" c:type="can_start">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_start_degraded">
        <callback name="can_start_degraded" c:type="can_start_degraded">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="start">
        <callback name="start" c:type="start">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="start_finish">
        <callback name="start_finish" c:type="start_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_stop">
        <callback name="can_stop" c:type="can_stop">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop">
        <callback name="stop" c:type="stop">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop_finish">
        <callback name="stop_finish" c:type="stop_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop_button">
        <callback name="stop_button" c:type="stop_button">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation">
        <callback name="eject_with_operation" c:type="eject_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation_finish">
        <callback name="eject_with_operation_finish"
                  c:type="eject_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="DriveStartFlags"
                 version="2.22"
                 glib:type-name="GDriveStartFlags"
                 glib:get-type="g_drive_start_flags_get_type"
                 c:type="GDriveStartFlags">
      <doc xml:whitespace="preserve">Flags used when starting a drive.</doc>
      <member name="none"
              value="0"
              c:identifier="G_DRIVE_START_NONE"
              glib:nick="none"/>
    </enumeration>
    <enumeration name="DriveStartStopType"
                 version="2.22"
                 glib:type-name="GDriveStartStopType"
                 glib:get-type="g_drive_start_stop_type_get_type"
                 c:type="GDriveStartStopType">
      <doc xml:whitespace="preserve">Enumeration describing how a drive can be started/stopped.</doc>
      <member name="unknown"
              value="0"
              c:identifier="G_DRIVE_START_STOP_TYPE_UNKNOWN"
              glib:nick="unknown"/>
      <member name="shutdown"
              value="1"
              c:identifier="G_DRIVE_START_STOP_TYPE_SHUTDOWN"
              glib:nick="shutdown"/>
      <member name="network"
              value="2"
              c:identifier="G_DRIVE_START_STOP_TYPE_NETWORK"
              glib:nick="network"/>
      <member name="multidisk"
              value="3"
              c:identifier="G_DRIVE_START_STOP_TYPE_MULTIDISK"
              glib:nick="multidisk"/>
      <member name="password"
              value="4"
              c:identifier="G_DRIVE_START_STOP_TYPE_PASSWORD"
              glib:nick="password"/>
    </enumeration>
    <class name="Emblem"
           c:type="GEmblem"
           parent="GObject.Object"
           glib:type-name="GEmblem"
           glib:get-type="g_emblem_get_type"
           glib:type-struct="EmblemClass">
      <doc xml:whitespace="preserve">An object for Emblems</doc>
      <implements name="Icon"/>
      <constructor name="new" c:identifier="g_emblem_new">
        <return-value transfer-ownership="full">
          <type name="Emblem" c:type="GEmblem*"/>
        </return-value>
        <parameters>
          <parameter name="icon" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_origin"
                   c:identifier="g_emblem_new_with_origin">
        <return-value transfer-ownership="full">
          <type name="Emblem" c:type="GEmblem*"/>
        </return-value>
        <parameters>
          <parameter name="icon" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
          <parameter name="origin" transfer-ownership="none">
            <type name="EmblemOrigin" c:type="GEmblemOrigin"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_icon" c:identifier="g_emblem_get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="get_origin" c:identifier="g_emblem_get_origin">
        <return-value transfer-ownership="full">
          <type name="EmblemOrigin" c:type="GEmblemOrigin"/>
        </return-value>
      </method>
      <property name="icon"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GObject.Object" c:type="GObject"/>
      </property>
      <property name="origin"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="EmblemOrigin" c:type="GEmblemOrigin"/>
      </property>
    </class>
    <record name="EmblemClass"
            c:type="GEmblemClass"
            glib:is-gtype-struct-for="Emblem">
    </record>
    <enumeration name="EmblemOrigin"
                 version="2.18"
                 glib:type-name="GEmblemOrigin"
                 glib:get-type="g_emblem_origin_get_type"
                 c:type="GEmblemOrigin">
      <doc xml:whitespace="preserve">GEmblemOrigin is used to add information about the origin of the emblem
to #GEmblem.</doc>
      <member name="unknown"
              value="0"
              c:identifier="G_EMBLEM_ORIGIN_UNKNOWN"
              glib:nick="unknown"/>
      <member name="device"
              value="1"
              c:identifier="G_EMBLEM_ORIGIN_DEVICE"
              glib:nick="device"/>
      <member name="livemetadata"
              value="2"
              c:identifier="G_EMBLEM_ORIGIN_LIVEMETADATA"
              glib:nick="livemetadata"/>
      <member name="tag"
              value="3"
              c:identifier="G_EMBLEM_ORIGIN_TAG"
              glib:nick="tag"/>
    </enumeration>
    <class name="EmblemedIcon"
           c:type="GEmblemedIcon"
           parent="GObject.Object"
           glib:type-name="GEmblemedIcon"
           glib:get-type="g_emblemed_icon_get_type"
           glib:type-struct="EmblemedIconClass">
      <doc xml:whitespace="preserve">An implementation of #GIcon for icons with emblems.</doc>
      <implements name="Icon"/>
      <constructor name="new" c:identifier="g_emblemed_icon_new">
        <return-value transfer-ownership="full">
          <type name="EmblemedIcon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="icon" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
          <parameter name="emblem" transfer-ownership="none">
            <type name="Emblem" c:type="GEmblem*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_icon" c:identifier="g_emblemed_icon_get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="get_emblems" c:identifier="g_emblemed_icon_get_emblems">
        <return-value transfer-ownership="none">
          <type name="GLib.List" c:type="GList*">
            <type name="utf8"/>
          </type>
        </return-value>
      </method>
      <method name="add_emblem" c:identifier="g_emblemed_icon_add_emblem">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="emblem" transfer-ownership="none">
            <type name="Emblem" c:type="GEmblem*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="EmblemedIconClass"
            c:type="GEmblemedIconClass"
            glib:is-gtype-struct-for="EmblemedIcon">
    </record>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_DELETE"
              value="access::can-delete">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_EXECUTE"
              value="access::can-execute">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_READ" value="access::can-read">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_RENAME"
              value="access::can-rename">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_TRASH" value="access::can-trash">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ACCESS_CAN_WRITE" value="access::can-write">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_DOS_IS_ARCHIVE" value="dos::is-archive">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_DOS_IS_SYSTEM" value="dos::is-system">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ETAG_VALUE" value="etag::value">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_FILESYSTEM_FREE" value="filesystem::free">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_FILESYSTEM_READONLY"
              value="filesystem::readonly">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_FILESYSTEM_SIZE" value="filesystem::size">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_FILESYSTEM_TYPE" value="filesystem::type">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW"
              value="filesystem::use-preview">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_GVFS_BACKEND" value="gvfs::backend">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ID_FILE" value="id::file">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_ID_FILESYSTEM" value="id::filesystem">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_EJECT"
              value="mountable::can-eject">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_MOUNT"
              value="mountable::can-mount">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_POLL"
              value="mountable::can-poll">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_START"
              value="mountable::can-start">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_START_DEGRADED"
              value="mountable::can-start-degraded">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_STOP"
              value="mountable::can-stop">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_CAN_UNMOUNT"
              value="mountable::can-unmount">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_HAL_UDI"
              value="mountable::hal-udi">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_IS_MEDIA_CHECK_AUTOMATIC"
              value="mountable::is-media-check-automatic">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_START_STOP_TYPE"
              value="mountable::start-stop-type">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE"
              value="mountable::unix-device">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_MOUNTABLE_UNIX_DEVICE_FILE"
              value="mountable::unix-device-file">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_OWNER_GROUP" value="owner::group">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_OWNER_USER" value="owner::user">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_OWNER_USER_REAL" value="owner::user-real">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_PREVIEW_ICON" value="preview::icon">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_SELINUX_CONTEXT" value="selinux::context">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_ALLOCATED_SIZE"
              value="standard::allocated-size">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_CONTENT_TYPE"
              value="standard::content-type">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_COPY_NAME"
              value="standard::copy-name">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_DESCRIPTION"
              value="standard::description">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_DISPLAY_NAME"
              value="standard::display-name">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_EDIT_NAME"
              value="standard::edit-name">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_FAST_CONTENT_TYPE"
              value="standard::fast-content-type">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_ICON" value="standard::icon">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_IS_BACKUP"
              value="standard::is-backup">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_IS_HIDDEN"
              value="standard::is-hidden">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_IS_SYMLINK"
              value="standard::is-symlink">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_IS_VIRTUAL"
              value="standard::is-virtual">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_NAME" value="standard::name">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_SIZE" value="standard::size">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_SORT_ORDER"
              value="standard::sort-order">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_SYMLINK_TARGET"
              value="standard::symlink-target">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_TARGET_URI"
              value="standard::target-uri">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_STANDARD_TYPE" value="standard::type">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_THUMBNAILING_FAILED"
              value="thumbnail::failed">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_THUMBNAIL_PATH" value="thumbnail::path">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_ACCESS" value="time::access">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_ACCESS_USEC" value="time::access-usec">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_CHANGED" value="time::changed">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_CHANGED_USEC"
              value="time::changed-usec">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_CREATED" value="time::created">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_CREATED_USEC"
              value="time::created-usec">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_MODIFIED" value="time::modified">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TIME_MODIFIED_USEC"
              value="time::modified-usec">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TRASH_DELETION_DATE"
              value="trash::deletion-date">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TRASH_ITEM_COUNT" value="trash::item-count">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_TRASH_ORIG_PATH" value="trash::orig-path">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_BLOCKS" value="unix::blocks">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_BLOCK_SIZE" value="unix::block-size">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_DEVICE" value="unix::device">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_GID" value="unix::gid">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_INODE" value="unix::inode">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_IS_MOUNTPOINT"
              value="unix::is-mountpoint">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_MODE" value="unix::mode">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_NLINK" value="unix::nlink">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_RDEV" value="unix::rdev">
      <type name="utf8"/>
    </constant>
    <constant name="FILE_ATTRIBUTE_UNIX_UID" value="unix::uid">
      <type name="utf8"/>
    </constant>
    <interface name="File"
               c:type="GFile"
               glib:type-name="GFile"
               glib:get-type="g_file_get_type"
               glib:type-struct="FileIface">
      <doc xml:whitespace="preserve">A handle to an object implementing the #GFileIface interface.
Generally stores a location within the file system. Handles do not
necessarily represent files or directories that currently exist.</doc>
      <virtual-method name="dup" invoker="dup">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="hash">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="equal" invoker="equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file2" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_native" invoker="is_native">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="has_uri_scheme" invoker="has_uri_scheme">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="uri_scheme" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_uri_scheme" invoker="get_uri_scheme">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_basename" invoker="get_basename">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_path" invoker="get_path">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_uri" invoker="get_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_parse_name" invoker="get_parse_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_parent" invoker="get_parent">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="prefix_matches">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_relative_path" invoker="get_relative_path">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="descendant" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="resolve_relative_path"
                      invoker="resolve_relative_path">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="relative_path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_child_for_display_name"
                      invoker="get_child_for_display_name"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enumerate_children"
                      invoker="enumerate_children"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enumerate_children_async"
                      invoker="enumerate_children_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="6">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enumerate_children_finish"
                      invoker="enumerate_children_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info" invoker="query_info" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_async" invoker="query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="6">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_finish"
                      invoker="query_info_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_filesystem_info"
                      invoker="query_filesystem_info"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_filesystem_info_async"
                      invoker="query_filesystem_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_filesystem_info_finish"
                      invoker="query_filesystem_info_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="find_enclosing_mount"
                      invoker="find_enclosing_mount"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="find_enclosing_mount_async"
                      invoker="find_enclosing_mount_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="find_enclosing_mount_finish"
                      invoker="find_enclosing_mount_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_display_name"
                      invoker="set_display_name"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_display_name_async"
                      invoker="set_display_name_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_display_name_finish"
                      invoker="set_display_name_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_settable_attributes"
                      invoker="query_settable_attributes"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_writable_namespaces"
                      invoker="query_writable_namespaces"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attribute" invoker="set_attribute" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="FileAttributeType" c:type="GFileAttributeType"/>
          </parameter>
          <parameter name="value_p" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attributes_from_info"
                      invoker="set_attributes_from_info"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attributes_async"
                      invoker="set_attributes_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="6">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_attributes_finish"
                      invoker="set_attributes_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="info"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_fn" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_async" invoker="read_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_finish" invoker="read_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="append_to" invoker="append_to" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="append_to_async" invoker="append_to_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="append_to_finish"
                      invoker="append_to_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create" invoker="create" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_async" invoker="create_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_finish" invoker="create_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace" invoker="replace" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none" allow-none="1">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_async" invoker="replace_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="7">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_finish"
                      invoker="replace_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="delete_file" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="trash" invoker="trash" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="make_directory"
                      invoker="make_directory"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="make_symbolic_link"
                      invoker="make_symbolic_link"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="symlink_value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="copy" invoker="copy" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback" transfer-ownership="none">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="copy_async" invoker="copy_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback" transfer-ownership="none">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="8">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="copy_finish" invoker="copy_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="move" invoker="move" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback" transfer-ownership="none">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="mount_mountable" invoker="mount_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="mount_mountable_finish"
                      invoker="mount_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_mountable" invoker="unmount_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_mountable_finish"
                      invoker="unmount_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_mountable" invoker="eject_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_mountable_finish"
                      invoker="eject_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="mount_enclosing_volume"
                      invoker="mount_enclosing_volume">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="mount_enclosing_volume_finish"
                      invoker="mount_enclosing_volume_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="monitor_dir" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="monitor_file" invoker="monitor_file" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open_readwrite"
                      invoker="open_readwrite"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open_readwrite_async"
                      invoker="open_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="open_readwrite_finish"
                      invoker="open_readwrite_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_readwrite"
                      invoker="create_readwrite"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_readwrite_async"
                      invoker="create_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_readwrite_finish"
                      invoker="create_readwrite_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_readwrite"
                      invoker="replace_readwrite"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_readwrite_async"
                      invoker="replace_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="7">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="replace_readwrite_finish"
                      invoker="replace_readwrite_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="start_mountable" invoker="start_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
          </parameter>
          <parameter name="start_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="start_mountable_finish"
                      invoker="start_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="stop_mountable" invoker="stop_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="stop_mountable_finish"
                      invoker="stop_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_mountable_with_operation"
                      invoker="unmount_mountable_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_mountable_with_operation_finish"
                      invoker="unmount_mountable_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_mountable_with_operation"
                      invoker="eject_mountable_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_mountable_with_operation_finish"
                      invoker="eject_mountable_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="poll_mountable" invoker="poll_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="3">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="poll_mountable_finish"
                      invoker="poll_mountable_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="dup" c:identifier="g_file_dup">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <method name="equal" c:identifier="g_file_equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="file2" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_basename" c:identifier="g_file_get_basename">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_path" c:identifier="g_file_get_path">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_uri" c:identifier="g_file_get_uri">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_parse_name" c:identifier="g_file_get_parse_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_parent" c:identifier="g_file_get_parent">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <method name="has_parent" c:identifier="g_file_has_parent">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="parent" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child" c:identifier="g_file_get_child">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child_for_display_name"
              c:identifier="g_file_get_child_for_display_name"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_prefix" c:identifier="g_file_has_prefix">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="prefix" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_relative_path" c:identifier="g_file_get_relative_path">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="descendant" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </method>
      <method name="resolve_relative_path"
              c:identifier="g_file_resolve_relative_path">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="relative_path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_native" c:identifier="g_file_is_native">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_uri_scheme" c:identifier="g_file_has_uri_scheme">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="uri_scheme" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_uri_scheme" c:identifier="g_file_get_uri_scheme">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="read" c:identifier="g_file_read" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_async" c:identifier="g_file_read_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_finish" c:identifier="g_file_read_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInputStream" c:type="GFileInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_to" c:identifier="g_file_append_to" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create" c:identifier="g_file_create" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace" c:identifier="g_file_replace" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none" allow-none="1">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_to_async" c:identifier="g_file_append_to_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_to_finish"
              c:identifier="g_file_append_to_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_async" c:identifier="g_file_create_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_finish"
              c:identifier="g_file_create_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_async" c:identifier="g_file_replace_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="7">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_finish"
              c:identifier="g_file_replace_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileOutputStream" c:type="GFileOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_readwrite"
              c:identifier="g_file_open_readwrite"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_readwrite_async"
              c:identifier="g_file_open_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="open_readwrite_finish"
              c:identifier="g_file_open_readwrite_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_readwrite"
              c:identifier="g_file_create_readwrite"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_readwrite_async"
              c:identifier="g_file_create_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="create_readwrite_finish"
              c:identifier="g_file_create_readwrite_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_readwrite"
              c:identifier="g_file_replace_readwrite"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_readwrite_async"
              c:identifier="g_file_replace_readwrite_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="etag" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="7">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_readwrite_finish"
              c:identifier="g_file_replace_readwrite_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileIOStream" c:type="GFileIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_exists" c:identifier="g_file_query_exists">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_file_type" c:identifier="g_file_query_file_type">
        <return-value transfer-ownership="full">
          <type name="FileType" c:type="GFileType"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info" c:identifier="g_file_query_info" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_async" c:identifier="g_file_query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_finish"
              c:identifier="g_file_query_info_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_filesystem_info"
              c:identifier="g_file_query_filesystem_info"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_filesystem_info_async"
              c:identifier="g_file_query_filesystem_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_filesystem_info_finish"
              c:identifier="g_file_query_filesystem_info_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_enclosing_mount"
              c:identifier="g_file_find_enclosing_mount"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_enclosing_mount_async"
              c:identifier="g_file_find_enclosing_mount_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="find_enclosing_mount_finish"
              c:identifier="g_file_find_enclosing_mount_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_children"
              c:identifier="g_file_enumerate_children"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_children_async"
              c:identifier="g_file_enumerate_children_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_children_finish"
              c:identifier="g_file_enumerate_children_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileEnumerator" c:type="GFileEnumerator*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_name"
              c:identifier="g_file_set_display_name"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_name_async"
              c:identifier="g_file_set_display_name_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_name_finish"
              c:identifier="g_file_set_display_name_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delete" c:identifier="g_file_delete" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="trash" c:identifier="g_file_trash" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy" c:identifier="g_file_copy" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="5">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_async" c:identifier="g_file_copy_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="6">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="8">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_finish" c:identifier="g_file_copy_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="move" c:identifier="g_file_move" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="progress_callback"
                     transfer-ownership="none"
                     scope="call"
                     closure="5">
            <type name="FileProgressCallback" c:type="GFileProgressCallback"/>
          </parameter>
          <parameter name="progress_callback_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="make_directory"
              c:identifier="g_file_make_directory"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="make_directory_with_parents"
              c:identifier="g_file_make_directory_with_parents"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="make_symbolic_link"
              c:identifier="g_file_make_symbolic_link"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="symlink_value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_settable_attributes"
              c:identifier="g_file_query_settable_attributes"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_writable_namespaces"
              c:identifier="g_file_query_writable_namespaces"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute"
              c:identifier="g_file_set_attribute"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="FileAttributeType" c:type="GFileAttributeType"/>
          </parameter>
          <parameter name="value_p" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attributes_from_info"
              c:identifier="g_file_set_attributes_from_info"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attributes_async"
              c:identifier="g_file_set_attributes_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attributes_finish"
              c:identifier="g_file_set_attributes_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="info"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo**"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_string"
              c:identifier="g_file_set_attribute_string"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_byte_string"
              c:identifier="g_file_set_attribute_byte_string"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_uint32"
              c:identifier="g_file_set_attribute_uint32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_int32"
              c:identifier="g_file_set_attribute_int32"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_uint64"
              c:identifier="g_file_set_attribute_uint64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_int64"
              c:identifier="g_file_set_attribute_int64"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_enclosing_volume"
              c:identifier="g_file_mount_enclosing_volume">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_enclosing_volume_finish"
              c:identifier="g_file_mount_enclosing_volume_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_mountable" c:identifier="g_file_mount_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_mountable_finish"
              c:identifier="g_file_mount_mountable_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_mountable" c:identifier="g_file_unmount_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_mountable_finish"
              c:identifier="g_file_unmount_mountable_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_mountable_with_operation"
              c:identifier="g_file_unmount_mountable_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_mountable_with_operation_finish"
              c:identifier="g_file_unmount_mountable_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_mountable" c:identifier="g_file_eject_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_mountable_finish"
              c:identifier="g_file_eject_mountable_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_mountable_with_operation"
              c:identifier="g_file_eject_mountable_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_mountable_with_operation_finish"
              c:identifier="g_file_eject_mountable_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="copy_attributes"
              c:identifier="g_file_copy_attributes"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="destination" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="monitor_directory"
              c:identifier="g_file_monitor_directory"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="monitor_file"
              c:identifier="g_file_monitor_file"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="monitor" c:identifier="g_file_monitor" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileMonitor" c:type="GFileMonitor*"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_mountable" c:identifier="g_file_start_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
          </parameter>
          <parameter name="start_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="start_mountable_finish"
              c:identifier="g_file_start_mountable_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_mountable" c:identifier="g_file_stop_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="stop_mountable_finish"
              c:identifier="g_file_stop_mountable_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll_mountable" c:identifier="g_file_poll_mountable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll_mountable_finish"
              c:identifier="g_file_poll_mountable_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_default_handler"
              c:identifier="g_file_query_default_handler"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="AppInfo" c:type="GAppInfo*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_contents"
              c:identifier="g_file_load_contents"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="contents"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="utf8" c:type="char**"/>
          </parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="etag_out"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="utf8" c:type="char**"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_contents_async"
              c:identifier="g_file_load_contents_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_contents_finish"
              c:identifier="g_file_load_contents_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="contents"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="utf8" c:type="char**"/>
          </parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="etag_out"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="utf8" c:type="char**"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_partial_contents_async"
              c:identifier="g_file_load_partial_contents_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="read_more_callback"
                     transfer-ownership="none"
                     scope="call">
            <type name="FileReadMoreCallback" c:type="GFileReadMoreCallback"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_partial_contents_finish"
              c:identifier="g_file_load_partial_contents_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="contents"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="utf8" c:type="char**"/>
          </parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="etag_out"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="utf8" c:type="char**"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_contents"
              c:identifier="g_file_replace_contents"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="contents" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="etag" transfer-ownership="none" allow-none="1">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="new_etag"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="utf8" c:type="char**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_contents_async"
              c:identifier="g_file_replace_contents_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="contents" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="etag" transfer-ownership="none" allow-none="1">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="make_backup" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="8">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="replace_contents_finish"
              c:identifier="g_file_replace_contents_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="new_etag"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full"
                     allow-none="1">
            <type name="utf8" c:type="char**"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_thread_contexts"
              c:identifier="g_file_supports_thread_contexts">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
    </interface>
    <record name="FileAttributeInfo" c:type="GFileAttributeInfo">
      <doc xml:whitespace="preserve">Information about a specific attribute.</doc>
      <field name="name" writable="1">
        <type name="utf8" c:type="char*"/>
      </field>
      <field name="type" writable="1">
        <type name="FileAttributeType" c:type="GFileAttributeType"/>
      </field>
      <field name="flags" writable="1">
        <type name="FileAttributeInfoFlags" c:type="GFileAttributeInfoFlags"/>
      </field>
    </record>
    <bitfield name="FileAttributeInfoFlags"
              glib:type-name="GFileAttributeInfoFlags"
              glib:get-type="g_file_attribute_info_flags_get_type"
              c:type="GFileAttributeInfoFlags">
      <doc xml:whitespace="preserve">Flags specifying the behaviour of an attribute.</doc>
      <member name="none"
              value="0"
              c:identifier="G_FILE_ATTRIBUTE_INFO_NONE"
              glib:nick="none"/>
      <member name="copy_with_file"
              value="1"
              c:identifier="G_FILE_ATTRIBUTE_INFO_COPY_WITH_FILE"
              glib:nick="copy-with-file"/>
      <member name="copy_when_moved"
              value="2"
              c:identifier="G_FILE_ATTRIBUTE_INFO_COPY_WHEN_MOVED"
              glib:nick="copy-when-moved"/>
    </bitfield>
    <record name="FileAttributeInfoList"
            c:type="GFileAttributeInfoList"
            glib:type-name="GFileAttributeInfoList"
            glib:get-type="g_file_attribute_info_list_get_type">
      <doc xml:whitespace="preserve">Acts as a lightweight registry for possible valid file attributes.
The registry stores Key-Value pair formats as #GFileAttributeInfo&lt;!-- --&gt;s.</doc>
      <field name="infos" writable="1">
        <type name="FileAttributeInfo" c:type="GFileAttributeInfo*"/>
      </field>
      <field name="n_infos" writable="1">
        <type name="int" c:type="int"/>
      </field>
      <constructor name="new" c:identifier="g_file_attribute_info_list_new">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
      </constructor>
      <method name="ref" c:identifier="g_file_attribute_info_list_ref">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="g_file_attribute_info_list_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="dup" c:identifier="g_file_attribute_info_list_dup">
        <return-value transfer-ownership="full">
          <type name="FileAttributeInfoList" c:type="GFileAttributeInfoList*"/>
        </return-value>
      </method>
      <method name="lookup" c:identifier="g_file_attribute_info_list_lookup">
        <return-value transfer-ownership="none">
          <type name="FileAttributeInfo" c:type="GFileAttributeInfo*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add" c:identifier="g_file_attribute_info_list_add">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="FileAttributeType" c:type="GFileAttributeType"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileAttributeInfoFlags"
                  c:type="GFileAttributeInfoFlags"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <record name="FileAttributeMatcher"
            c:type="GFileAttributeMatcher"
            glib:type-name="GFileAttributeMatcher"
            glib:get-type="g_file_attribute_matcher_get_type">
      <doc xml:whitespace="preserve">Determines if a string matches a file attribute.</doc>
      <constructor name="new" c:identifier="g_file_attribute_matcher_new">
        <return-value transfer-ownership="full">
          <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="ref" c:identifier="g_file_attribute_matcher_ref">
        <return-value transfer-ownership="full">
          <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
        </return-value>
      </method>
      <method name="unref" c:identifier="g_file_attribute_matcher_unref">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="matches" c:identifier="g_file_attribute_matcher_matches">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="matches_only"
              c:identifier="g_file_attribute_matcher_matches_only">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_namespace"
              c:identifier="g_file_attribute_matcher_enumerate_namespace">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="ns" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_next"
              c:identifier="g_file_attribute_matcher_enumerate_next">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
    </record>
    <enumeration name="FileAttributeStatus"
                 glib:type-name="GFileAttributeStatus"
                 glib:get-type="g_file_attribute_status_get_type"
                 c:type="GFileAttributeStatus">
      <doc xml:whitespace="preserve">Used by g_file_set_attributes_from_info() when setting file attributes.</doc>
      <member name="unset"
              value="0"
              c:identifier="G_FILE_ATTRIBUTE_STATUS_UNSET"
              glib:nick="unset"/>
      <member name="set"
              value="1"
              c:identifier="G_FILE_ATTRIBUTE_STATUS_SET"
              glib:nick="set"/>
      <member name="error_setting"
              value="2"
              c:identifier="G_FILE_ATTRIBUTE_STATUS_ERROR_SETTING"
              glib:nick="error-setting"/>
    </enumeration>
    <enumeration name="FileAttributeType"
                 glib:type-name="GFileAttributeType"
                 glib:get-type="g_file_attribute_type_get_type"
                 c:type="GFileAttributeType">
      <doc xml:whitespace="preserve">The data types for file attributes.</doc>
      <member name="invalid"
              value="0"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_INVALID"
              glib:nick="invalid"/>
      <member name="string"
              value="1"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_STRING"
              glib:nick="string"/>
      <member name="byte_string"
              value="2"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_BYTE_STRING"
              glib:nick="byte-string"/>
      <member name="boolean"
              value="3"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_BOOLEAN"
              glib:nick="boolean"/>
      <member name="uint32"
              value="4"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_UINT32"
              glib:nick="uint32"/>
      <member name="int32"
              value="5"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_INT32"
              glib:nick="int32"/>
      <member name="uint64"
              value="6"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_UINT64"
              glib:nick="uint64"/>
      <member name="int64"
              value="7"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_INT64"
              glib:nick="int64"/>
      <member name="object"
              value="8"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_OBJECT"
              glib:nick="object"/>
      <member name="stringv"
              value="9"
              c:identifier="G_FILE_ATTRIBUTE_TYPE_STRINGV"
              glib:nick="stringv"/>
    </enumeration>
    <bitfield name="FileCopyFlags"
              glib:type-name="GFileCopyFlags"
              glib:get-type="g_file_copy_flags_get_type"
              c:type="GFileCopyFlags">
      <doc xml:whitespace="preserve">Flags used when copying or moving files.</doc>
      <member name="none"
              value="0"
              c:identifier="G_FILE_COPY_NONE"
              glib:nick="none"/>
      <member name="overwrite"
              value="1"
              c:identifier="G_FILE_COPY_OVERWRITE"
              glib:nick="overwrite"/>
      <member name="backup"
              value="2"
              c:identifier="G_FILE_COPY_BACKUP"
              glib:nick="backup"/>
      <member name="nofollow_symlinks"
              value="4"
              c:identifier="G_FILE_COPY_NOFOLLOW_SYMLINKS"
              glib:nick="nofollow-symlinks"/>
      <member name="all_metadata"
              value="8"
              c:identifier="G_FILE_COPY_ALL_METADATA"
              glib:nick="all-metadata"/>
      <member name="no_fallback_for_move"
              value="16"
              c:identifier="G_FILE_COPY_NO_FALLBACK_FOR_MOVE"
              glib:nick="no-fallback-for-move"/>
      <member name="target_default_perms"
              value="32"
              c:identifier="G_FILE_COPY_TARGET_DEFAULT_PERMS"
              glib:nick="target-default-perms"/>
    </bitfield>
    <bitfield name="FileCreateFlags"
              glib:type-name="GFileCreateFlags"
              glib:get-type="g_file_create_flags_get_type"
              c:type="GFileCreateFlags">
      <doc xml:whitespace="preserve">Flags used when an operation may create a file.</doc>
      <member name="none"
              value="0"
              c:identifier="G_FILE_CREATE_NONE"
              glib:nick="none"/>
      <member name="private"
              value="1"
              c:identifier="G_FILE_CREATE_PRIVATE"
              glib:nick="private"/>
      <member name="replace_destination"
              value="2"
              c:identifier="G_FILE_CREATE_REPLACE_DESTINATION"
              glib:nick="replace-destination"/>
    </bitfield>
    <interface name="FileDescriptorBased"
               c:type="GFileDescriptorBased"
               glib:type-name="GFileDescriptorBased"
               glib:get-type="g_file_descriptor_based_get_type"
               glib:type-struct="FileDescriptorBasedIface">
      <doc xml:whitespace="preserve">An interface for file descriptor based io objects.</doc>
      <virtual-method name="get_fd" invoker="get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </virtual-method>
      <method name="get_fd" c:identifier="g_file_descriptor_based_get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
    </interface>
    <record name="FileDescriptorBasedIface"
            c:type="GFileDescriptorBasedIface"
            glib:is-gtype-struct-for="FileDescriptorBased">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_fd">
        <callback name="get_fd" c:type="get_fd">
          <return-value transfer-ownership="none">
            <type name="int" c:type="int"/>
          </return-value>
          <parameters>
            <parameter name="fd_based" transfer-ownership="none">
              <type name="FileDescriptorBased" c:type="GFileDescriptorBased*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="FileEnumerator"
           c:type="GFileEnumerator"
           parent="GObject.Object"
           glib:type-name="GFileEnumerator"
           glib:get-type="g_file_enumerator_get_type"
           glib:type-struct="FileEnumeratorClass">
      <doc xml:whitespace="preserve">A per matched file iterator.</doc>
      <virtual-method name="next_file" invoker="next_file" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="next_files_async" invoker="next_files_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="num_files" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="next_files_finish" introspectable="0" throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_async" invoker="close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="next_file"
              c:identifier="g_file_enumerator_next_file"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_file_enumerator_close" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_files_async"
              c:identifier="g_file_enumerator_next_files_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="num_files" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_files_finish"
              c:identifier="g_file_enumerator_next_files_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="FileInfo"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_async" c:identifier="g_file_enumerator_close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="g_file_enumerator_close_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_file_enumerator_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_pending" c:identifier="g_file_enumerator_has_pending">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_pending" c:identifier="g_file_enumerator_set_pending">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="pending" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_container"
              c:identifier="g_file_enumerator_get_container">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <property name="container"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="File" c:type="GFile"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="FileEnumeratorPrivate" c:type="GFileEnumeratorPrivate*"/>
      </field>
    </class>
    <record name="FileEnumeratorClass"
            c:type="GFileEnumeratorClass"
            glib:is-gtype-struct-for="FileEnumerator">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="next_file">
        <callback name="next_file" c:type="next_file" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_fn">
        <callback name="close_fn" c:type="close_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="next_files_async">
        <callback name="next_files_async" c:type="next_files_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="num_files" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="next_files_finish">
        <callback name="next_files_finish"
                  c:type="next_files_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_async">
        <callback name="close_async" c:type="close_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_finish">
        <callback name="close_finish" c:type="close_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="FileEnumerator" c:type="GFileEnumerator*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="FileEnumeratorPrivate" c:type="GFileEnumeratorPrivate">
    </record>
    <class name="FileIOStream"
           c:type="GFileIOStream"
           parent="IOStream"
           glib:type-name="GFileIOStream"
           glib:get-type="g_file_io_stream_get_type"
           glib:type-struct="FileIOStreamClass">
      <doc xml:whitespace="preserve">A subclass of GIOStream for opened files. This adds
a few file-specific operations and seeking and truncating.
#GFileIOStream implements GSeekable.</doc>
      <implements name="Seekable"/>
      <virtual-method name="tell">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="seek" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_truncate">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="truncate_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info" invoker="query_info" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_async" invoker="query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_etag" invoker="get_etag">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <method name="query_info"
              c:identifier="g_file_io_stream_query_info"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_async"
              c:identifier="g_file_io_stream_query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_finish"
              c:identifier="g_file_io_stream_query_info_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_etag" c:identifier="g_file_io_stream_get_etag">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="IOStream" c:type="GIOStream"/>
      </field>
      <field name="priv">
        <type name="FileIOStreamPrivate" c:type="GFileIOStreamPrivate*"/>
      </field>
    </class>
    <record name="FileIOStreamClass"
            c:type="GFileIOStreamClass"
            glib:is-gtype-struct-for="FileIOStream">
      <field name="parent_class">
        <type name="IOStreamClass" c:type="GIOStreamClass"/>
      </field>
      <field name="tell">
        <callback name="tell" c:type="tell">
          <return-value transfer-ownership="full">
            <type name="GLib.offset" c:type="goffset"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_seek">
        <callback name="can_seek" c:type="can_seek">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="seek">
        <callback name="seek" c:type="seek" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GLib.SeekType" c:type="GSeekType"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_truncate">
        <callback name="can_truncate" c:type="can_truncate">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="truncate_fn">
        <callback name="truncate_fn" c:type="truncate_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info">
        <callback name="query_info" c:type="query_info" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_async">
        <callback name="query_info_async" c:type="query_info_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_finish">
        <callback name="query_info_finish"
                  c:type="query_info_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_etag">
        <callback name="get_etag" c:type="get_etag">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileIOStream" c:type="GFileIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="FileIOStreamPrivate" c:type="GFileIOStreamPrivate">
    </record>
    <class name="FileIcon"
           c:type="GFileIcon"
           parent="GObject.Object"
           glib:type-name="GFileIcon"
           glib:get-type="g_file_icon_get_type"
           glib:type-struct="FileIconClass">
      <doc xml:whitespace="preserve">Gets an icon for a #GFile. Implements #GLoadableIcon.</doc>
      <implements name="Icon"/>
      <implements name="LoadableIcon"/>
      <constructor name="new" c:identifier="g_file_icon_new">
        <return-value transfer-ownership="full">
          <type name="FileIcon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="file" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_file" c:identifier="g_file_icon_get_file">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <property name="file"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="File" c:type="GFile"/>
      </property>
    </class>
    <record name="FileIconClass"
            c:type="GFileIconClass"
            glib:is-gtype-struct-for="FileIcon">
    </record>
    <record name="FileIface"
            c:type="GFileIface"
            glib:is-gtype-struct-for="File">
      <doc xml:whitespace="preserve">An interface for writing VFS file handles.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="dup">
        <callback name="dup" c:type="dup">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="hash">
        <callback name="hash" c:type="hash">
          <return-value transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="equal">
        <callback name="equal" c:type="equal">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file1" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="file2" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_native">
        <callback name="is_native" c:type="is_native">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="has_uri_scheme">
        <callback name="has_uri_scheme" c:type="has_uri_scheme">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="uri_scheme" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_uri_scheme">
        <callback name="get_uri_scheme" c:type="get_uri_scheme">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_basename">
        <callback name="get_basename" c:type="get_basename">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_path">
        <callback name="get_path" c:type="get_path">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_uri">
        <callback name="get_uri" c:type="get_uri">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_parse_name">
        <callback name="get_parse_name" c:type="get_parse_name">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_parent">
        <callback name="get_parent" c:type="get_parent">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="prefix_matches">
        <callback name="prefix_matches" c:type="prefix_matches">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="prefix" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_relative_path">
        <callback name="get_relative_path" c:type="get_relative_path">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="parent" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="descendant" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="resolve_relative_path">
        <callback name="resolve_relative_path" c:type="resolve_relative_path">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="relative_path" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_child_for_display_name">
        <callback name="get_child_for_display_name"
                  c:type="get_child_for_display_name"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="display_name" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enumerate_children">
        <callback name="enumerate_children"
                  c:type="enumerate_children"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enumerate_children_async">
        <callback name="enumerate_children_async"
                  c:type="enumerate_children_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="6">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enumerate_children_finish">
        <callback name="enumerate_children_finish"
                  c:type="enumerate_children_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileEnumerator" c:type="GFileEnumerator*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info">
        <callback name="query_info" c:type="query_info" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_async">
        <callback name="query_info_async" c:type="query_info_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="6">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_finish">
        <callback name="query_info_finish"
                  c:type="query_info_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_filesystem_info">
        <callback name="query_filesystem_info"
                  c:type="query_filesystem_info"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_filesystem_info_async">
        <callback name="query_filesystem_info_async"
                  c:type="query_filesystem_info_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_filesystem_info_finish">
        <callback name="query_filesystem_info_finish"
                  c:type="query_filesystem_info_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="find_enclosing_mount">
        <callback name="find_enclosing_mount"
                  c:type="find_enclosing_mount"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="Mount" c:type="GMount*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="find_enclosing_mount_async">
        <callback name="find_enclosing_mount_async"
                  c:type="find_enclosing_mount_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="find_enclosing_mount_finish">
        <callback name="find_enclosing_mount_finish"
                  c:type="find_enclosing_mount_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="Mount" c:type="GMount*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_display_name">
        <callback name="set_display_name" c:type="set_display_name" throws="1">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="display_name" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_display_name_async">
        <callback name="set_display_name_async"
                  c:type="set_display_name_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="display_name" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_display_name_finish">
        <callback name="set_display_name_finish"
                  c:type="set_display_name_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_settable_attributes">
        <callback name="query_settable_attributes"
                  c:type="query_settable_attributes"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileAttributeInfoList"
                  c:type="GFileAttributeInfoList*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_settable_attributes_async">
        <callback name="query_settable_attributes_async"
                  c:type="_query_settable_attributes_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="query_settable_attributes_finish">
        <callback name="query_settable_attributes_finish"
                  c:type="_query_settable_attributes_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="query_writable_namespaces">
        <callback name="query_writable_namespaces"
                  c:type="query_writable_namespaces"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileAttributeInfoList"
                  c:type="GFileAttributeInfoList*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_writable_namespaces_async">
        <callback name="query_writable_namespaces_async"
                  c:type="_query_writable_namespaces_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="query_writable_namespaces_finish">
        <callback name="query_writable_namespaces_finish"
                  c:type="_query_writable_namespaces_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="set_attribute">
        <callback name="set_attribute" c:type="set_attribute" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="attribute" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="FileAttributeType" c:type="GFileAttributeType"/>
            </parameter>
            <parameter name="value_p" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_attributes_from_info">
        <callback name="set_attributes_from_info"
                  c:type="set_attributes_from_info"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="FileInfo" c:type="GFileInfo*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_attributes_async">
        <callback name="set_attributes_async" c:type="set_attributes_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="FileInfo" c:type="GFileInfo*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="6">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_attributes_finish">
        <callback name="set_attributes_finish"
                  c:type="set_attributes_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
            <parameter name="info"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="none">
              <type name="FileInfo" c:type="GFileInfo**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_fn">
        <callback name="read_fn" c:type="read_fn" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_async">
        <callback name="read_async" c:type="read_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_finish">
        <callback name="read_finish" c:type="read_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInputStream" c:type="GFileInputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="append_to">
        <callback name="append_to" c:type="append_to" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="append_to_async">
        <callback name="append_to_async" c:type="append_to_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="append_to_finish">
        <callback name="append_to_finish" c:type="append_to_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create">
        <callback name="create" c:type="create" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_async">
        <callback name="create_async" c:type="create_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_finish">
        <callback name="create_finish" c:type="create_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace">
        <callback name="replace" c:type="replace" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="etag" transfer-ownership="none" allow-none="1">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="make_backup" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace_async">
        <callback name="replace_async" c:type="replace_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="etag" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="make_backup" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="7">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace_finish">
        <callback name="replace_finish" c:type="replace_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileOutputStream" c:type="GFileOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delete_file">
        <callback name="delete_file" c:type="delete_file" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="delete_file_async">
        <callback name="delete_file_async" c:type="_delete_file_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="delete_file_finish">
        <callback name="delete_file_finish" c:type="_delete_file_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="trash">
        <callback name="trash" c:type="trash" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="trash_async">
        <callback name="trash_async" c:type="_trash_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="trash_finish">
        <callback name="trash_finish" c:type="_trash_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="make_directory">
        <callback name="make_directory" c:type="make_directory" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="make_directory_async">
        <callback name="make_directory_async" c:type="_make_directory_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="make_directory_finish">
        <callback name="make_directory_finish" c:type="_make_directory_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="make_symbolic_link">
        <callback name="make_symbolic_link"
                  c:type="make_symbolic_link"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="symlink_value" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="make_symbolic_link_async">
        <callback name="make_symbolic_link_async"
                  c:type="_make_symbolic_link_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="make_symbolic_link_finish">
        <callback name="make_symbolic_link_finish"
                  c:type="_make_symbolic_link_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="copy">
        <callback name="copy" c:type="copy" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="source" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="destination" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="progress_callback" transfer-ownership="none">
              <type name="FileProgressCallback"
                    c:type="GFileProgressCallback"/>
            </parameter>
            <parameter name="progress_callback_data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="copy_async">
        <callback name="copy_async" c:type="copy_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="source" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="destination" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="progress_callback" transfer-ownership="none">
              <type name="FileProgressCallback"
                    c:type="GFileProgressCallback"/>
            </parameter>
            <parameter name="progress_callback_data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="8">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="copy_finish">
        <callback name="copy_finish" c:type="copy_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move">
        <callback name="move" c:type="move" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="source" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="destination" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCopyFlags" c:type="GFileCopyFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="progress_callback" transfer-ownership="none">
              <type name="FileProgressCallback"
                    c:type="GFileProgressCallback"/>
            </parameter>
            <parameter name="progress_callback_data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="move_async">
        <callback name="move_async" c:type="_move_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="move_finish">
        <callback name="move_finish" c:type="_move_finish">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="mount_mountable">
        <callback name="mount_mountable" c:type="mount_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountMountFlags" c:type="GMountMountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_mountable_finish">
        <callback name="mount_mountable_finish"
                  c:type="mount_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_mountable">
        <callback name="unmount_mountable" c:type="unmount_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_mountable_finish">
        <callback name="unmount_mountable_finish"
                  c:type="unmount_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_mountable">
        <callback name="eject_mountable" c:type="eject_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_mountable_finish">
        <callback name="eject_mountable_finish"
                  c:type="eject_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_enclosing_volume">
        <callback name="mount_enclosing_volume"
                  c:type="mount_enclosing_volume">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="location" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountMountFlags" c:type="GMountMountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_enclosing_volume_finish">
        <callback name="mount_enclosing_volume_finish"
                  c:type="mount_enclosing_volume_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="location" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="monitor_dir">
        <callback name="monitor_dir" c:type="monitor_dir" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="monitor_file">
        <callback name="monitor_file" c:type="monitor_file" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileMonitor" c:type="GFileMonitor*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileMonitorFlags" c:type="GFileMonitorFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open_readwrite">
        <callback name="open_readwrite" c:type="open_readwrite" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open_readwrite_async">
        <callback name="open_readwrite_async" c:type="open_readwrite_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="open_readwrite_finish">
        <callback name="open_readwrite_finish"
                  c:type="open_readwrite_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_readwrite">
        <callback name="create_readwrite" c:type="create_readwrite" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_readwrite_async">
        <callback name="create_readwrite_async"
                  c:type="create_readwrite_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_readwrite_finish">
        <callback name="create_readwrite_finish"
                  c:type="create_readwrite_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace_readwrite">
        <callback name="replace_readwrite"
                  c:type="replace_readwrite"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="etag" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="make_backup" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace_readwrite_async">
        <callback name="replace_readwrite_async"
                  c:type="replace_readwrite_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="etag" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="make_backup" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileCreateFlags" c:type="GFileCreateFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="7">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="replace_readwrite_finish">
        <callback name="replace_readwrite_finish"
                  c:type="replace_readwrite_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileIOStream" c:type="GFileIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="start_mountable">
        <callback name="start_mountable" c:type="start_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="DriveStartFlags" c:type="GDriveStartFlags"/>
            </parameter>
            <parameter name="start_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="start_mountable_finish">
        <callback name="start_mountable_finish"
                  c:type="start_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop_mountable">
        <callback name="stop_mountable" c:type="stop_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="stop_mountable_finish">
        <callback name="stop_mountable_finish"
                  c:type="stop_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="supports_thread_contexts">
        <type name="boolean" c:type="gboolean"/>
      </field>
      <field name="unmount_mountable_with_operation">
        <callback name="unmount_mountable_with_operation"
                  c:type="unmount_mountable_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_mountable_with_operation_finish">
        <callback name="unmount_mountable_with_operation_finish"
                  c:type="unmount_mountable_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_mountable_with_operation">
        <callback name="eject_mountable_with_operation"
                  c:type="eject_mountable_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_mountable_with_operation_finish">
        <callback name="eject_mountable_with_operation_finish"
                  c:type="eject_mountable_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="poll_mountable">
        <callback name="poll_mountable" c:type="poll_mountable">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="3">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="poll_mountable_finish">
        <callback name="poll_mountable_finish"
                  c:type="poll_mountable_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="FileInfo"
           c:type="GFileInfo"
           parent="GObject.Object"
           glib:type-name="GFileInfo"
           glib:get-type="g_file_info_get_type"
           glib:type-struct="FileInfoClass">
      <doc xml:whitespace="preserve">Stores information about a file system object referenced by a #GFile.</doc>
      <constructor name="new" c:identifier="g_file_info_new">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
      </constructor>
      <method name="dup" c:identifier="g_file_info_dup">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
      </method>
      <method name="copy_into" c:identifier="g_file_info_copy_into">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dest_info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_attribute" c:identifier="g_file_info_has_attribute">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="has_namespace" c:identifier="g_file_info_has_namespace">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name_space" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="list_attributes"
              c:identifier="g_file_info_list_attributes">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="name_space" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_data"
              c:identifier="g_file_info_get_attribute_data">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="FileAttributeType" c:type="GFileAttributeType*"/>
          </parameter>
          <parameter name="value_pp" transfer-ownership="none">
            <doc xml:whitespace="preserve">(out)</doc>
            <type name="any" c:type="gpointer*"/>
          </parameter>
          <parameter name="status" transfer-ownership="none">
            <type name="FileAttributeStatus" c:type="GFileAttributeStatus*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_type"
              c:identifier="g_file_info_get_attribute_type">
        <return-value transfer-ownership="full">
          <type name="FileAttributeType" c:type="GFileAttributeType"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove_attribute"
              c:identifier="g_file_info_remove_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_status"
              c:identifier="g_file_info_get_attribute_status">
        <return-value transfer-ownership="full">
          <type name="FileAttributeStatus" c:type="GFileAttributeStatus"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_status"
              c:identifier="g_file_info_set_attribute_status">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="status" transfer-ownership="none">
            <type name="FileAttributeStatus" c:type="GFileAttributeStatus"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_as_string"
              c:identifier="g_file_info_get_attribute_as_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_string"
              c:identifier="g_file_info_get_attribute_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_byte_string"
              c:identifier="g_file_info_get_attribute_byte_string">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_boolean"
              c:identifier="g_file_info_get_attribute_boolean">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_uint32"
              c:identifier="g_file_info_get_attribute_uint32">
        <return-value transfer-ownership="none">
          <type name="uint32" c:type="guint32"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_int32"
              c:identifier="g_file_info_get_attribute_int32">
        <return-value transfer-ownership="none">
          <type name="int32" c:type="gint32"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_uint64"
              c:identifier="g_file_info_get_attribute_uint64">
        <return-value transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_int64"
              c:identifier="g_file_info_get_attribute_int64">
        <return-value transfer-ownership="none">
          <type name="int64" c:type="gint64"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_object"
              c:identifier="g_file_info_get_attribute_object">
        <return-value transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_attribute_stringv"
              c:identifier="g_file_info_get_attribute_stringv">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute" c:identifier="g_file_info_set_attribute">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="FileAttributeType" c:type="GFileAttributeType"/>
          </parameter>
          <parameter name="value_p" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_string"
              c:identifier="g_file_info_set_attribute_string">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_byte_string"
              c:identifier="g_file_info_set_attribute_byte_string">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_boolean"
              c:identifier="g_file_info_set_attribute_boolean">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_uint32"
              c:identifier="g_file_info_set_attribute_uint32">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="uint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_int32"
              c:identifier="g_file_info_set_attribute_int32">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_uint64"
              c:identifier="g_file_info_set_attribute_uint64">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_int64"
              c:identifier="g_file_info_set_attribute_int64">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="int64" c:type="gint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_object"
              c:identifier="g_file_info_set_attribute_object">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_attribute_stringv"
              c:identifier="g_file_info_set_attribute_stringv">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attribute" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="attr_value" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="clear_status" c:identifier="g_file_info_clear_status">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_file_type" c:identifier="g_file_info_get_file_type">
        <return-value transfer-ownership="full">
          <type name="FileType" c:type="GFileType"/>
        </return-value>
      </method>
      <method name="get_is_hidden" c:identifier="g_file_info_get_is_hidden">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_backup" c:identifier="g_file_info_get_is_backup">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_symlink" c:identifier="g_file_info_get_is_symlink">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="g_file_info_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_display_name"
              c:identifier="g_file_info_get_display_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_edit_name" c:identifier="g_file_info_get_edit_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_icon" c:identifier="g_file_info_get_icon">
        <return-value transfer-ownership="none">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="get_content_type"
              c:identifier="g_file_info_get_content_type">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_size" c:identifier="g_file_info_get_size">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </method>
      <method name="get_modification_time"
              c:identifier="g_file_info_get_modification_time">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_symlink_target"
              c:identifier="g_file_info_get_symlink_target">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_etag" c:identifier="g_file_info_get_etag">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_sort_order" c:identifier="g_file_info_get_sort_order">
        <return-value transfer-ownership="none">
          <type name="int32" c:type="gint32"/>
        </return-value>
      </method>
      <method name="set_attribute_mask"
              c:identifier="g_file_info_set_attribute_mask">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mask" transfer-ownership="none">
            <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unset_attribute_mask"
              c:identifier="g_file_info_unset_attribute_mask">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="set_file_type" c:identifier="g_file_info_set_file_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="FileType" c:type="GFileType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_hidden" c:identifier="g_file_info_set_is_hidden">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="is_hidden" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_symlink" c:identifier="g_file_info_set_is_symlink">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="is_symlink" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_name" c:identifier="g_file_info_set_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_display_name"
              c:identifier="g_file_info_set_display_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="display_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_edit_name" c:identifier="g_file_info_set_edit_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="edit_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_icon" c:identifier="g_file_info_set_icon">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="icon" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_content_type"
              c:identifier="g_file_info_set_content_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="content_type" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_size" c:identifier="g_file_info_set_size">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_modification_time"
              c:identifier="g_file_info_set_modification_time">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="mtime" transfer-ownership="none">
            <type name="GLib.TimeVal" c:type="GTimeVal*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_symlink_target"
              c:identifier="g_file_info_set_symlink_target">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="symlink_target" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sort_order" c:identifier="g_file_info_set_sort_order">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="sort_order" transfer-ownership="none">
            <type name="int32" c:type="gint32"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="FileInfoClass"
            c:type="GFileInfoClass"
            glib:is-gtype-struct-for="FileInfo">
    </record>
    <class name="FileInputStream"
           c:type="GFileInputStream"
           parent="InputStream"
           glib:type-name="GFileInputStream"
           glib:get-type="g_file_input_stream_get_type"
           glib:type-struct="FileInputStreamClass">
      <doc xml:whitespace="preserve">A subclass of GInputStream for opened files. This adds
a few file-specific operations and seeking.
#GFileInputStream implements #GSeekable.</doc>
      <implements name="Seekable"/>
      <virtual-method name="tell">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="seek" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info" invoker="query_info" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_async" invoker="query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="query_info"
              c:identifier="g_file_input_stream_query_info"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_async"
              c:identifier="g_file_input_stream_query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_finish"
              c:identifier="g_file_input_stream_query_info_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="InputStream" c:type="GInputStream"/>
      </field>
      <field name="priv">
        <type name="FileInputStreamPrivate" c:type="GFileInputStreamPrivate*"/>
      </field>
    </class>
    <record name="FileInputStreamClass"
            c:type="GFileInputStreamClass"
            glib:is-gtype-struct-for="FileInputStream">
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <field name="tell">
        <callback name="tell" c:type="tell">
          <return-value transfer-ownership="full">
            <type name="GLib.offset" c:type="goffset"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_seek">
        <callback name="can_seek" c:type="can_seek">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="seek">
        <callback name="seek" c:type="seek" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GLib.SeekType" c:type="GSeekType"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info">
        <callback name="query_info" c:type="query_info" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_async">
        <callback name="query_info_async" c:type="query_info_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_finish">
        <callback name="query_info_finish"
                  c:type="query_info_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileInputStream" c:type="GFileInputStream*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="FileInputStreamPrivate" c:type="GFileInputStreamPrivate">
    </record>
    <class name="FileMonitor"
           c:type="GFileMonitor"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GFileMonitor"
           glib:get-type="g_file_monitor_get_type"
           glib:type-struct="FileMonitorClass">
      <doc xml:whitespace="preserve">Watches for changes to a file.</doc>
      <virtual-method name="cancel" invoker="cancel">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <method name="cancel" c:identifier="g_file_monitor_cancel">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_cancelled" c:identifier="g_file_monitor_is_cancelled">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_rate_limit"
              c:identifier="g_file_monitor_set_rate_limit">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="limit_msecs" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_event" c:identifier="g_file_monitor_emit_event">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="child" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="other_file" transfer-ownership="none">
            <type name="File" c:type="GFile*"/>
          </parameter>
          <parameter name="event_type" transfer-ownership="none">
            <type name="FileMonitorEvent" c:type="GFileMonitorEvent"/>
          </parameter>
        </parameters>
      </method>
      <property name="cancelled" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="rate-limit" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="FileMonitorPrivate" c:type="GFileMonitorPrivate*"/>
      </field>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="File" c:type="GFile"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="File" c:type="GFile"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="FileMonitorEvent" c:type="GFileMonitorEvent"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="FileMonitorClass"
            c:type="GFileMonitorClass"
            glib:is-gtype-struct-for="FileMonitor">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="monitor" transfer-ownership="none">
              <type name="FileMonitor" c:type="GFileMonitor*"/>
            </parameter>
            <parameter name="file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="other_file" transfer-ownership="none">
              <type name="File" c:type="GFile*"/>
            </parameter>
            <parameter name="event_type" transfer-ownership="none">
              <type name="FileMonitorEvent" c:type="GFileMonitorEvent"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="cancel">
        <callback name="cancel" c:type="cancel">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="monitor" transfer-ownership="none">
              <type name="FileMonitor" c:type="GFileMonitor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="FileMonitorEvent"
                 glib:type-name="GFileMonitorEvent"
                 glib:get-type="g_file_monitor_event_get_type"
                 c:type="GFileMonitorEvent">
      <doc xml:whitespace="preserve">Specifies what type of event a monitor event is.</doc>
      <member name="changed"
              value="0"
              c:identifier="G_FILE_MONITOR_EVENT_CHANGED"
              glib:nick="changed"/>
      <member name="changes_done_hint"
              value="1"
              c:identifier="G_FILE_MONITOR_EVENT_CHANGES_DONE_HINT"
              glib:nick="changes-done-hint"/>
      <member name="deleted"
              value="2"
              c:identifier="G_FILE_MONITOR_EVENT_DELETED"
              glib:nick="deleted"/>
      <member name="created"
              value="3"
              c:identifier="G_FILE_MONITOR_EVENT_CREATED"
              glib:nick="created"/>
      <member name="attribute_changed"
              value="4"
              c:identifier="G_FILE_MONITOR_EVENT_ATTRIBUTE_CHANGED"
              glib:nick="attribute-changed"/>
      <member name="pre_unmount"
              value="5"
              c:identifier="G_FILE_MONITOR_EVENT_PRE_UNMOUNT"
              glib:nick="pre-unmount"/>
      <member name="unmounted"
              value="6"
              c:identifier="G_FILE_MONITOR_EVENT_UNMOUNTED"
              glib:nick="unmounted"/>
      <member name="moved"
              value="7"
              c:identifier="G_FILE_MONITOR_EVENT_MOVED"
              glib:nick="moved"/>
    </enumeration>
    <bitfield name="FileMonitorFlags"
              glib:type-name="GFileMonitorFlags"
              glib:get-type="g_file_monitor_flags_get_type"
              c:type="GFileMonitorFlags">
      <doc xml:whitespace="preserve">Flags used to set what a #GFileMonitor will watch for.</doc>
      <member name="none"
              value="0"
              c:identifier="G_FILE_MONITOR_NONE"
              glib:nick="none"/>
      <member name="watch_mounts"
              value="1"
              c:identifier="G_FILE_MONITOR_WATCH_MOUNTS"
              glib:nick="watch-mounts"/>
      <member name="send_moved"
              value="2"
              c:identifier="G_FILE_MONITOR_SEND_MOVED"
              glib:nick="send-moved"/>
    </bitfield>
    <record name="FileMonitorPrivate" c:type="GFileMonitorPrivate">
    </record>
    <class name="FileOutputStream"
           c:type="GFileOutputStream"
           parent="OutputStream"
           glib:type-name="GFileOutputStream"
           glib:get-type="g_file_output_stream_get_type"
           glib:type-struct="FileOutputStreamClass">
      <doc xml:whitespace="preserve">A subclass of GOutputStream for opened files. This adds
a few file-specific operations and seeking and truncating.
#GFileOutputStream implements GSeekable.</doc>
      <implements name="Seekable"/>
      <virtual-method name="tell">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="seek" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_truncate">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="truncate_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info" invoker="query_info" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_async" invoker="query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="query_info_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_etag" invoker="get_etag">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <method name="query_info"
              c:identifier="g_file_output_stream_query_info"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_async"
              c:identifier="g_file_output_stream_query_info_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="attributes" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="query_info_finish"
              c:identifier="g_file_output_stream_query_info_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_etag" c:identifier="g_file_output_stream_get_etag">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="OutputStream" c:type="GOutputStream"/>
      </field>
      <field name="priv">
        <type name="FileOutputStreamPrivate"
              c:type="GFileOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="FileOutputStreamClass"
            c:type="GFileOutputStreamClass"
            glib:is-gtype-struct-for="FileOutputStream">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <field name="tell">
        <callback name="tell" c:type="tell">
          <return-value transfer-ownership="full">
            <type name="GLib.offset" c:type="goffset"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_seek">
        <callback name="can_seek" c:type="can_seek">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="seek">
        <callback name="seek" c:type="seek" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GLib.SeekType" c:type="GSeekType"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_truncate">
        <callback name="can_truncate" c:type="can_truncate">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="truncate_fn">
        <callback name="truncate_fn" c:type="truncate_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info">
        <callback name="query_info" c:type="query_info" throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_async">
        <callback name="query_info_async" c:type="query_info_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
            <parameter name="attributes" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="query_info_finish">
        <callback name="query_info_finish"
                  c:type="query_info_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_etag">
        <callback name="get_etag" c:type="get_etag">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="FileOutputStream" c:type="GFileOutputStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="FileOutputStreamPrivate" c:type="GFileOutputStreamPrivate">
    </record>
    <callback name="FileProgressCallback" c:type="GFileProgressCallback">
      <doc xml:whitespace="preserve">When doing file operations that may take a while, such as moving
a file or copying a file, a progress callback is used to pass how
far along that operation is to the application.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="current_num_bytes" transfer-ownership="none">
          <doc xml:whitespace="preserve">the current number of bytes in the operation.</doc>
          <type name="GLib.offset" c:type="goffset"/>
        </parameter>
        <parameter name="total_num_bytes" transfer-ownership="none">
          <doc xml:whitespace="preserve">the total number of bytes in the operation.</doc>
          <type name="GLib.offset" c:type="goffset"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">user data passed to the callback.</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <bitfield name="FileQueryInfoFlags"
              glib:type-name="GFileQueryInfoFlags"
              glib:get-type="g_file_query_info_flags_get_type"
              c:type="GFileQueryInfoFlags">
      <doc xml:whitespace="preserve">Flags used when querying a #GFileInfo.</doc>
      <member name="none"
              value="0"
              c:identifier="G_FILE_QUERY_INFO_NONE"
              glib:nick="none"/>
      <member name="nofollow_symlinks"
              value="1"
              c:identifier="G_FILE_QUERY_INFO_NOFOLLOW_SYMLINKS"
              glib:nick="nofollow-symlinks"/>
    </bitfield>
    <callback name="FileReadMoreCallback" c:type="GFileReadMoreCallback">
      <doc xml:whitespace="preserve">When loading the partial contents of a file with g_file_load_partial_contents_async(),
it may become necessary to determine if any more data from the file should be loaded.
A #GFileReadMoreCallback function facilitates this by returning %TRUE if more data
should be read, or %FALSE otherwise.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if more data should be read back. %FALSE otherwise.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="file_contents" transfer-ownership="none">
          <doc xml:whitespace="preserve">the data as currently read.</doc>
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="file_size" transfer-ownership="none">
          <doc xml:whitespace="preserve">the size of the data currently read.</doc>
          <type name="GLib.offset" c:type="goffset"/>
        </parameter>
        <parameter name="callback_data" transfer-ownership="none">
          <doc xml:whitespace="preserve">data passed to the callback.</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="FileType"
                 glib:type-name="GFileType"
                 glib:get-type="g_file_type_get_type"
                 c:type="GFileType">
      <doc xml:whitespace="preserve">Indicates the file's on-disk type.</doc>
      <member name="unknown"
              value="0"
              c:identifier="G_FILE_TYPE_UNKNOWN"
              glib:nick="unknown"/>
      <member name="regular"
              value="1"
              c:identifier="G_FILE_TYPE_REGULAR"
              glib:nick="regular"/>
      <member name="directory"
              value="2"
              c:identifier="G_FILE_TYPE_DIRECTORY"
              glib:nick="directory"/>
      <member name="symbolic_link"
              value="3"
              c:identifier="G_FILE_TYPE_SYMBOLIC_LINK"
              glib:nick="symbolic-link"/>
      <member name="special"
              value="4"
              c:identifier="G_FILE_TYPE_SPECIAL"
              glib:nick="special"/>
      <member name="shortcut"
              value="5"
              c:identifier="G_FILE_TYPE_SHORTCUT"
              glib:nick="shortcut"/>
      <member name="mountable"
              value="6"
              c:identifier="G_FILE_TYPE_MOUNTABLE"
              glib:nick="mountable"/>
    </enumeration>
    <class name="FilenameCompleter"
           c:type="GFilenameCompleter"
           parent="GObject.Object"
           glib:type-name="GFilenameCompleter"
           glib:get-type="g_filename_completer_get_type"
           glib:type-struct="FilenameCompleterClass">
      <doc xml:whitespace="preserve">Completes filenames based on files that exist within the file system.</doc>
      <constructor name="new" c:identifier="g_filename_completer_new">
        <return-value transfer-ownership="full">
          <type name="FilenameCompleter" c:type="GFilenameCompleter*"/>
        </return-value>
      </constructor>
      <method name="get_completion_suffix"
              c:identifier="g_filename_completer_get_completion_suffix">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="initial_text" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_completions"
              c:identifier="g_filename_completer_get_completions">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="initial_text" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_dirs_only"
              c:identifier="g_filename_completer_set_dirs_only">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="dirs_only" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="got-completion-data">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="FilenameCompleterClass"
            c:type="GFilenameCompleterClass"
            glib:is-gtype-struct-for="FilenameCompleter">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="got_completion_data">
        <callback name="got_completion_data" c:type="got_completion_data">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="filename_completer" transfer-ownership="none">
              <type name="FilenameCompleter" c:type="GFilenameCompleter*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="FilesystemPreviewType"
                 glib:type-name="GFilesystemPreviewType"
                 glib:get-type="g_filesystem_preview_type_get_type"
                 c:type="GFilesystemPreviewType">
      <doc xml:whitespace="preserve">Indicates a hint from the file system whether files should be
previewed in a file manager. Returned as the value of the key
#G_FILE_ATTRIBUTE_FILESYSTEM_USE_PREVIEW.</doc>
      <member name="if_always"
              value="0"
              c:identifier="G_FILESYSTEM_PREVIEW_TYPE_IF_ALWAYS"
              glib:nick="if-always"/>
      <member name="if_local"
              value="1"
              c:identifier="G_FILESYSTEM_PREVIEW_TYPE_IF_LOCAL"
              glib:nick="if-local"/>
      <member name="never"
              value="2"
              c:identifier="G_FILESYSTEM_PREVIEW_TYPE_NEVER"
              glib:nick="never"/>
    </enumeration>
    <class name="FilterInputStream"
           c:type="GFilterInputStream"
           parent="InputStream"
           abstract="1"
           glib:type-name="GFilterInputStream"
           glib:get-type="g_filter_input_stream_get_type"
           glib:type-struct="FilterInputStreamClass">
      <doc xml:whitespace="preserve">A base class for all input streams that work on an underlying stream.</doc>
      <method name="get_base_stream"
              c:identifier="g_filter_input_stream_get_base_stream">
        <return-value transfer-ownership="none">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
      </method>
      <method name="get_close_base_stream"
              c:identifier="g_filter_input_stream_get_close_base_stream">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_close_base_stream"
              c:identifier="g_filter_input_stream_set_close_base_stream">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="close_base" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="base-stream"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="InputStream" c:type="GInputStream"/>
      </property>
      <property name="close-base-stream"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="InputStream" c:type="GInputStream"/>
      </field>
      <field name="base_stream">
        <type name="InputStream" c:type="GInputStream*"/>
      </field>
    </class>
    <record name="FilterInputStreamClass"
            c:type="GFilterInputStreamClass"
            glib:is-gtype-struct-for="FilterInputStream">
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="FilterOutputStream"
           c:type="GFilterOutputStream"
           parent="OutputStream"
           abstract="1"
           glib:type-name="GFilterOutputStream"
           glib:get-type="g_filter_output_stream_get_type"
           glib:type-struct="FilterOutputStreamClass">
      <doc xml:whitespace="preserve">A base class for all output streams that work on an underlying stream.</doc>
      <method name="get_base_stream"
              c:identifier="g_filter_output_stream_get_base_stream">
        <return-value transfer-ownership="none">
          <type name="OutputStream" c:type="GOutputStream*"/>
        </return-value>
      </method>
      <method name="get_close_base_stream"
              c:identifier="g_filter_output_stream_get_close_base_stream">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_close_base_stream"
              c:identifier="g_filter_output_stream_set_close_base_stream">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="close_base" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="base-stream"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="OutputStream" c:type="GOutputStream"/>
      </property>
      <property name="close-base-stream"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="OutputStream" c:type="GOutputStream"/>
      </field>
      <field name="base_stream">
        <type name="OutputStream" c:type="GOutputStream*"/>
      </field>
    </class>
    <record name="FilterOutputStreamClass"
            c:type="GFilterOutputStreamClass"
            glib:is-gtype-struct-for="FilterOutputStream">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="IOErrorEnum"
                 glib:type-name="GIOErrorEnum"
                 glib:get-type="g_io_error_enum_get_type"
                 c:type="GIOErrorEnum"
                 glib:error-quark="g_io_error_quark">
      <doc xml:whitespace="preserve">Error codes returned by GIO functions.</doc>
      <member name="failed"
              value="0"
              c:identifier="G_IO_ERROR_FAILED"
              glib:nick="failed"/>
      <member name="not_found"
              value="1"
              c:identifier="G_IO_ERROR_NOT_FOUND"
              glib:nick="not-found"/>
      <member name="exists"
              value="2"
              c:identifier="G_IO_ERROR_EXISTS"
              glib:nick="exists"/>
      <member name="is_directory"
              value="3"
              c:identifier="G_IO_ERROR_IS_DIRECTORY"
              glib:nick="is-directory"/>
      <member name="not_directory"
              value="4"
              c:identifier="G_IO_ERROR_NOT_DIRECTORY"
              glib:nick="not-directory"/>
      <member name="not_empty"
              value="5"
              c:identifier="G_IO_ERROR_NOT_EMPTY"
              glib:nick="not-empty"/>
      <member name="not_regular_file"
              value="6"
              c:identifier="G_IO_ERROR_NOT_REGULAR_FILE"
              glib:nick="not-regular-file"/>
      <member name="not_symbolic_link"
              value="7"
              c:identifier="G_IO_ERROR_NOT_SYMBOLIC_LINK"
              glib:nick="not-symbolic-link"/>
      <member name="not_mountable_file"
              value="8"
              c:identifier="G_IO_ERROR_NOT_MOUNTABLE_FILE"
              glib:nick="not-mountable-file"/>
      <member name="filename_too_long"
              value="9"
              c:identifier="G_IO_ERROR_FILENAME_TOO_LONG"
              glib:nick="filename-too-long"/>
      <member name="invalid_filename"
              value="10"
              c:identifier="G_IO_ERROR_INVALID_FILENAME"
              glib:nick="invalid-filename"/>
      <member name="too_many_links"
              value="11"
              c:identifier="G_IO_ERROR_TOO_MANY_LINKS"
              glib:nick="too-many-links"/>
      <member name="no_space"
              value="12"
              c:identifier="G_IO_ERROR_NO_SPACE"
              glib:nick="no-space"/>
      <member name="invalid_argument"
              value="13"
              c:identifier="G_IO_ERROR_INVALID_ARGUMENT"
              glib:nick="invalid-argument"/>
      <member name="permission_denied"
              value="14"
              c:identifier="G_IO_ERROR_PERMISSION_DENIED"
              glib:nick="permission-denied"/>
      <member name="not_supported"
              value="15"
              c:identifier="G_IO_ERROR_NOT_SUPPORTED"
              glib:nick="not-supported"/>
      <member name="not_mounted"
              value="16"
              c:identifier="G_IO_ERROR_NOT_MOUNTED"
              glib:nick="not-mounted"/>
      <member name="already_mounted"
              value="17"
              c:identifier="G_IO_ERROR_ALREADY_MOUNTED"
              glib:nick="already-mounted"/>
      <member name="closed"
              value="18"
              c:identifier="G_IO_ERROR_CLOSED"
              glib:nick="closed"/>
      <member name="cancelled"
              value="19"
              c:identifier="G_IO_ERROR_CANCELLED"
              glib:nick="cancelled"/>
      <member name="pending"
              value="20"
              c:identifier="G_IO_ERROR_PENDING"
              glib:nick="pending"/>
      <member name="read_only"
              value="21"
              c:identifier="G_IO_ERROR_READ_ONLY"
              glib:nick="read-only"/>
      <member name="cant_create_backup"
              value="22"
              c:identifier="G_IO_ERROR_CANT_CREATE_BACKUP"
              glib:nick="cant-create-backup"/>
      <member name="wrong_etag"
              value="23"
              c:identifier="G_IO_ERROR_WRONG_ETAG"
              glib:nick="wrong-etag"/>
      <member name="timed_out"
              value="24"
              c:identifier="G_IO_ERROR_TIMED_OUT"
              glib:nick="timed-out"/>
      <member name="would_recurse"
              value="25"
              c:identifier="G_IO_ERROR_WOULD_RECURSE"
              glib:nick="would-recurse"/>
      <member name="busy"
              value="26"
              c:identifier="G_IO_ERROR_BUSY"
              glib:nick="busy"/>
      <member name="would_block"
              value="27"
              c:identifier="G_IO_ERROR_WOULD_BLOCK"
              glib:nick="would-block"/>
      <member name="host_not_found"
              value="28"
              c:identifier="G_IO_ERROR_HOST_NOT_FOUND"
              glib:nick="host-not-found"/>
      <member name="would_merge"
              value="29"
              c:identifier="G_IO_ERROR_WOULD_MERGE"
              glib:nick="would-merge"/>
      <member name="failed_handled"
              value="30"
              c:identifier="G_IO_ERROR_FAILED_HANDLED"
              glib:nick="failed-handled"/>
      <member name="too_many_open_files"
              value="31"
              c:identifier="G_IO_ERROR_TOO_MANY_OPEN_FILES"
              glib:nick="too-many-open-files"/>
      <member name="not_initialized"
              value="32"
              c:identifier="G_IO_ERROR_NOT_INITIALIZED"
              glib:nick="not-initialized"/>
      <member name="address_in_use"
              value="33"
              c:identifier="G_IO_ERROR_ADDRESS_IN_USE"
              glib:nick="address-in-use"/>
      <member name="partial_input"
              value="34"
              c:identifier="G_IO_ERROR_PARTIAL_INPUT"
              glib:nick="partial-input"/>
      <member name="invalid_data"
              value="35"
              c:identifier="G_IO_ERROR_INVALID_DATA"
              glib:nick="invalid-data"/>
      <member name="dbus_error"
              value="36"
              c:identifier="G_IO_ERROR_DBUS_ERROR"
              glib:nick="dbus-error"/>
      <member name="host_unreachable"
              value="37"
              c:identifier="G_IO_ERROR_HOST_UNREACHABLE"
              glib:nick="host-unreachable"/>
      <member name="network_unreachable"
              value="38"
              c:identifier="G_IO_ERROR_NETWORK_UNREACHABLE"
              glib:nick="network-unreachable"/>
      <member name="connection_refused"
              value="39"
              c:identifier="G_IO_ERROR_CONNECTION_REFUSED"
              glib:nick="connection-refused"/>
      <member name="proxy_failed"
              value="40"
              c:identifier="G_IO_ERROR_PROXY_FAILED"
              glib:nick="proxy-failed"/>
      <member name="proxy_auth_failed"
              value="41"
              c:identifier="G_IO_ERROR_PROXY_AUTH_FAILED"
              glib:nick="proxy-auth-failed"/>
      <member name="proxy_need_auth"
              value="42"
              c:identifier="G_IO_ERROR_PROXY_NEED_AUTH"
              glib:nick="proxy-need-auth"/>
      <member name="proxy_not_allowed"
              value="43"
              c:identifier="G_IO_ERROR_PROXY_NOT_ALLOWED"
              glib:nick="proxy-not-allowed"/>
    </enumeration>
    <record name="IOExtension" c:type="GIOExtension">
      <method name="get_name" c:identifier="g_io_extension_get_name">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_priority" c:identifier="g_io_extension_get_priority">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="ref_class" c:identifier="g_io_extension_ref_class">
        <return-value transfer-ownership="full">
          <type name="GObject.TypeClass" c:type="GTypeClass*"/>
        </return-value>
      </method>
    </record>
    <record name="IOExtensionPoint" c:type="GIOExtensionPoint">
      <method name="set_required_type"
              c:identifier="g_io_extension_point_set_required_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_required_type"
              c:identifier="g_io_extension_point_get_required_type">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
      </method>
      <method name="get_extensions"
              c:identifier="g_io_extension_point_get_extensions">
        <return-value transfer-ownership="none">
          <type name="GLib.List" c:type="GList*">
            <type name="IOExtensionPoint"/>
          </type>
        </return-value>
      </method>
      <method name="get_extension_by_name"
              c:identifier="g_io_extension_point_get_extension_by_name">
        <return-value transfer-ownership="full">
          <type name="IOExtension" c:type="GIOExtension*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <class name="IOModule"
           c:type="GIOModule"
           parent="GObject.TypeModule"
           glib:type-name="GIOModule"
           glib:get-type="g_io_module_get_type"
           glib:type-struct="IOModuleClass">
      <doc xml:whitespace="preserve">Opaque module base class for extending GIO.</doc>
      <implements name="GObject.TypePlugin"/>
      <constructor name="new" c:identifier="g_io_module_new">
        <return-value transfer-ownership="full">
          <type name="IOModule" c:type="GIOModule*"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="query" c:identifier="g_io_module_query" version="2.24">
        <doc xml:whitespace="preserve">Optional API for GIO modules to implement.
Should return a list of all the extension points that may be
implemented in this module.
This method will not be called in normal use, however it may be
called when probing existing modules and recording which extension
points that this modle is used for. This means we won't have to
load and initialze this module unless its needed.
If this function is not implemented by the module the module will
always be loaded, initialized and then unloaded on application startup
so that it can register its extension points during init.
Note that a module need not actually implement all the extension points
that g_io_module_query returns, since the exact list of extension may
depend on runtime issues. However all extension points actually implemented
must be returned by g_io_module_query() (if defined).
When installing a module that implements g_io_module_query you must
run gio-querymodules in order to build the cache files required for
lazy loading.
extension points of the module. The array must be suitable for
freeing with g_strfreev().</doc>
        <return-value transfer-ownership="full">
          <doc xml:whitespace="preserve">A %NULL-terminated array of strings, listing the supported</doc>
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </function>
      <method name="load" c:identifier="g_io_module_load">
        <doc xml:whitespace="preserve">Required API for GIO modules to implement.
This function is ran after the module has been loaded into GIO,
to initialize the module.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="unload" c:identifier="g_io_module_unload">
        <doc xml:whitespace="preserve">Required API for GIO modules to implement.
This function is ran when the module is being unloaded from GIO,
to finalize the module.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
    </class>
    <record name="IOModuleClass"
            c:type="GIOModuleClass"
            glib:is-gtype-struct-for="IOModule">
    </record>
    <record name="IOSchedulerJob" c:type="GIOSchedulerJob">
      <doc xml:whitespace="preserve">Opaque class for definining and scheduling IO jobs.</doc>
      <method name="send_to_mainloop"
              c:identifier="g_io_scheduler_job_send_to_mainloop">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_to_mainloop_async"
              c:identifier="g_io_scheduler_job_send_to_mainloop_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func"
                     transfer-ownership="none"
                     scope="notified"
                     closure="2"
                     destroy="3">
            <type name="GLib.SourceFunc" c:type="GSourceFunc"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="notify" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
    </record>
    <callback name="IOSchedulerJobFunc" c:type="GIOSchedulerJobFunc">
      <doc xml:whitespace="preserve">I/O Job function.
Note that depending on whether threads are available, the
#GIOScheduler may run jobs in separate threads or in an idle
in the mainloop.
Long-running jobs should periodically check the @cancellable
to see if they have been cancelled.
complete the job, %FALSE if the job is complete (or cancelled)</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if this function should be called again to</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="job" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GIOSchedulerJob.</doc>
          <type name="IOSchedulerJob" c:type="GIOSchedulerJob*"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <doc xml:whitespace="preserve">optional #GCancellable object, %NULL to ignore.</doc>
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">the data to pass to callback function</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <class name="IOStream"
           c:type="GIOStream"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GIOStream"
           glib:get-type="g_io_stream_get_type"
           glib:type-struct="IOStreamClass">
      <doc xml:whitespace="preserve">Base class for read-write streams.</doc>
      <virtual-method name="get_input_stream" invoker="get_input_stream">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_output_stream" invoker="get_output_stream">
        <return-value transfer-ownership="full">
          <type name="OutputStream" c:type="GOutputStream*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="close_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_async" invoker="close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_finish" invoker="close_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_input_stream"
              c:identifier="g_io_stream_get_input_stream">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
      </method>
      <method name="get_output_stream"
              c:identifier="g_io_stream_get_output_stream">
        <return-value transfer-ownership="full">
          <type name="OutputStream" c:type="GOutputStream*"/>
        </return-value>
      </method>
      <method name="close" c:identifier="g_io_stream_close" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_async" c:identifier="g_io_stream_close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="g_io_stream_close_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_io_stream_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_pending" c:identifier="g_io_stream_has_pending">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_pending"
              c:identifier="g_io_stream_set_pending"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="clear_pending" c:identifier="g_io_stream_clear_pending">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="closed" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="input-stream" transfer-ownership="none">
        <type name="InputStream" c:type="GInputStream"/>
      </property>
      <property name="output-stream" transfer-ownership="none">
        <type name="OutputStream" c:type="GOutputStream"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="IOStreamPrivate" c:type="GIOStreamPrivate*"/>
      </field>
    </class>
    <record name="IOStreamClass"
            c:type="GIOStreamClass"
            glib:is-gtype-struct-for="IOStream">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_input_stream">
        <callback name="get_input_stream" c:type="get_input_stream">
          <return-value transfer-ownership="full">
            <type name="InputStream" c:type="GInputStream*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_output_stream">
        <callback name="get_output_stream" c:type="get_output_stream">
          <return-value transfer-ownership="full">
            <type name="OutputStream" c:type="GOutputStream*"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_fn">
        <callback name="close_fn" c:type="close_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_async">
        <callback name="close_async" c:type="close_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_finish">
        <callback name="close_finish" c:type="close_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved8">
        <callback name="g_reserved8" c:type="_g_reserved8">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved9">
        <callback name="g_reserved9" c:type="_g_reserved9">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved10">
        <callback name="g_reserved10" c:type="_g_reserved10">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="IOStreamPrivate" c:type="GIOStreamPrivate">
    </record>
    <interface name="Icon"
               c:type="GIcon"
               glib:type-name="GIcon"
               glib:get-type="g_icon_get_type"
               glib:type-struct="IconIface">
      <doc xml:whitespace="preserve">An abstract type that specifies an icon.</doc>
      <virtual-method name="hash">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </virtual-method>
      <virtual-method name="equal" invoker="equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="icon2" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="to_tokens">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tokens" transfer-ownership="none">
            <array name="GLib.PtrArray" c:type="GPtrArray*">
              <type name="any" c:type="gpointer"/>
            </array>
          </parameter>
          <parameter name="out_version"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="equal" c:identifier="g_icon_equal">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="icon2" transfer-ownership="none">
            <type name="Icon" c:type="GIcon*"/>
          </parameter>
        </parameters>
      </method>
      <method name="to_string" c:identifier="g_icon_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
    </interface>
    <record name="IconIface"
            c:type="GIconIface"
            glib:is-gtype-struct-for="Icon">
      <doc xml:whitespace="preserve">GIconIface is used to implement GIcon types for various
different systems. See #GThemedIcon and #GLoadableIcon for
examples of how to implement this interface.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="hash">
        <callback name="hash" c:type="hash">
          <return-value transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </return-value>
          <parameters>
            <parameter name="icon" transfer-ownership="none">
              <type name="Icon" c:type="GIcon*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="equal">
        <callback name="equal" c:type="equal">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="icon1" transfer-ownership="none">
              <type name="Icon" c:type="GIcon*"/>
            </parameter>
            <parameter name="icon2" transfer-ownership="none">
              <type name="Icon" c:type="GIcon*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="to_tokens">
        <callback name="to_tokens" c:type="to_tokens">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="icon" transfer-ownership="none">
              <type name="Icon" c:type="GIcon*"/>
            </parameter>
            <parameter name="tokens" transfer-ownership="none">
              <array name="GLib.PtrArray" c:type="GPtrArray*">
                <type name="any" c:type="gpointer"/>
              </array>
            </parameter>
            <parameter name="out_version"
                       direction="out"
                       caller-allocates="0"
                       transfer-ownership="full">
              <type name="int" c:type="gint*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="from_tokens">
        <callback name="from_tokens" c:type="from_tokens" throws="1">
          <return-value transfer-ownership="full">
            <type name="Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="tokens" transfer-ownership="none">
              <array c:type="gchar**">
                <type name="utf8"/>
              </array>
            </parameter>
            <parameter name="num_tokens" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
            <parameter name="version" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="InetAddress"
           c:type="GInetAddress"
           parent="GObject.Object"
           glib:type-name="GInetAddress"
           glib:get-type="g_inet_address_get_type"
           glib:type-struct="InetAddressClass">
      <constructor name="new_from_string"
                   c:identifier="g_inet_address_new_from_string">
        <return-value transfer-ownership="full">
          <type name="InetAddress" c:type="GInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="string" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_bytes"
                   c:identifier="g_inet_address_new_from_bytes">
        <return-value transfer-ownership="full">
          <type name="InetAddress" c:type="GInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="bytes" transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </parameter>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_loopback"
                   c:identifier="g_inet_address_new_loopback">
        <return-value transfer-ownership="full">
          <type name="InetAddress" c:type="GInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_any" c:identifier="g_inet_address_new_any">
        <return-value transfer-ownership="full">
          <type name="InetAddress" c:type="GInetAddress*"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="to_string" invoker="to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="to_bytes" invoker="to_bytes">
        <return-value transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
      </virtual-method>
      <method name="to_string" c:identifier="g_inet_address_to_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="to_bytes" c:identifier="g_inet_address_to_bytes">
        <return-value transfer-ownership="none">
          <array c:type="guint8*">
            <type name="uint8"/>
          </array>
        </return-value>
      </method>
      <method name="get_native_size"
              c:identifier="g_inet_address_get_native_size">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="get_family" c:identifier="g_inet_address_get_family">
        <return-value transfer-ownership="full">
          <type name="SocketFamily" c:type="GSocketFamily"/>
        </return-value>
      </method>
      <method name="get_is_any" c:identifier="g_inet_address_get_is_any">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_loopback"
              c:identifier="g_inet_address_get_is_loopback">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_link_local"
              c:identifier="g_inet_address_get_is_link_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_site_local"
              c:identifier="g_inet_address_get_is_site_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_multicast"
              c:identifier="g_inet_address_get_is_multicast">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_mc_global"
              c:identifier="g_inet_address_get_is_mc_global">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_mc_link_local"
              c:identifier="g_inet_address_get_is_mc_link_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_mc_node_local"
              c:identifier="g_inet_address_get_is_mc_node_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_mc_org_local"
              c:identifier="g_inet_address_get_is_mc_org_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_is_mc_site_local"
              c:identifier="g_inet_address_get_is_mc_site_local">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="bytes"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="family"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="SocketFamily" c:type="GSocketFamily"/>
      </property>
      <property name="is-any" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-link-local" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-loopback" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-mc-global" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-mc-link-local" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-mc-node-local" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-mc-org-local" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-mc-site-local" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-multicast" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="is-site-local" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="InetAddressPrivate" c:type="GInetAddressPrivate*"/>
      </field>
    </class>
    <record name="InetAddressClass"
            c:type="GInetAddressClass"
            glib:is-gtype-struct-for="InetAddress">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="to_string">
        <callback name="to_string" c:type="to_string">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="address" transfer-ownership="none">
              <type name="InetAddress" c:type="GInetAddress*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="to_bytes">
        <callback name="to_bytes" c:type="to_bytes">
          <return-value transfer-ownership="none">
            <array c:type="guint8*">
              <type name="uint8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="address" transfer-ownership="none">
              <type name="InetAddress" c:type="GInetAddress*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="InetAddressPrivate" c:type="GInetAddressPrivate">
    </record>
    <class name="InetSocketAddress"
           c:type="GInetSocketAddress"
           parent="SocketAddress"
           glib:type-name="GInetSocketAddress"
           glib:get-type="g_inet_socket_address_get_type"
           glib:type-struct="InetSocketAddressClass">
      <implements name="SocketConnectable"/>
      <constructor name="new" c:identifier="g_inet_socket_address_new">
        <return-value transfer-ownership="full">
          <type name="InetSocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_address"
              c:identifier="g_inet_socket_address_get_address">
        <return-value transfer-ownership="full">
          <type name="InetAddress" c:type="GInetAddress*"/>
        </return-value>
      </method>
      <method name="get_port" c:identifier="g_inet_socket_address_get_port">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
      </method>
      <property name="address"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="InetAddress" c:type="GInetAddress"/>
      </property>
      <property name="port"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="SocketAddress" c:type="GSocketAddress"/>
      </field>
      <field name="priv">
        <type name="InetSocketAddressPrivate"
              c:type="GInetSocketAddressPrivate*"/>
      </field>
    </class>
    <record name="InetSocketAddressClass"
            c:type="GInetSocketAddressClass"
            glib:is-gtype-struct-for="InetSocketAddress">
      <field name="parent_class">
        <type name="SocketAddressClass" c:type="GSocketAddressClass"/>
      </field>
    </record>
    <record name="InetSocketAddressPrivate" c:type="GInetSocketAddressPrivate">
    </record>
    <interface name="Initable"
               c:type="GInitable"
               version="2.22"
               glib:type-name="GInitable"
               glib:get-type="g_initable_get_type"
               glib:type-struct="InitableIface">
      <doc xml:whitespace="preserve">Interface for initializable objects.</doc>
      <virtual-method name="init" invoker="init" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="init" c:identifier="g_initable_init" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="InitableIface"
            c:type="GInitableIface"
            glib:is-gtype-struct-for="Initable"
            version="2.22">
      <doc xml:whitespace="preserve">Provides an interface for initializing object such that initialization
may fail.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="init">
        <callback name="init" c:type="init" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="initable" transfer-ownership="none">
              <type name="Initable" c:type="GInitable*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="InputStream"
           c:type="GInputStream"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GInputStream"
           glib:get-type="g_input_stream_get_type"
           glib:type-struct="InputStreamClass">
      <doc xml:whitespace="preserve">Base class for streaming input operations.</doc>
      <virtual-method name="read_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="skip" invoker="skip" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_async" invoker="read_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="6">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="read_finish" invoker="read_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="skip_async" invoker="skip_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="skip_finish" invoker="skip_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_async" invoker="close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_finish" invoker="close_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="read" c:identifier="g_input_stream_read" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_all"
              c:identifier="g_input_stream_read_all"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="bytes_read"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip" c:identifier="g_input_stream_skip" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_input_stream_close" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_async" c:identifier="g_input_stream_read_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="read_finish"
              c:identifier="g_input_stream_read_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip_async" c:identifier="g_input_stream_skip_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="skip_finish"
              c:identifier="g_input_stream_skip_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_async" c:identifier="g_input_stream_close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="g_input_stream_close_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_input_stream_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_pending" c:identifier="g_input_stream_has_pending">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_pending"
              c:identifier="g_input_stream_set_pending"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="clear_pending" c:identifier="g_input_stream_clear_pending">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="InputStreamPrivate" c:type="GInputStreamPrivate*"/>
      </field>
    </class>
    <record name="InputStreamClass"
            c:type="GInputStreamClass"
            glib:is-gtype-struct-for="InputStream">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="read_fn">
        <callback name="read_fn" c:type="read_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gsize" c:type="gsize"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="skip">
        <callback name="skip" c:type="skip" throws="1">
          <return-value transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gsize" c:type="gsize"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_fn">
        <callback name="close_fn" c:type="close_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_async">
        <callback name="read_async" c:type="read_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gsize" c:type="gsize"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="6">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="read_finish">
        <callback name="read_finish" c:type="read_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="skip_async">
        <callback name="skip_async" c:type="skip_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gsize" c:type="gsize"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="skip_finish">
        <callback name="skip_finish" c:type="skip_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_async">
        <callback name="close_async" c:type="close_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_finish">
        <callback name="close_finish" c:type="close_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="InputStreamPrivate" c:type="GInputStreamPrivate">
    </record>
    <record name="InputVector" c:type="GInputVector" version="2.22">
      <doc xml:whitespace="preserve">Structure used for scatter/gather data input.
You generally pass in an array of #GInputVector&lt;!-- --&gt;s
and the operation will store the read data starting in the
first buffer, switching to the next as needed.</doc>
      <field name="buffer" writable="1">
        <type name="any" c:type="gpointer"/>
      </field>
      <field name="size" writable="1">
        <type name="gsize" c:type="gsize"/>
      </field>
    </record>
    <interface name="LoadableIcon"
               c:type="GLoadableIcon"
               glib:type-name="GLoadableIcon"
               glib:get-type="g_loadable_icon_get_type"
               glib:type-struct="LoadableIconIface">
      <doc xml:whitespace="preserve">Generic type for all kinds of icons that can be loaded
as a stream.</doc>
      <prerequisite name="Icon"/>
      <virtual-method name="load" invoker="load" throws="1">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="load_async" invoker="load_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="load_finish" invoker="load_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="load" c:identifier="g_loadable_icon_load" throws="1">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_async" c:identifier="g_loadable_icon_load_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="size" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_finish"
              c:identifier="g_loadable_icon_load_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="InputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="res" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="LoadableIconIface"
            c:type="GLoadableIconIface"
            glib:is-gtype-struct-for="LoadableIcon">
      <doc xml:whitespace="preserve">Interface for icons that can be loaded as a stream.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="load">
        <callback name="load" c:type="load" throws="1">
          <return-value transfer-ownership="full">
            <type name="InputStream" c:type="GInputStream*"/>
          </return-value>
          <parameters>
            <parameter name="icon" transfer-ownership="none">
              <type name="LoadableIcon" c:type="GLoadableIcon*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <array c:type="char**">
                <type name="utf8"/>
              </array>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="load_async">
        <callback name="load_async" c:type="load_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="icon" transfer-ownership="none">
              <type name="LoadableIcon" c:type="GLoadableIcon*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="load_finish">
        <callback name="load_finish" c:type="load_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="InputStream" c:type="GInputStream*"/>
          </return-value>
          <parameters>
            <parameter name="icon" transfer-ownership="none">
              <type name="LoadableIcon" c:type="GLoadableIcon*"/>
            </parameter>
            <parameter name="res" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <array c:type="char**">
                <type name="utf8"/>
              </array>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="MemoryInputStream"
           c:type="GMemoryInputStream"
           parent="InputStream"
           glib:type-name="GMemoryInputStream"
           glib:get-type="g_memory_input_stream_get_type"
           glib:type-struct="MemoryInputStreamClass">
      <doc xml:whitespace="preserve">Implements #GInputStream for arbitrary memory chunks.</doc>
      <implements name="Seekable"/>
      <constructor name="new" c:identifier="g_memory_input_stream_new">
        <return-value transfer-ownership="full">
          <type name="MemoryInputStream" c:type="GInputStream*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_data"
                   c:identifier="g_memory_input_stream_new_from_data">
        <return-value transfer-ownership="full">
          <type name="MemoryInputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="add_data" c:identifier="g_memory_input_stream_add_data">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="InputStream" c:type="GInputStream"/>
      </field>
      <field name="priv">
        <type name="MemoryInputStreamPrivate"
              c:type="GMemoryInputStreamPrivate*"/>
      </field>
    </class>
    <record name="MemoryInputStreamClass"
            c:type="GMemoryInputStreamClass"
            glib:is-gtype-struct-for="MemoryInputStream">
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MemoryInputStreamPrivate" c:type="GMemoryInputStreamPrivate">
    </record>
    <class name="MemoryOutputStream"
           c:type="GMemoryOutputStream"
           parent="OutputStream"
           glib:type-name="GMemoryOutputStream"
           glib:get-type="g_memory_output_stream_get_type"
           glib:type-struct="MemoryOutputStreamClass">
      <doc xml:whitespace="preserve">Implements #GOutputStream for arbitrary memory chunks.</doc>
      <implements name="Seekable"/>
      <constructor name="new" c:identifier="g_memory_output_stream_new">
        <return-value transfer-ownership="full">
          <type name="MemoryOutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="realloc_function"
                     transfer-ownership="none"
                     scope="call"
                     destroy="3">
            <type name="ReallocFunc" c:type="GReallocFunc"/>
          </parameter>
          <parameter name="destroy_function"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_data" c:identifier="g_memory_output_stream_get_data">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="get_size" c:identifier="g_memory_output_stream_get_size">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="get_data_size"
              c:identifier="g_memory_output_stream_get_data_size">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="steal_data"
              c:identifier="g_memory_output_stream_steal_data">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <property name="data"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="data-size" transfer-ownership="none">
        <type name="ulong" c:type="gulong"/>
      </property>
      <property name="destroy-function"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="realloc-function"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </property>
      <property name="size"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="ulong" c:type="gulong"/>
      </property>
      <field name="parent_instance">
        <type name="OutputStream" c:type="GOutputStream"/>
      </field>
      <field name="priv">
        <type name="MemoryOutputStreamPrivate"
              c:type="GMemoryOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="MemoryOutputStreamClass"
            c:type="GMemoryOutputStreamClass"
            glib:is-gtype-struct-for="MemoryOutputStream">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MemoryOutputStreamPrivate"
            c:type="GMemoryOutputStreamPrivate">
    </record>
    <interface name="Mount"
               c:type="GMount"
               glib:type-name="GMount"
               glib:get-type="g_mount_get_type"
               glib:type-struct="MountIface">
      <doc xml:whitespace="preserve">A handle to an object implementing the #GMountIface interface.</doc>
      <virtual-method name="get_root" invoker="get_root">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_uuid" invoker="get_uuid">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_volume" invoker="get_volume">
        <return-value transfer-ownership="full">
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_drive" invoker="get_drive">
        <return-value transfer-ownership="full">
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_unmount" invoker="can_unmount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_eject" invoker="can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="unmount" invoker="unmount">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_finish"
                      invoker="unmount_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject" invoker="eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_finish" invoker="eject_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remount" invoker="remount">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="remount_finish"
                      invoker="remount_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="guess_content_type" invoker="guess_content_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="force_rescan" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="guess_content_type_finish"
                      invoker="guess_content_type_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="guess_content_type_sync"
                      invoker="guess_content_type_sync"
                      throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="force_rescan" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_with_operation"
                      invoker="unmount_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unmount_with_operation_finish"
                      invoker="unmount_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_with_operation"
                      invoker="eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_with_operation_finish"
                      invoker="eject_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_default_location"
                      invoker="get_default_location">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </virtual-method>
      <method name="get_root" c:identifier="g_mount_get_root">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <method name="get_default_location"
              c:identifier="g_mount_get_default_location">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <method name="get_name" c:identifier="g_mount_get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_icon" c:identifier="g_mount_get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="get_uuid" c:identifier="g_mount_get_uuid">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_volume" c:identifier="g_mount_get_volume">
        <return-value transfer-ownership="full">
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
      </method>
      <method name="get_drive" c:identifier="g_mount_get_drive">
        <return-value transfer-ownership="full">
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
      </method>
      <method name="can_unmount" c:identifier="g_mount_can_unmount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="can_eject" c:identifier="g_mount_can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="unmount" c:identifier="g_mount_unmount">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_finish"
              c:identifier="g_mount_unmount_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject" c:identifier="g_mount_eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_finish"
              c:identifier="g_mount_eject_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remount" c:identifier="g_mount_remount">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="remount_finish"
              c:identifier="g_mount_remount_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="guess_content_type"
              c:identifier="g_mount_guess_content_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="force_rescan" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="guess_content_type_finish"
              c:identifier="g_mount_guess_content_type_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="guess_content_type_sync"
              c:identifier="g_mount_guess_content_type_sync"
              throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="force_rescan" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_shadowed" c:identifier="g_mount_is_shadowed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="shadow" c:identifier="g_mount_shadow">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="unshadow" c:identifier="g_mount_unshadow">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="unmount_with_operation"
              c:identifier="g_mount_unmount_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="unmount_with_operation_finish"
              c:identifier="g_mount_unmount_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_with_operation"
              c:identifier="g_mount_eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_with_operation_finish"
              c:identifier="g_mount_eject_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="pre-unmount">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="unmounted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="MountIface"
            c:type="GMountIface"
            glib:is-gtype-struct-for="Mount">
      <doc xml:whitespace="preserve">Interface for implementing operations for mounts.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmounted">
        <callback name="unmounted" c:type="unmounted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_root">
        <callback name="get_root" c:type="get_root">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon">
        <callback name="get_icon" c:type="get_icon">
          <return-value transfer-ownership="full">
            <type name="Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_uuid">
        <callback name="get_uuid" c:type="get_uuid">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_volume">
        <callback name="get_volume" c:type="get_volume">
          <return-value transfer-ownership="full">
            <type name="Volume" c:type="GVolume*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_drive">
        <callback name="get_drive" c:type="get_drive">
          <return-value transfer-ownership="full">
            <type name="Drive" c:type="GDrive*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_unmount">
        <callback name="can_unmount" c:type="can_unmount">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_eject">
        <callback name="can_eject" c:type="can_eject">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount">
        <callback name="unmount" c:type="unmount">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_finish">
        <callback name="unmount_finish" c:type="unmount_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject">
        <callback name="eject" c:type="eject">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_finish">
        <callback name="eject_finish" c:type="eject_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remount">
        <callback name="remount" c:type="remount">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountMountFlags" c:type="GMountMountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="remount_finish">
        <callback name="remount_finish" c:type="remount_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="guess_content_type">
        <callback name="guess_content_type" c:type="guess_content_type">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="force_rescan" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="guess_content_type_finish">
        <callback name="guess_content_type_finish"
                  c:type="guess_content_type_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="guess_content_type_sync">
        <callback name="guess_content_type_sync"
                  c:type="guess_content_type_sync"
                  throws="1">
          <return-value transfer-ownership="full">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="force_rescan" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="pre_unmount">
        <callback name="pre_unmount" c:type="pre_unmount">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_with_operation">
        <callback name="unmount_with_operation"
                  c:type="unmount_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unmount_with_operation_finish">
        <callback name="unmount_with_operation_finish"
                  c:type="unmount_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation">
        <callback name="eject_with_operation" c:type="eject_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation_finish">
        <callback name="eject_with_operation_finish"
                  c:type="eject_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_default_location">
        <callback name="get_default_location" c:type="get_default_location">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="MountMountFlags"
                 glib:type-name="GMountMountFlags"
                 glib:get-type="g_mount_mount_flags_get_type"
                 c:type="GMountMountFlags">
      <doc xml:whitespace="preserve">Flags used when mounting a mount.</doc>
      <member name="none"
              value="0"
              c:identifier="G_MOUNT_MOUNT_NONE"
              glib:nick="none"/>
    </enumeration>
    <class name="MountOperation"
           c:type="GMountOperation"
           parent="GObject.Object"
           glib:type-name="GMountOperation"
           glib:get-type="g_mount_operation_get_type"
           glib:type-struct="MountOperationClass">
      <doc xml:whitespace="preserve">Class for providing authentication methods for mounting operations,
such as mounting a file locally, or authenticating with a server.</doc>
      <constructor name="new" c:identifier="g_mount_operation_new">
        <return-value transfer-ownership="full">
          <type name="MountOperation" c:type="GMountOperation*"/>
        </return-value>
      </constructor>
      <method name="get_username"
              c:identifier="g_mount_operation_get_username">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="set_username"
              c:identifier="g_mount_operation_set_username">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="username" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_password"
              c:identifier="g_mount_operation_get_password">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="set_password"
              c:identifier="g_mount_operation_set_password">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="password" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_anonymous"
              c:identifier="g_mount_operation_get_anonymous">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_anonymous"
              c:identifier="g_mount_operation_set_anonymous">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="anonymous" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_domain" c:identifier="g_mount_operation_get_domain">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="set_domain" c:identifier="g_mount_operation_set_domain">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_password_save"
              c:identifier="g_mount_operation_get_password_save">
        <return-value transfer-ownership="full">
          <type name="PasswordSave" c:type="GPasswordSave"/>
        </return-value>
      </method>
      <method name="set_password_save"
              c:identifier="g_mount_operation_set_password_save">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="save" transfer-ownership="none">
            <type name="PasswordSave" c:type="GPasswordSave"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_choice" c:identifier="g_mount_operation_get_choice">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <method name="set_choice" c:identifier="g_mount_operation_set_choice">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="choice" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="reply" c:identifier="g_mount_operation_reply">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="MountOperationResult" c:type="GMountOperationResult"/>
          </parameter>
        </parameters>
      </method>
      <property name="anonymous" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="choice" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="domain" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="password" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="password-save" writable="1" transfer-ownership="none">
        <type name="PasswordSave" c:type="GPasswordSave"/>
      </property>
      <property name="username" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="MountOperationPrivate" c:type="GMountOperationPrivate*"/>
      </field>
      <glib:signal name="aborted">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="ask-password">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p2" transfer-ownership="none">
            <type name="AskPasswordFlags" c:type="GAskPasswordFlags"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="ask-question">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Strv" c:type="GStrv"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="reply">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="MountOperationResult" c:type="GMountOperationResult"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="show-processes">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <array name="GLib.Array" c:type="GArray">
              <type name="any" c:type="gpointer"/>
            </array>
          </parameter>
          <parameter name="p1" transfer-ownership="none">
            <type name="GObject.Strv" c:type="GStrv"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="MountOperationClass"
            c:type="GMountOperationClass"
            glib:is-gtype-struct-for="MountOperation">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="ask_password">
        <callback name="ask_password" c:type="ask_password">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="default_user" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="default_domain" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="AskPasswordFlags" c:type="GAskPasswordFlags"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="ask_question">
        <callback name="ask_question" c:type="ask_question">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="choices" transfer-ownership="full">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reply">
        <callback name="reply" c:type="reply">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="MountOperationResult"
                    c:type="GMountOperationResult"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="aborted">
        <callback name="aborted" c:type="aborted">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show_processes">
        <callback name="show_processes" c:type="show_processes">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="op" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="processes" transfer-ownership="none">
              <array name="GLib.Array" c:type="GArray*">
                <type name="any" c:type="gpointer"/>
              </array>
            </parameter>
            <parameter name="choices" transfer-ownership="full">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved8">
        <callback name="g_reserved8" c:type="_g_reserved8">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved9">
        <callback name="g_reserved9" c:type="_g_reserved9">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved10">
        <callback name="g_reserved10" c:type="_g_reserved10">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="MountOperationPrivate" c:type="GMountOperationPrivate">
    </record>
    <enumeration name="MountOperationResult"
                 glib:type-name="GMountOperationResult"
                 glib:get-type="g_mount_operation_result_get_type"
                 c:type="GMountOperationResult">
      <doc xml:whitespace="preserve">#GMountOperationResult is returned as a result when a request for
information is send by the mounting operation.</doc>
      <member name="handled"
              value="0"
              c:identifier="G_MOUNT_OPERATION_HANDLED"
              glib:nick="handled"/>
      <member name="aborted"
              value="1"
              c:identifier="G_MOUNT_OPERATION_ABORTED"
              glib:nick="aborted"/>
      <member name="unhandled"
              value="2"
              c:identifier="G_MOUNT_OPERATION_UNHANDLED"
              glib:nick="unhandled"/>
    </enumeration>
    <bitfield name="MountUnmountFlags"
              glib:type-name="GMountUnmountFlags"
              glib:get-type="g_mount_unmount_flags_get_type"
              c:type="GMountUnmountFlags">
      <doc xml:whitespace="preserve">Flags used when an unmounting a mount.</doc>
      <member name="none"
              value="0"
              c:identifier="G_MOUNT_UNMOUNT_NONE"
              glib:nick="none"/>
      <member name="force"
              value="1"
              c:identifier="G_MOUNT_UNMOUNT_FORCE"
              glib:nick="force"/>
    </bitfield>
    <constant name="NATIVE_VOLUME_MONITOR_EXTENSION_POINT_NAME"
              value="gio-native-volume-monitor">
      <type name="utf8"/>
    </constant>
    <class name="NativeVolumeMonitor"
           c:type="GNativeVolumeMonitor"
           parent="VolumeMonitor"
           abstract="1"
           glib:type-name="GNativeVolumeMonitor"
           glib:get-type="g_native_volume_monitor_get_type"
           glib:type-struct="NativeVolumeMonitorClass">
      <field name="parent_instance">
        <type name="VolumeMonitor" c:type="GVolumeMonitor"/>
      </field>
    </class>
    <record name="NativeVolumeMonitorClass"
            c:type="GNativeVolumeMonitorClass"
            glib:is-gtype-struct-for="NativeVolumeMonitor">
      <field name="parent_class">
        <type name="VolumeMonitorClass" c:type="GVolumeMonitorClass"/>
      </field>
      <field name="get_mount_for_mount_path">
        <callback name="get_mount_for_mount_path"
                  c:type="get_mount_for_mount_path">
          <return-value transfer-ownership="full">
            <type name="Mount" c:type="GMount*"/>
          </return-value>
          <parameters>
            <parameter name="mount_path" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="NetworkAddress"
           c:type="GNetworkAddress"
           parent="GObject.Object"
           glib:type-name="GNetworkAddress"
           glib:get-type="g_network_address_get_type"
           glib:type-struct="NetworkAddressClass">
      <implements name="SocketConnectable"/>
      <constructor name="new" c:identifier="g_network_address_new">
        <return-value transfer-ownership="full">
          <type name="NetworkAddress" c:type="GSocketConnectable*"/>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="parse" c:identifier="g_network_address_parse" throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnectable" c:type="GSocketConnectable*"/>
        </return-value>
        <parameters>
          <parameter name="host_and_port" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="default_port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </function>
      <function name="parse_uri"
                c:identifier="g_network_address_parse_uri"
                throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnectable" c:type="GSocketConnectable*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="default_port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_hostname"
              c:identifier="g_network_address_get_hostname">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_port" c:identifier="g_network_address_get_port">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
      </method>
      <method name="get_scheme" c:identifier="g_network_address_get_scheme">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <property name="hostname"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="port"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="scheme"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="NetworkAddressPrivate" c:type="GNetworkAddressPrivate*"/>
      </field>
    </class>
    <record name="NetworkAddressClass"
            c:type="GNetworkAddressClass"
            glib:is-gtype-struct-for="NetworkAddress">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="NetworkAddressPrivate" c:type="GNetworkAddressPrivate">
    </record>
    <class name="NetworkService"
           c:type="GNetworkService"
           parent="GObject.Object"
           glib:type-name="GNetworkService"
           glib:get-type="g_network_service_get_type"
           glib:type-struct="NetworkServiceClass">
      <implements name="SocketConnectable"/>
      <constructor name="new" c:identifier="g_network_service_new">
        <return-value transfer-ownership="full">
          <type name="NetworkService" c:type="GSocketConnectable*"/>
        </return-value>
        <parameters>
          <parameter name="service" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_service" c:identifier="g_network_service_get_service">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_protocol"
              c:identifier="g_network_service_get_protocol">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_domain" c:identifier="g_network_service_get_domain">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_scheme" c:identifier="g_network_service_get_scheme">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="set_scheme" c:identifier="g_network_service_set_scheme">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="scheme" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="domain"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="protocol"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="scheme" writable="1" transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="service"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="NetworkServicePrivate" c:type="GNetworkServicePrivate*"/>
      </field>
    </class>
    <record name="NetworkServiceClass"
            c:type="GNetworkServiceClass"
            glib:is-gtype-struct-for="NetworkService">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="NetworkServicePrivate" c:type="GNetworkServicePrivate">
    </record>
    <class name="OutputStream"
           c:type="GOutputStream"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GOutputStream"
           glib:get-type="g_output_stream_get_type"
           glib:type-struct="OutputStreamClass">
      <doc xml:whitespace="preserve">Base class for writing output.
All classes derived from GOutputStream should implement synchronous
writing, splicing, flushing and closing streams, but may implement
asynchronous versions.</doc>
      <virtual-method name="write_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="splice" invoker="splice" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="flush" invoker="flush" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_async" invoker="write_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="6">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_finish" invoker="write_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="splice_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="splice_finish" invoker="splice_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="flush_async" invoker="flush_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="flush_finish" invoker="flush_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_async" invoker="close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="close_finish" invoker="close_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="write" c:identifier="g_output_stream_write" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_all"
              c:identifier="g_output_stream_write_all"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="bytes_written"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="splice" c:identifier="g_output_stream_splice" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush" c:identifier="g_output_stream_flush" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_output_stream_close" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_async" c:identifier="g_output_stream_write_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="any" c:type="void*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="write_finish"
              c:identifier="g_output_stream_write_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="splice_async" c:identifier="g_output_stream_splice_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="InputStream" c:type="GInputStream*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="OutputStreamSpliceFlags"
                  c:type="GOutputStreamSpliceFlags"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="splice_finish"
              c:identifier="g_output_stream_splice_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush_async" c:identifier="g_output_stream_flush_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="flush_finish"
              c:identifier="g_output_stream_flush_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_async" c:identifier="g_output_stream_close_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="close_finish"
              c:identifier="g_output_stream_close_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_output_stream_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_closing" c:identifier="g_output_stream_is_closing">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="has_pending" c:identifier="g_output_stream_has_pending">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_pending"
              c:identifier="g_output_stream_set_pending"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="clear_pending"
              c:identifier="g_output_stream_clear_pending">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="OutputStreamPrivate" c:type="GOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="OutputStreamClass"
            c:type="GOutputStreamClass"
            glib:is-gtype-struct-for="OutputStream">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="write_fn">
        <callback name="write_fn" c:type="write_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gsize" c:type="gsize"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="splice">
        <callback name="splice" c:type="splice" throws="1">
          <return-value transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="source" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="OutputStreamSpliceFlags"
                    c:type="GOutputStreamSpliceFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="flush">
        <callback name="flush" c:type="flush" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_fn">
        <callback name="close_fn" c:type="close_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_async">
        <callback name="write_async" c:type="write_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="buffer" transfer-ownership="none">
              <type name="any" c:type="void*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="gsize" c:type="gsize"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="6">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_finish">
        <callback name="write_finish" c:type="write_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="splice_async">
        <callback name="splice_async" c:type="splice_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="source" transfer-ownership="none">
              <type name="InputStream" c:type="GInputStream*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="OutputStreamSpliceFlags"
                    c:type="GOutputStreamSpliceFlags"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="splice_finish">
        <callback name="splice_finish" c:type="splice_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="flush_async">
        <callback name="flush_async" c:type="flush_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="flush_finish">
        <callback name="flush_finish" c:type="flush_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_async">
        <callback name="close_async" c:type="close_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="io_priority" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="close_finish">
        <callback name="close_finish" c:type="close_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="stream" transfer-ownership="none">
              <type name="OutputStream" c:type="GOutputStream*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved8">
        <callback name="g_reserved8" c:type="_g_reserved8">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="OutputStreamPrivate" c:type="GOutputStreamPrivate">
    </record>
    <bitfield name="OutputStreamSpliceFlags"
              glib:type-name="GOutputStreamSpliceFlags"
              glib:get-type="g_output_stream_splice_flags_get_type"
              c:type="GOutputStreamSpliceFlags">
      <doc xml:whitespace="preserve">GOutputStreamSpliceFlags determine how streams should be spliced.</doc>
      <member name="none"
              value="0"
              c:identifier="G_OUTPUT_STREAM_SPLICE_NONE"
              glib:nick="none"/>
      <member name="close_source"
              value="1"
              c:identifier="G_OUTPUT_STREAM_SPLICE_CLOSE_SOURCE"
              glib:nick="close-source"/>
      <member name="close_target"
              value="2"
              c:identifier="G_OUTPUT_STREAM_SPLICE_CLOSE_TARGET"
              glib:nick="close-target"/>
    </bitfield>
    <record name="OutputVector" c:type="GOutputVector" version="2.22">
      <doc xml:whitespace="preserve">Structure used for scatter/gather data output.
You generally pass in an array of #GOutputVector&lt;!-- --&gt;s
and the operation will use all the buffers as if they were
one buffer.</doc>
      <field name="buffer" writable="1">
        <type name="any" c:type="gconstpointer"/>
      </field>
      <field name="size" writable="1">
        <type name="gsize" c:type="gsize"/>
      </field>
    </record>
    <constant name="PROXY_EXTENSION_POINT_NAME" value="gio-proxy">
      <type name="utf8"/>
    </constant>
    <constant name="PROXY_RESOLVER_EXTENSION_POINT_NAME"
              value="gio-proxy-resolver">
      <type name="utf8"/>
    </constant>
    <enumeration name="PasswordSave"
                 glib:type-name="GPasswordSave"
                 glib:get-type="g_password_save_get_type"
                 c:type="GPasswordSave">
      <doc xml:whitespace="preserve">#GPasswordSave is used to indicate the lifespan of a saved password.
#Gvfs stores passwords in the Gnome keyring when this flag allows it
to, and later retrieves it again from there.</doc>
      <member name="never"
              value="0"
              c:identifier="G_PASSWORD_SAVE_NEVER"
              glib:nick="never"/>
      <member name="for_session"
              value="1"
              c:identifier="G_PASSWORD_SAVE_FOR_SESSION"
              glib:nick="for-session"/>
      <member name="permanently"
              value="2"
              c:identifier="G_PASSWORD_SAVE_PERMANENTLY"
              glib:nick="permanently"/>
    </enumeration>
    <class name="Permission"
           c:type="GPermission"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GPermission"
           glib:get-type="g_permission_get_type"
           glib:type-struct="PermissionClass">
      <virtual-method name="acquire" invoker="acquire" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="acquire_async" invoker="acquire_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="3">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="acquire_finish"
                      invoker="acquire_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="release" invoker="release" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="release_async" invoker="release_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="3">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="release_finish"
                      invoker="release_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="acquire" c:identifier="g_permission_acquire" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="acquire_async" c:identifier="g_permission_acquire_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="acquire_finish"
              c:identifier="g_permission_acquire_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="release" c:identifier="g_permission_release" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="release_async" c:identifier="g_permission_release_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="release_finish"
              c:identifier="g_permission_release_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_allowed" c:identifier="g_permission_get_allowed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_can_acquire"
              c:identifier="g_permission_get_can_acquire">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_can_release"
              c:identifier="g_permission_get_can_release">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="impl_update" c:identifier="g_permission_impl_update">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="allowed" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="can_acquire" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="can_release" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <property name="allowed" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="can-acquire" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="can-release" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="PermissionPrivate" c:type="GPermissionPrivate*"/>
      </field>
    </class>
    <record name="PermissionClass"
            c:type="GPermissionClass"
            glib:is-gtype-struct-for="Permission">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="acquire">
        <callback name="acquire" c:type="acquire" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="permission" transfer-ownership="none">
              <type name="Permission" c:type="GPermission*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="acquire_async">
        <callback name="acquire_async" c:type="acquire_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="permission" transfer-ownership="none">
              <type name="Permission" c:type="GPermission*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="3">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="acquire_finish">
        <callback name="acquire_finish" c:type="acquire_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="permission" transfer-ownership="none">
              <type name="Permission" c:type="GPermission*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="release">
        <callback name="release" c:type="release" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="permission" transfer-ownership="none">
              <type name="Permission" c:type="GPermission*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="release_async">
        <callback name="release_async" c:type="release_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="permission" transfer-ownership="none">
              <type name="Permission" c:type="GPermission*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="3">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="release_finish">
        <callback name="release_finish" c:type="release_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="permission" transfer-ownership="none">
              <type name="Permission" c:type="GPermission*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reserved">
        <array zero-terminated="0" c:type="gpointer" fixed-size="16">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="PermissionPrivate" c:type="GPermissionPrivate">
    </record>
    <interface name="Proxy"
               c:type="GProxy"
               version="2.26"
               glib:type-name="GProxy"
               glib:get-type="g_proxy_get_type"
               glib:type-struct="ProxyInterface">
      <doc xml:whitespace="preserve">Interface that handles proxy connection and payload.</doc>
      <virtual-method name="connect" invoker="connect" throws="1">
        <return-value transfer-ownership="full">
          <type name="IOStream" c:type="GIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <type name="IOStream" c:type="GIOStream*"/>
          </parameter>
          <parameter name="proxy_address" transfer-ownership="none">
            <type name="ProxyAddress" c:type="GProxyAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="connect_async" invoker="connect_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <type name="IOStream" c:type="GIOStream*"/>
          </parameter>
          <parameter name="proxy_address" transfer-ownership="none">
            <type name="ProxyAddress" c:type="GProxyAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="connect_finish"
                      invoker="connect_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="IOStream" c:type="GIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="supports_hostname" invoker="supports_hostname">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <method name="connect" c:identifier="g_proxy_connect" throws="1">
        <return-value transfer-ownership="full">
          <type name="IOStream" c:type="GIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <type name="IOStream" c:type="GIOStream*"/>
          </parameter>
          <parameter name="proxy_address" transfer-ownership="none">
            <type name="ProxyAddress" c:type="GProxyAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_async" c:identifier="g_proxy_connect_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connection" transfer-ownership="none">
            <type name="IOStream" c:type="GIOStream*"/>
          </parameter>
          <parameter name="proxy_address" transfer-ownership="none">
            <type name="ProxyAddress" c:type="GProxyAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_finish"
              c:identifier="g_proxy_connect_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="IOStream" c:type="GIOStream*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="supports_hostname"
              c:identifier="g_proxy_supports_hostname">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
    </interface>
    <class name="ProxyAddress"
           c:type="GProxyAddress"
           parent="InetSocketAddress"
           glib:type-name="GProxyAddress"
           glib:get-type="g_proxy_address_get_type"
           glib:type-struct="ProxyAddressClass">
      <implements name="SocketConnectable"/>
      <constructor name="new" c:identifier="g_proxy_address_new">
        <return-value transfer-ownership="full">
          <type name="ProxyAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="inetaddr" transfer-ownership="none">
            <type name="InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="dest_hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="dest_port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="username" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="password" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_protocol" c:identifier="g_proxy_address_get_protocol">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_destination_hostname"
              c:identifier="g_proxy_address_get_destination_hostname">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_destination_port"
              c:identifier="g_proxy_address_get_destination_port">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
      </method>
      <method name="get_username" c:identifier="g_proxy_address_get_username">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_password" c:identifier="g_proxy_address_get_password">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <property name="destination-hostname"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="destination-port"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="password"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="protocol"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="username"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="parent_instance">
        <type name="InetSocketAddress" c:type="GInetSocketAddress"/>
      </field>
      <field name="priv">
        <type name="ProxyAddressPrivate" c:type="GProxyAddressPrivate*"/>
      </field>
    </class>
    <record name="ProxyAddressClass"
            c:type="GProxyAddressClass"
            glib:is-gtype-struct-for="ProxyAddress">
      <field name="parent_class">
        <type name="InetSocketAddressClass" c:type="GInetSocketAddressClass"/>
      </field>
    </record>
    <class name="ProxyAddressEnumerator"
           c:type="GProxyAddressEnumerator"
           parent="SocketAddressEnumerator"
           glib:type-name="GProxyAddressEnumerator"
           glib:get-type="g_proxy_address_enumerator_get_type"
           glib:type-struct="ProxyAddressEnumeratorClass">
      <doc xml:whitespace="preserve">A subclass of #GSocketAddressEnumerator that takes another address
enumerator and wraps its results in #GProxyAddress&lt;!-- --&gt;es as
directed by the default #GProxyResolver.</doc>
      <property name="connectable"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="SocketConnectable" c:type="GSocketConnectable"/>
      </property>
      <property name="uri"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="parent_instance">
        <type name="SocketAddressEnumerator"
              c:type="GSocketAddressEnumerator"/>
      </field>
      <field name="priv">
        <type name="ProxyAddressEnumeratorPrivate"
              c:type="GProxyAddressEnumeratorPrivate*"/>
      </field>
    </class>
    <record name="ProxyAddressEnumeratorClass"
            c:type="GProxyAddressEnumeratorClass"
            glib:is-gtype-struct-for="ProxyAddressEnumerator">
      <field name="parent_class">
        <type name="SocketAddressEnumeratorClass"
              c:type="GSocketAddressEnumeratorClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ProxyAddressEnumeratorPrivate"
            c:type="GProxyAddressEnumeratorPrivate">
    </record>
    <record name="ProxyAddressPrivate" c:type="GProxyAddressPrivate">
    </record>
    <record name="ProxyInterface"
            c:type="GProxyInterface"
            glib:is-gtype-struct-for="Proxy"
            version="2.26">
      <doc xml:whitespace="preserve">Provides an interface for handling proxy connection and payload.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="connect">
        <callback name="connect" c:type="connect" throws="1">
          <return-value transfer-ownership="full">
            <type name="IOStream" c:type="GIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="Proxy" c:type="GProxy*"/>
            </parameter>
            <parameter name="connection" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
            <parameter name="proxy_address" transfer-ownership="none">
              <type name="ProxyAddress" c:type="GProxyAddress*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="connect_async">
        <callback name="connect_async" c:type="connect_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="Proxy" c:type="GProxy*"/>
            </parameter>
            <parameter name="connection" transfer-ownership="none">
              <type name="IOStream" c:type="GIOStream*"/>
            </parameter>
            <parameter name="proxy_address" transfer-ownership="none">
              <type name="ProxyAddress" c:type="GProxyAddress*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="connect_finish">
        <callback name="connect_finish" c:type="connect_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="IOStream" c:type="GIOStream*"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="Proxy" c:type="GProxy*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="supports_hostname">
        <callback name="supports_hostname" c:type="supports_hostname">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="proxy" transfer-ownership="none">
              <type name="Proxy" c:type="GProxy*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="ProxyResolver"
               c:type="GProxyResolver"
               glib:type-name="GProxyResolver"
               glib:get-type="g_proxy_resolver_get_type"
               glib:type-struct="ProxyResolverInterface">
      <doc xml:whitespace="preserve">Interface that can be used to resolve proxy address.</doc>
      <virtual-method name="is_supported" invoker="is_supported">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="lookup" invoker="lookup" throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_async" invoker="lookup_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_finish" invoker="lookup_finish" throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="is_supported" c:identifier="g_proxy_resolver_is_supported">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="lookup" c:identifier="g_proxy_resolver_lookup" throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_async" c:identifier="g_proxy_resolver_lookup_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_finish"
              c:identifier="g_proxy_resolver_lookup_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="ProxyResolverInterface"
            c:type="GProxyResolverInterface"
            glib:is-gtype-struct-for="ProxyResolver">
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="is_supported">
        <callback name="is_supported" c:type="is_supported">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="ProxyResolver" c:type="GProxyResolver*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup">
        <callback name="lookup" c:type="lookup" throws="1">
          <return-value transfer-ownership="full">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="ProxyResolver" c:type="GProxyResolver*"/>
            </parameter>
            <parameter name="uri" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_async">
        <callback name="lookup_async" c:type="lookup_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="ProxyResolver" c:type="GProxyResolver*"/>
            </parameter>
            <parameter name="uri" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_finish">
        <callback name="lookup_finish" c:type="lookup_finish" throws="1">
          <return-value transfer-ownership="full">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="ProxyResolver" c:type="GProxyResolver*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <callback name="ReallocFunc" c:type="GReallocFunc">
      <doc xml:whitespace="preserve">Changes the size of the memory block pointed to by @data to
The function should have the same semantics as realloc().</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">a pointer to the reallocated memory</doc>
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="data" transfer-ownership="none">
          <doc xml:whitespace="preserve">memory block to reallocate</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="size" transfer-ownership="none">
          <doc xml:whitespace="preserve">size to reallocate @data to</doc>
          <type name="gsize" c:type="gsize"/>
        </parameter>
      </parameters>
    </callback>
    <class name="Resolver"
           c:type="GResolver"
           parent="GObject.Object"
           glib:type-name="GResolver"
           glib:get-type="g_resolver_get_type"
           glib:type-struct="ResolverClass">
      <function name="get_default" c:identifier="g_resolver_get_default">
        <return-value transfer-ownership="full">
          <type name="Resolver" c:type="GResolver*"/>
        </return-value>
      </function>
      <function name="free_addresses"
                c:identifier="g_resolver_free_addresses"
                introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="addresses" transfer-ownership="full">
            <type name="GLib.List" c:type="GList*">
              <type name="InetAddress"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <function name="free_targets"
                c:identifier="g_resolver_free_targets"
                introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="targets" transfer-ownership="full">
            <type name="GLib.List" c:type="GList*">
              <type name="SrvTarget"/>
            </type>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="lookup_by_name"
                      invoker="lookup_by_name"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="InetAddress"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_by_name_async"
                      invoker="lookup_by_name_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_by_name_finish"
                      invoker="lookup_by_name_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="InetAddress"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_by_address"
                      invoker="lookup_by_address"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_by_address_async"
                      invoker="lookup_by_address_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_by_address_finish"
                      invoker="lookup_by_address_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_service" introspectable="0" throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="any" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="rrname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_service_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rrname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lookup_service_finish"
                      invoker="lookup_service_finish"
                      throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="SrvTarget"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="set_default" c:identifier="g_resolver_set_default">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="lookup_by_name"
              c:identifier="g_resolver_lookup_by_name"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="InetAddress"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_by_name_async"
              c:identifier="g_resolver_lookup_by_name_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_by_name_finish"
              c:identifier="g_resolver_lookup_by_name_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="InetAddress"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_by_address"
              c:identifier="g_resolver_lookup_by_address"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_by_address_async"
              c:identifier="g_resolver_lookup_by_address_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="InetAddress" c:type="GInetAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_by_address_finish"
              c:identifier="g_resolver_lookup_by_address_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_service"
              c:identifier="g_resolver_lookup_service"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="SrvTarget"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="service" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_service_async"
              c:identifier="g_resolver_lookup_service_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="service" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="6">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="lookup_service_finish"
              c:identifier="g_resolver_lookup_service_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="SrvTarget"/>
          </type>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="ResolverPrivate" c:type="GResolverPrivate*"/>
      </field>
      <glib:signal name="reload">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="ResolverClass"
            c:type="GResolverClass"
            glib:is-gtype-struct-for="Resolver">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="reload">
        <callback name="reload" c:type="reload">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_name">
        <callback name="lookup_by_name" c:type="lookup_by_name" throws="1">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*">
              <type name="InetAddress"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="hostname" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_name_async">
        <callback name="lookup_by_name_async" c:type="lookup_by_name_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="hostname" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_name_finish">
        <callback name="lookup_by_name_finish"
                  c:type="lookup_by_name_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*">
              <type name="InetAddress"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_address">
        <callback name="lookup_by_address"
                  c:type="lookup_by_address"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <type name="InetAddress" c:type="GInetAddress*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_address_async">
        <callback name="lookup_by_address_async"
                  c:type="lookup_by_address_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="address" transfer-ownership="none">
              <type name="InetAddress" c:type="GInetAddress*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_by_address_finish">
        <callback name="lookup_by_address_finish"
                  c:type="lookup_by_address_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_service">
        <callback name="lookup_service" c:type="lookup_service" throws="1">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*">
              <type name="any" c:type="gpointer"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="rrname" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_service_async">
        <callback name="lookup_service_async" c:type="lookup_service_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="rrname" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="lookup_service_finish">
        <callback name="lookup_service_finish"
                  c:type="lookup_service_finish"
                  throws="1">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*">
              <type name="SrvTarget"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="resolver" transfer-ownership="none">
              <type name="Resolver" c:type="GResolver*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <enumeration name="ResolverError"
                 version="2.22"
                 glib:type-name="GResolverError"
                 glib:get-type="g_resolver_error_get_type"
                 c:type="GResolverError"
                 glib:error-quark="g_resolver_error_quark">
      <doc xml:whitespace="preserve">An error code used with %G_RESOLVER_ERROR in a #GError returned
from a #GResolver routine.</doc>
      <member name="not_found"
              value="0"
              c:identifier="G_RESOLVER_ERROR_NOT_FOUND"
              glib:nick="not-found"/>
      <member name="temporary_failure"
              value="1"
              c:identifier="G_RESOLVER_ERROR_TEMPORARY_FAILURE"
              glib:nick="temporary-failure"/>
      <member name="internal"
              value="2"
              c:identifier="G_RESOLVER_ERROR_INTERNAL"
              glib:nick="internal"/>
    </enumeration>
    <record name="ResolverPrivate" c:type="GResolverPrivate">
    </record>
    <constant name="SETTINGS_BACKEND_EXTENSION_POINT_NAME"
              value="gsettings-backend">
      <type name="utf8"/>
    </constant>
    <interface name="Seekable"
               c:type="GSeekable"
               glib:type-name="GSeekable"
               glib:get-type="g_seekable_get_type"
               glib:type-struct="SeekableIface">
      <doc xml:whitespace="preserve">Seek object for streaming operations.</doc>
      <virtual-method name="tell" invoker="tell">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_seek" invoker="can_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="seek" invoker="seek" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="can_truncate" invoker="can_truncate">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="truncate_fn" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="tell" c:identifier="g_seekable_tell">
        <return-value transfer-ownership="full">
          <type name="GLib.offset" c:type="goffset"/>
        </return-value>
      </method>
      <method name="can_seek" c:identifier="g_seekable_can_seek">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="seek" c:identifier="g_seekable_seek" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="GLib.SeekType" c:type="GSeekType"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="can_truncate" c:identifier="g_seekable_can_truncate">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="truncate" c:identifier="g_seekable_truncate" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="offset" transfer-ownership="none">
            <type name="GLib.offset" c:type="goffset"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="SeekableIface"
            c:type="GSeekableIface"
            glib:is-gtype-struct-for="Seekable">
      <doc xml:whitespace="preserve">Provides an interface for implementing seekable functionality on I/O Streams.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="tell">
        <callback name="tell" c:type="tell">
          <return-value transfer-ownership="full">
            <type name="GLib.offset" c:type="goffset"/>
          </return-value>
          <parameters>
            <parameter name="seekable" transfer-ownership="none">
              <type name="Seekable" c:type="GSeekable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_seek">
        <callback name="can_seek" c:type="can_seek">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="seekable" transfer-ownership="none">
              <type name="Seekable" c:type="GSeekable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="seek">
        <callback name="seek" c:type="seek" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="seekable" transfer-ownership="none">
              <type name="Seekable" c:type="GSeekable*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="GLib.SeekType" c:type="GSeekType"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_truncate">
        <callback name="can_truncate" c:type="can_truncate">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="seekable" transfer-ownership="none">
              <type name="Seekable" c:type="GSeekable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="truncate_fn">
        <callback name="truncate_fn" c:type="truncate_fn" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="seekable" transfer-ownership="none">
              <type name="Seekable" c:type="GSeekable*"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <type name="GLib.offset" c:type="goffset"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Settings"
           c:type="GSettings"
           parent="GObject.Object"
           glib:type-name="GSettings"
           glib:get-type="g_settings_get_type"
           glib:type-struct="SettingsClass">
      <constructor name="new" c:identifier="g_settings_new">
        <return-value transfer-ownership="full">
          <type name="Settings" c:type="GSettings*"/>
        </return-value>
        <parameters>
          <parameter name="schema" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_path"
                   c:identifier="g_settings_new_with_path">
        <return-value transfer-ownership="full">
          <type name="Settings" c:type="GSettings*"/>
        </return-value>
        <parameters>
          <parameter name="schema" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_backend"
                   c:identifier="g_settings_new_with_backend">
        <return-value transfer-ownership="full">
          <type name="Settings" c:type="GSettings*"/>
        </return-value>
        <parameters>
          <parameter name="schema" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="backend" transfer-ownership="none">
            <type name="SettingsBackend" c:type="GSettingsBackend*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_backend_and_path"
                   c:identifier="g_settings_new_with_backend_and_path">
        <return-value transfer-ownership="full">
          <type name="Settings" c:type="GSettings*"/>
        </return-value>
        <parameters>
          <parameter name="schema" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="backend" transfer-ownership="none">
            <type name="SettingsBackend" c:type="GSettingsBackend*"/>
          </parameter>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="list_schemas" c:identifier="g_settings_list_schemas">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </function>
      <function name="sync" c:identifier="g_settings_sync">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
      <function name="unbind" c:identifier="g_settings_unbind">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="property" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </function>
      <method name="list_items" c:identifier="g_settings_list_items">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="set_value" c:identifier="g_settings_set_value">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_value" c:identifier="g_settings_get_value">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set" c:identifier="g_settings_set" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="get" c:identifier="g_settings_get" introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
      <method name="reset" c:identifier="g_settings_reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_int" c:identifier="g_settings_get_int">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_int" c:identifier="g_settings_set_int">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_string" c:identifier="g_settings_get_string">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_string" c:identifier="g_settings_set_string">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_boolean" c:identifier="g_settings_get_boolean">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_boolean" c:identifier="g_settings_set_boolean">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_double" c:identifier="g_settings_get_double">
        <return-value transfer-ownership="none">
          <type name="double" c:type="gdouble"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_double" c:identifier="g_settings_set_double">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="double" c:type="gdouble"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_strv" c:identifier="g_settings_get_strv">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_strv" c:identifier="g_settings_set_strv">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
        </parameters>
      </method>
      <method name="get_enum" c:identifier="g_settings_get_enum">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_enum" c:identifier="g_settings_set_enum">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_flags" c:identifier="g_settings_get_flags">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flags" c:identifier="g_settings_set_flags">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_child" c:identifier="g_settings_get_child">
        <return-value transfer-ownership="full">
          <type name="Settings" c:type="GSettings*"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_writable" c:identifier="g_settings_is_writable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="delay" c:identifier="g_settings_delay">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="apply" c:identifier="g_settings_apply">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="revert" c:identifier="g_settings_revert">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_has_unapplied"
              c:identifier="g_settings_get_has_unapplied">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="bind" c:identifier="g_settings_bind">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="property" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="SettingsBindFlags" c:type="GSettingsBindFlags"/>
          </parameter>
        </parameters>
      </method>
      <method name="bind_with_mapping"
              c:identifier="g_settings_bind_with_mapping">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="property" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="SettingsBindFlags" c:type="GSettingsBindFlags"/>
          </parameter>
          <parameter name="get_mapping" transfer-ownership="none" scope="call">
            <type name="SettingsBindGetMapping"
                  c:type="GSettingsBindGetMapping"/>
          </parameter>
          <parameter name="set_mapping"
                     transfer-ownership="none"
                     scope="notified"
                     closure="7"
                     destroy="8">
            <type name="SettingsBindSetMapping"
                  c:type="GSettingsBindSetMapping"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy" transfer-ownership="none" scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="bind_writable" c:identifier="g_settings_bind_writable">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="property" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="inverted" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mapped" c:identifier="g_settings_get_mapped">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="mapping"
                     transfer-ownership="none"
                     scope="call"
                     closure="3">
            <type name="SettingsGetMapping" c:type="GSettingsGetMapping"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <property name="backend"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="SettingsBackend" c:type="GSettingsBackend"/>
      </property>
      <property name="has-unapplied" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="path"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="schema"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SettingsPrivate" c:type="GSettingsPrivate*"/>
      </field>
      <glib:signal name="change-event">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="writable-change-event">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="writable-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="utf8" c:type="gchararray"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <class name="SettingsBackend"
           c:type="GSettingsBackend"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GSettingsBackend"
           glib:get-type="g_settings_backend_get_type"
           glib:type-struct="SettingsBackendClass">
      <doc xml:whitespace="preserve">An implementation of a settings storage repository.</doc>
      <function name="flatten_tree"
                c:identifier="g_settings_backend_flatten_tree">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="tree" transfer-ownership="none">
            <type name="GLib.Tree" c:type="GTree*"/>
          </parameter>
          <parameter name="path" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="keys" transfer-ownership="none">
            <type name="utf8" c:type="gchar***"/>
          </parameter>
          <parameter name="values" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant***"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="read">
        <return-value transfer-ownership="full">
          <type name="GLib.Variant" c:type="GVariant*"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="expected_type" transfer-ownership="none">
            <type name="GLib.VariantType" c:type="GVariantType*"/>
          </parameter>
          <parameter name="default_value" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_writable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="value" transfer-ownership="none">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </parameter>
          <parameter name="origin_tag" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="write_tree">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="tree" transfer-ownership="none">
            <type name="GLib.Tree" c:type="GTree*"/>
          </parameter>
          <parameter name="origin_tag" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="reset">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="origin_tag" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="subscribe">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="unsubscribe">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="sync">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_permission">
        <return-value transfer-ownership="full">
          <type name="Permission" c:type="GPermission*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="changed" c:identifier="g_settings_backend_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="origin_tag" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="path_changed"
              c:identifier="g_settings_backend_path_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="origin_tag" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="keys_changed"
              c:identifier="g_settings_backend_keys_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="items" transfer-ownership="none">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="origin_tag" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="path_writable_changed"
              c:identifier="g_settings_backend_path_writable_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="writable_changed"
              c:identifier="g_settings_backend_writable_changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="changed_tree"
              c:identifier="g_settings_backend_changed_tree">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="tree" transfer-ownership="none">
            <type name="GLib.Tree" c:type="GTree*"/>
          </parameter>
          <parameter name="origin_tag" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SettingsBackendPrivate" c:type="GSettingsBackendPrivate*"/>
      </field>
    </class>
    <record name="SettingsBackendClass"
            c:type="GSettingsBackendClass"
            glib:is-gtype-struct-for="SettingsBackend">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="read">
        <callback name="read" c:type="read">
          <return-value transfer-ownership="full">
            <type name="GLib.Variant" c:type="GVariant*"/>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <type name="SettingsBackend" c:type="GSettingsBackend*"/>
            </parameter>
            <parameter name="key" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="expected_type" transfer-ownership="none">
              <type name="GLib.VariantType" c:type="GVariantType*"/>
            </parameter>
            <parameter name="default_value" transfer-ownership="none">
              <type name="boolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_writable">
        <callback name="get_writable" c:type="get_writable">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <type name="SettingsBackend" c:type="GSettingsBackend*"/>
            </parameter>
            <parameter name="key" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write">
        <callback name="write" c:type="write">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <type name="SettingsBackend" c:type="GSettingsBackend*"/>
            </parameter>
            <parameter name="key" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="value" transfer-ownership="none">
              <type name="GLib.Variant" c:type="GVariant*"/>
            </parameter>
            <parameter name="origin_tag" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="write_tree">
        <callback name="write_tree" c:type="write_tree">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <type name="SettingsBackend" c:type="GSettingsBackend*"/>
            </parameter>
            <parameter name="tree" transfer-ownership="none">
              <type name="GLib.Tree" c:type="GTree*"/>
            </parameter>
            <parameter name="origin_tag" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="reset">
        <callback name="reset" c:type="reset">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <type name="SettingsBackend" c:type="GSettingsBackend*"/>
            </parameter>
            <parameter name="key" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
            <parameter name="origin_tag" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="subscribe">
        <callback name="subscribe" c:type="subscribe">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <type name="SettingsBackend" c:type="GSettingsBackend*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="unsubscribe">
        <callback name="unsubscribe" c:type="unsubscribe">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <type name="SettingsBackend" c:type="GSettingsBackend*"/>
            </parameter>
            <parameter name="name" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="sync">
        <callback name="sync" c:type="sync">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <type name="SettingsBackend" c:type="GSettingsBackend*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_permission">
        <callback name="get_permission" c:type="get_permission">
          <return-value transfer-ownership="full">
            <type name="Permission" c:type="GPermission*"/>
          </return-value>
          <parameters>
            <parameter name="backend" transfer-ownership="none">
              <type name="SettingsBackend" c:type="GSettingsBackend*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding">
        <array zero-terminated="0" c:type="gpointer" fixed-size="24">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="SettingsBackendPrivate" c:type="GSettingsBackendPrivate">
    </record>
    <bitfield name="SettingsBindFlags"
              glib:type-name="GSettingsBindFlags"
              glib:get-type="g_settings_bind_flags_get_type"
              c:type="GSettingsBindFlags">
      <doc xml:whitespace="preserve">Flags used when creating a binding. These flags determine in which
direction the binding works. The default is to synchronize in both
directions.</doc>
      <member name="default"
              value="0"
              c:identifier="G_SETTINGS_BIND_DEFAULT"
              glib:nick="default"/>
      <member name="get"
              value="1"
              c:identifier="G_SETTINGS_BIND_GET"
              glib:nick="get"/>
      <member name="set"
              value="2"
              c:identifier="G_SETTINGS_BIND_SET"
              glib:nick="set"/>
      <member name="no_sensitivity"
              value="4"
              c:identifier="G_SETTINGS_BIND_NO_SENSITIVITY"
              glib:nick="no-sensitivity"/>
      <member name="get_no_changes"
              value="8"
              c:identifier="G_SETTINGS_BIND_GET_NO_CHANGES"
              glib:nick="get-no-changes"/>
      <member name="invert_boolean"
              value="16"
              c:identifier="G_SETTINGS_BIND_INVERT_BOOLEAN"
              glib:nick="invert-boolean"/>
    </bitfield>
    <callback name="SettingsBindGetMapping" c:type="GSettingsBindGetMapping">
      <doc xml:whitespace="preserve">The type for the function that is used to convert from #GSettings to
an object property. The @value is already initialized to hold values
of the appropriate type.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if the conversion succeeded, %FALSE in case of an error</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:whitespace="preserve">return location for the property value</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="variant" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GVariant</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">user data that was specified when the binding was created</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <callback name="SettingsBindSetMapping" c:type="GSettingsBindSetMapping">
      <doc xml:whitespace="preserve">The type for the function that is used to convert an object property
value to a #GVariant for storing it in #GSettings.</doc>
      <return-value transfer-ownership="full">
        <doc xml:whitespace="preserve">a new #GVariant holding the data from @value, or %NULL in case of an error</doc>
        <type name="GLib.Variant" c:type="GVariant*"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GValue containing the property value to map</doc>
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="expected_type" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GVariantType to create</doc>
          <type name="GLib.VariantType" c:type="GVariantType*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">user data that was specified when the binding was created</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="SettingsClass"
            c:type="GSettingsClass"
            glib:is-gtype-struct-for="Settings">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="writable_changed">
        <callback name="writable_changed" c:type="writable_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="settings" transfer-ownership="none">
              <type name="Settings" c:type="GSettings*"/>
            </parameter>
            <parameter name="key" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="settings" transfer-ownership="none">
              <type name="Settings" c:type="GSettings*"/>
            </parameter>
            <parameter name="key" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="writable_change_event">
        <callback name="writable_change_event" c:type="writable_change_event">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="settings" transfer-ownership="none">
              <type name="Settings" c:type="GSettings*"/>
            </parameter>
            <parameter name="key" transfer-ownership="none">
              <type name="GLib.Quark" c:type="GQuark"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="change_event">
        <callback name="change_event" c:type="change_event">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="settings" transfer-ownership="none">
              <type name="Settings" c:type="GSettings*"/>
            </parameter>
            <parameter name="keys" transfer-ownership="none">
              <type name="GLib.Quark" c:type="GQuark*"/>
            </parameter>
            <parameter name="n_keys" transfer-ownership="none">
              <type name="int" c:type="gint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="padding">
        <array zero-terminated="0" c:type="gpointer" fixed-size="20">
          <type name="any"/>
        </array>
      </field>
    </record>
    <callback name="SettingsGetMapping" c:type="GSettingsGetMapping">
      <doc xml:whitespace="preserve">The type of the function that is used to convert from a value stored
in a #GSettings to a value that is useful to the application.
If the value is successfully mapped, the result should be stored at
is not in the right format) then %FALSE should be returned.
If @value is %NULL then it means that the mapping function is being
given a "last chance" to successfully return a valid value.  %TRUE
must be returned in this case.</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">%TRUE if the conversion succeeded, %FALSE in case of an error</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="value" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GVariant to map, or %NULL</doc>
          <type name="GLib.Variant" c:type="GVariant*"/>
        </parameter>
        <parameter name="result" transfer-ownership="none">
          <doc xml:whitespace="preserve">the result of the mapping</doc>
          <type name="any" c:type="gpointer*"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">the user data that was passed to g_settings_get_mapped()</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <record name="SettingsPrivate" c:type="GSettingsPrivate">
    </record>
    <class name="SimpleActionGroup"
           c:type="GSimpleActionGroup"
           version="2.26"
           parent="ActionGroup"
           glib:type-name="GSimpleActionGroup"
           glib:get-type="g_simple_action_group_get_type"
           glib:type-struct="SimpleActionGroupClass">
      <doc xml:whitespace="preserve">The #GSimpleActionGroup structure contains private data and should only be accessed using the provided API.</doc>
      <constructor name="new" c:identifier="g_simple_action_group_new">
        <return-value transfer-ownership="full">
          <type name="SimpleActionGroup" c:type="GSimpleActionGroup*"/>
        </return-value>
      </constructor>
      <method name="lookup" c:identifier="g_simple_action_group_lookup">
        <return-value transfer-ownership="full">
          <type name="Action" c:type="GAction*"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="insert" c:identifier="g_simple_action_group_insert">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action" transfer-ownership="none">
            <type name="Action" c:type="GAction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="g_simple_action_group_remove">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_enabled"
              c:identifier="g_simple_action_group_set_enabled">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="action_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="enabled" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="ActionGroup" c:type="GActionGroup"/>
      </field>
      <field name="priv">
        <type name="SimpleActionGroupPrivate"
              c:type="GSimpleActionGroupPrivate*"/>
      </field>
    </class>
    <record name="SimpleActionGroupClass"
            c:type="GSimpleActionGroupClass"
            glib:is-gtype-struct-for="SimpleActionGroup">
      <field name="parent_class">
        <type name="ActionGroupClass" c:type="GActionGroupClass"/>
      </field>
      <field name="padding">
        <array zero-terminated="0" c:type="gpointer" fixed-size="12">
          <type name="any"/>
        </array>
      </field>
    </record>
    <record name="SimpleActionGroupPrivate" c:type="GSimpleActionGroupPrivate">
    </record>
    <class name="SimpleAsyncResult"
           c:type="GSimpleAsyncResult"
           parent="GObject.Object"
           glib:type-name="GSimpleAsyncResult"
           glib:get-type="g_simple_async_result_get_type"
           glib:type-struct="SimpleAsyncResultClass">
      <doc xml:whitespace="preserve">A simple implementation of #GAsyncResult.</doc>
      <implements name="AsyncResult"/>
      <constructor name="new" c:identifier="g_simple_async_result_new">
        <return-value transfer-ownership="full">
          <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
        </return-value>
        <parameters>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="2">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="source_tag" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_error"
                   c:identifier="g_simple_async_result_new_error"
                   introspectable="0">
        <return-value transfer-ownership="full">
          <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
        </return-value>
        <parameters>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="2">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="domain" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="code" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </constructor>
      <function name="is_valid" c:identifier="g_simple_async_result_is_valid">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="source" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="source_tag" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <method name="set_op_res_gpointer"
              c:identifier="g_simple_async_result_set_op_res_gpointer">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op_res" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="destroy_op_res"
                     transfer-ownership="none"
                     scope="call">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_op_res_gpointer"
              c:identifier="g_simple_async_result_get_op_res_gpointer">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="set_op_res_gssize"
              c:identifier="g_simple_async_result_set_op_res_gssize">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op_res" transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_op_res_gssize"
              c:identifier="g_simple_async_result_get_op_res_gssize">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
      </method>
      <method name="set_op_res_gboolean"
              c:identifier="g_simple_async_result_set_op_res_gboolean">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="op_res" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_op_res_gboolean"
              c:identifier="g_simple_async_result_get_op_res_gboolean">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_source_tag"
              c:identifier="g_simple_async_result_get_source_tag">
        <return-value transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </return-value>
      </method>
      <method name="set_handle_cancellation"
              c:identifier="g_simple_async_result_set_handle_cancellation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="handle_cancellation" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="complete" c:identifier="g_simple_async_result_complete">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="complete_in_idle"
              c:identifier="g_simple_async_result_complete_in_idle">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="run_in_thread"
              c:identifier="g_simple_async_result_run_in_thread">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="func" transfer-ownership="none" scope="call">
            <type name="SimpleAsyncThreadFunc"
                  c:type="GSimpleAsyncThreadFunc"/>
          </parameter>
          <parameter name="io_priority" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_error"
              c:identifier="g_simple_async_result_set_error"
              introspectable="0">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="domain" transfer-ownership="none">
            <type name="GLib.Quark" c:type="GQuark"/>
          </parameter>
          <parameter name="code" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="format" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter transfer-ownership="none">
            <varargs>
            </varargs>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="SimpleAsyncResultClass"
            c:type="GSimpleAsyncResultClass"
            glib:is-gtype-struct-for="SimpleAsyncResult">
    </record>
    <callback name="SimpleAsyncThreadFunc" c:type="GSimpleAsyncThreadFunc">
      <doc xml:whitespace="preserve">Simple thread function that runs an asynchronous operation and
checks for cancellation.</doc>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GSimpleAsyncResult.</doc>
          <type name="SimpleAsyncResult" c:type="GSimpleAsyncResult*"/>
        </parameter>
        <parameter name="object" transfer-ownership="none">
          <doc xml:whitespace="preserve">a #GObject.</doc>
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <doc xml:whitespace="preserve">optional #GCancellable object, %NULL to ignore.</doc>
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </callback>
    <class name="SimplePermission"
           c:type="GSimplePermission"
           parent="Permission"
           glib:type-name="GSimplePermission"
           glib:get-type="g_simple_permission_get_type">
      <constructor name="new" c:identifier="g_simple_permission_new">
        <return-value transfer-ownership="full">
          <type name="SimplePermission" c:type="GPermission*"/>
        </return-value>
        <parameters>
          <parameter name="allowed" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
    </class>
    <class name="Socket"
           c:type="GSocket"
           version="2.22"
           parent="GObject.Object"
           glib:type-name="GSocket"
           glib:get-type="g_socket_get_type"
           glib:type-struct="SocketClass">
      <doc xml:whitespace="preserve">A lowlevel network socket object.</doc>
      <implements name="Initable"/>
      <constructor name="new" c:identifier="g_socket_new" throws="1">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="SocketType" c:type="GSocketType"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="SocketProtocol" c:type="GSocketProtocol"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_fd"
                   c:identifier="g_socket_new_from_fd"
                   throws="1">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_fd" c:identifier="g_socket_get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <method name="get_family" c:identifier="g_socket_get_family">
        <return-value transfer-ownership="full">
          <type name="SocketFamily" c:type="GSocketFamily"/>
        </return-value>
      </method>
      <method name="get_socket_type" c:identifier="g_socket_get_socket_type">
        <return-value transfer-ownership="full">
          <type name="SocketType" c:type="GSocketType"/>
        </return-value>
      </method>
      <method name="get_protocol" c:identifier="g_socket_get_protocol">
        <return-value transfer-ownership="full">
          <type name="SocketProtocol" c:type="GSocketProtocol"/>
        </return-value>
      </method>
      <method name="get_local_address"
              c:identifier="g_socket_get_local_address"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
      </method>
      <method name="get_remote_address"
              c:identifier="g_socket_get_remote_address"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
      </method>
      <method name="set_blocking" c:identifier="g_socket_set_blocking">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="blocking" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_blocking" c:identifier="g_socket_get_blocking">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_keepalive" c:identifier="g_socket_set_keepalive">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="keepalive" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_keepalive" c:identifier="g_socket_get_keepalive">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_listen_backlog"
              c:identifier="g_socket_get_listen_backlog">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="set_listen_backlog"
              c:identifier="g_socket_set_listen_backlog">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="backlog" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_timeout" c:identifier="g_socket_get_timeout">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="set_timeout" c:identifier="g_socket_set_timeout">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="timeout" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_connected" c:identifier="g_socket_is_connected">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="bind" c:identifier="g_socket_bind" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
          <parameter name="allow_reuse" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect" c:identifier="g_socket_connect" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="check_connect_result"
              c:identifier="g_socket_check_connect_result"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="condition_check" c:identifier="g_socket_condition_check">
        <return-value transfer-ownership="full">
          <type name="GObject.IOCondition" c:type="GIOCondition"/>
        </return-value>
        <parameters>
          <parameter name="condition" transfer-ownership="none">
            <type name="GObject.IOCondition" c:type="GIOCondition"/>
          </parameter>
        </parameters>
      </method>
      <method name="condition_wait"
              c:identifier="g_socket_condition_wait"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="condition" transfer-ownership="none">
            <type name="GObject.IOCondition" c:type="GIOCondition"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept" c:identifier="g_socket_accept" throws="1">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="listen" c:identifier="g_socket_listen" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="receive" c:identifier="g_socket_receive" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="receive_from"
              c:identifier="g_socket_receive_from"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress**"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send" c:identifier="g_socket_send" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_to" c:identifier="g_socket_send_to" throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
          <parameter name="buffer" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="receive_message"
              c:identifier="g_socket_receive_message"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress**"/>
          </parameter>
          <parameter name="vectors" transfer-ownership="none">
            <type name="InputVector" c:type="GInputVector*"/>
          </parameter>
          <parameter name="num_vectors" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="messages" transfer-ownership="none">
            <type name="SocketControlMessage"
                  c:type="GSocketControlMessage***"/>
          </parameter>
          <parameter name="num_messages"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="flags"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_message"
              c:identifier="g_socket_send_message"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
          <parameter name="vectors" transfer-ownership="none">
            <type name="OutputVector" c:type="GOutputVector*"/>
          </parameter>
          <parameter name="num_vectors" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="messages" transfer-ownership="none">
            <type name="SocketControlMessage"
                  c:type="GSocketControlMessage**"/>
          </parameter>
          <parameter name="num_messages" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_socket_close" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="shutdown" c:identifier="g_socket_shutdown" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="shutdown_read" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="shutdown_write" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_closed" c:identifier="g_socket_is_closed">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="create_source" c:identifier="g_socket_create_source">
        <return-value transfer-ownership="full">
          <type name="GLib.Source" c:type="GSource*"/>
        </return-value>
        <parameters>
          <parameter name="condition" transfer-ownership="none">
            <type name="GObject.IOCondition" c:type="GIOCondition"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="speaks_ipv4" c:identifier="g_socket_speaks_ipv4">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_credentials"
              c:identifier="g_socket_get_credentials"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Credentials" c:type="GCredentials*"/>
        </return-value>
      </method>
      <method name="receive_with_blocking"
              c:identifier="g_socket_receive_with_blocking"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="blocking" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_with_blocking"
              c:identifier="g_socket_send_with_blocking"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
        <parameters>
          <parameter name="buffer" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="blocking" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connection_factory_create_connection"
              c:identifier="g_socket_connection_factory_create_connection">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
      </method>
      <property name="blocking" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="family"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="SocketFamily" c:type="GSocketFamily"/>
      </property>
      <property name="fd"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="keepalive" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="listen-backlog" writable="1" transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <property name="local-address" transfer-ownership="none">
        <type name="SocketAddress" c:type="GSocketAddress"/>
      </property>
      <property name="protocol"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="SocketProtocol" c:type="GSocketProtocol"/>
      </property>
      <property name="remote-address" transfer-ownership="none">
        <type name="SocketAddress" c:type="GSocketAddress"/>
      </property>
      <property name="timeout" writable="1" transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="SocketType" c:type="GSocketType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SocketPrivate" c:type="GSocketPrivate*"/>
      </field>
    </class>
    <class name="SocketAddress"
           c:type="GSocketAddress"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GSocketAddress"
           glib:get-type="g_socket_address_get_type"
           glib:type-struct="SocketAddressClass">
      <implements name="SocketConnectable"/>
      <constructor name="new_from_native"
                   c:identifier="g_socket_address_new_from_native">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="native" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="get_family" invoker="get_family">
        <return-value transfer-ownership="full">
          <type name="SocketFamily" c:type="GSocketFamily"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_native_size" invoker="get_native_size">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
      </virtual-method>
      <virtual-method name="to_native" invoker="to_native" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dest" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="destlen" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_family" c:identifier="g_socket_address_get_family">
        <return-value transfer-ownership="full">
          <type name="SocketFamily" c:type="GSocketFamily"/>
        </return-value>
      </method>
      <method name="to_native"
              c:identifier="g_socket_address_to_native"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="dest" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
          <parameter name="destlen" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_native_size"
              c:identifier="g_socket_address_get_native_size">
        <return-value transfer-ownership="none">
          <type name="gssize" c:type="gssize"/>
        </return-value>
      </method>
      <property name="family" transfer-ownership="none">
        <type name="SocketFamily" c:type="GSocketFamily"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SocketAddressClass"
            c:type="GSocketAddressClass"
            glib:is-gtype-struct-for="SocketAddress">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_family">
        <callback name="get_family" c:type="get_family">
          <return-value transfer-ownership="full">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </return-value>
          <parameters>
            <parameter name="address" transfer-ownership="none">
              <type name="SocketAddress" c:type="GSocketAddress*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_native_size">
        <callback name="get_native_size" c:type="get_native_size">
          <return-value transfer-ownership="none">
            <type name="gssize" c:type="gssize"/>
          </return-value>
          <parameters>
            <parameter name="address" transfer-ownership="none">
              <type name="SocketAddress" c:type="GSocketAddress*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="to_native">
        <callback name="to_native" c:type="to_native" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="address" transfer-ownership="none">
              <type name="SocketAddress" c:type="GSocketAddress*"/>
            </parameter>
            <parameter name="dest" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
            <parameter name="destlen" transfer-ownership="none">
              <type name="gsize" c:type="gsize"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="SocketAddressEnumerator"
           c:type="GSocketAddressEnumerator"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GSocketAddressEnumerator"
           glib:get-type="g_socket_address_enumerator_get_type"
           glib:type-struct="SocketAddressEnumeratorClass">
      <doc xml:whitespace="preserve">Enumerator type for objects that contain or generate
#GSocketAddress&lt;!-- --&gt;es.</doc>
      <virtual-method name="next" invoker="next" throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="next_async" invoker="next_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="3">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="next_finish" invoker="next_finish" throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="next"
              c:identifier="g_socket_address_enumerator_next"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_async"
              c:identifier="g_socket_address_enumerator_next_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="next_finish"
              c:identifier="g_socket_address_enumerator_next_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="SocketAddressEnumeratorClass"
            c:type="GSocketAddressEnumeratorClass"
            glib:is-gtype-struct-for="SocketAddressEnumerator">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="next">
        <callback name="next" c:type="next" throws="1">
          <return-value transfer-ownership="full">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="SocketAddressEnumerator"
                    c:type="GSocketAddressEnumerator*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="next_async">
        <callback name="next_async" c:type="next_async">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="SocketAddressEnumerator"
                    c:type="GSocketAddressEnumerator*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="3">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="next_finish">
        <callback name="next_finish" c:type="next_finish" throws="1">
          <return-value transfer-ownership="full">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </return-value>
          <parameters>
            <parameter name="enumerator" transfer-ownership="none">
              <type name="SocketAddressEnumerator"
                    c:type="GSocketAddressEnumerator*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="SocketClass"
            c:type="GSocketClass"
            glib:is-gtype-struct-for="Socket">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved8">
        <callback name="g_reserved8" c:type="_g_reserved8">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved9">
        <callback name="g_reserved9" c:type="_g_reserved9">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved10">
        <callback name="g_reserved10" c:type="_g_reserved10">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="SocketClient"
           c:type="GSocketClient"
           version="2.22"
           parent="GObject.Object"
           glib:type-name="GSocketClient"
           glib:get-type="g_socket_client_get_type"
           glib:type-struct="SocketClientClass">
      <doc xml:whitespace="preserve">A helper class for network servers to listen for and accept connections.</doc>
      <constructor name="new" c:identifier="g_socket_client_new">
        <return-value transfer-ownership="full">
          <type name="SocketClient" c:type="GSocketClient*"/>
        </return-value>
      </constructor>
      <method name="get_family" c:identifier="g_socket_client_get_family">
        <return-value transfer-ownership="full">
          <type name="SocketFamily" c:type="GSocketFamily"/>
        </return-value>
      </method>
      <method name="set_family" c:identifier="g_socket_client_set_family">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_socket_type"
              c:identifier="g_socket_client_get_socket_type">
        <return-value transfer-ownership="full">
          <type name="SocketType" c:type="GSocketType"/>
        </return-value>
      </method>
      <method name="set_socket_type"
              c:identifier="g_socket_client_set_socket_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="SocketType" c:type="GSocketType"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_protocol" c:identifier="g_socket_client_get_protocol">
        <return-value transfer-ownership="full">
          <type name="SocketProtocol" c:type="GSocketProtocol"/>
        </return-value>
      </method>
      <method name="set_protocol" c:identifier="g_socket_client_set_protocol">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="protocol" transfer-ownership="none">
            <type name="SocketProtocol" c:type="GSocketProtocol"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_local_address"
              c:identifier="g_socket_client_get_local_address">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
      </method>
      <method name="set_local_address"
              c:identifier="g_socket_client_set_local_address">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_timeout" c:identifier="g_socket_client_get_timeout">
        <return-value transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </return-value>
      </method>
      <method name="set_timeout" c:identifier="g_socket_client_set_timeout">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="timeout" transfer-ownership="none">
            <type name="uint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_enable_proxy"
              c:identifier="g_socket_client_get_enable_proxy">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="set_enable_proxy"
              c:identifier="g_socket_client_set_enable_proxy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="enable" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect" c:identifier="g_socket_client_connect" throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="connectable" transfer-ownership="none">
            <type name="SocketConnectable" c:type="GSocketConnectable*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_host"
              c:identifier="g_socket_client_connect_to_host"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="host_and_port" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="default_port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_service"
              c:identifier="g_socket_client_connect_to_service"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="service" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_uri"
              c:identifier="g_socket_client_connect_to_uri"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="default_port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_async"
              c:identifier="g_socket_client_connect_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="connectable" transfer-ownership="none">
            <type name="SocketConnectable" c:type="GSocketConnectable*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_finish"
              c:identifier="g_socket_client_connect_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_host_async"
              c:identifier="g_socket_client_connect_to_host_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="host_and_port" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="default_port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_host_finish"
              c:identifier="g_socket_client_connect_to_host_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_service_async"
              c:identifier="g_socket_client_connect_to_service_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="domain" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="service" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_service_finish"
              c:identifier="g_socket_client_connect_to_service_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_uri_async"
              c:identifier="g_socket_client_connect_to_uri_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="default_port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_to_uri_finish"
              c:identifier="g_socket_client_connect_to_uri_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_application_proxy"
              c:identifier="g_socket_client_add_application_proxy">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="protocol" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="enable-proxy"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="family"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="SocketFamily" c:type="GSocketFamily"/>
      </property>
      <property name="local-address"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="SocketAddress" c:type="GSocketAddress"/>
      </property>
      <property name="protocol"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="SocketProtocol" c:type="GSocketProtocol"/>
      </property>
      <property name="timeout"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </property>
      <property name="type"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="SocketType" c:type="GSocketType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SocketClientPrivate" c:type="GSocketClientPrivate*"/>
      </field>
    </class>
    <record name="SocketClientClass"
            c:type="GSocketClientClass"
            glib:is-gtype-struct-for="SocketClient">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SocketClientPrivate" c:type="GSocketClientPrivate">
    </record>
    <interface name="SocketConnectable"
               c:type="GSocketConnectable"
               glib:type-name="GSocketConnectable"
               glib:get-type="g_socket_connectable_get_type"
               glib:type-struct="SocketConnectableIface">
      <doc xml:whitespace="preserve">Interface for objects that contain or generate #GSocketAddress&lt;!-- --&gt;es.</doc>
      <virtual-method name="enumerate" invoker="enumerate">
        <return-value transfer-ownership="full">
          <type name="SocketAddressEnumerator"
                c:type="GSocketAddressEnumerator*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="proxy_enumerate" invoker="proxy_enumerate">
        <return-value transfer-ownership="full">
          <type name="SocketAddressEnumerator"
                c:type="GSocketAddressEnumerator*"/>
        </return-value>
      </virtual-method>
      <method name="enumerate" c:identifier="g_socket_connectable_enumerate">
        <return-value transfer-ownership="full">
          <type name="SocketAddressEnumerator"
                c:type="GSocketAddressEnumerator*"/>
        </return-value>
      </method>
      <method name="proxy_enumerate"
              c:identifier="g_socket_connectable_proxy_enumerate">
        <return-value transfer-ownership="full">
          <type name="SocketAddressEnumerator"
                c:type="GSocketAddressEnumerator*"/>
        </return-value>
      </method>
    </interface>
    <record name="SocketConnectableIface"
            c:type="GSocketConnectableIface"
            glib:is-gtype-struct-for="SocketConnectable">
      <doc xml:whitespace="preserve">Provides an interface for returning a #GSocketAddressEnumerator
and #GProxyAddressEnumerator</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="enumerate">
        <callback name="enumerate" c:type="enumerate">
          <return-value transfer-ownership="full">
            <type name="SocketAddressEnumerator"
                  c:type="GSocketAddressEnumerator*"/>
          </return-value>
          <parameters>
            <parameter name="connectable" transfer-ownership="none">
              <type name="SocketConnectable" c:type="GSocketConnectable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="proxy_enumerate">
        <callback name="proxy_enumerate" c:type="proxy_enumerate">
          <return-value transfer-ownership="full">
            <type name="SocketAddressEnumerator"
                  c:type="GSocketAddressEnumerator*"/>
          </return-value>
          <parameters>
            <parameter name="connectable" transfer-ownership="none">
              <type name="SocketConnectable" c:type="GSocketConnectable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="SocketConnection"
           c:type="GSocketConnection"
           version="2.22"
           parent="IOStream"
           glib:type-name="GSocketConnection"
           glib:get-type="g_socket_connection_get_type"
           glib:type-struct="SocketConnectionClass">
      <doc xml:whitespace="preserve">A socket connection GIOStream object for connection-oriented sockets.</doc>
      <function name="factory_register_type"
                c:identifier="g_socket_connection_factory_register_type">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="g_type" transfer-ownership="none">
            <type name="GType" c:type="GType"/>
          </parameter>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="SocketType" c:type="GSocketType"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <function name="factory_lookup_type"
                c:identifier="g_socket_connection_factory_lookup_type">
        <return-value transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </return-value>
        <parameters>
          <parameter name="family" transfer-ownership="none">
            <type name="SocketFamily" c:type="GSocketFamily"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="SocketType" c:type="GSocketType"/>
          </parameter>
          <parameter name="protocol_id" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </function>
      <method name="get_socket" c:identifier="g_socket_connection_get_socket">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
      </method>
      <method name="get_local_address"
              c:identifier="g_socket_connection_get_local_address"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
      </method>
      <method name="get_remote_address"
              c:identifier="g_socket_connection_get_remote_address"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketAddress" c:type="GSocketAddress*"/>
        </return-value>
      </method>
      <property name="socket"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Socket" c:type="GSocket"/>
      </property>
      <field name="parent_instance">
        <type name="IOStream" c:type="GIOStream"/>
      </field>
      <field name="priv">
        <type name="SocketConnectionPrivate"
              c:type="GSocketConnectionPrivate*"/>
      </field>
    </class>
    <record name="SocketConnectionClass"
            c:type="GSocketConnectionClass"
            glib:is-gtype-struct-for="SocketConnection">
      <field name="parent_class">
        <type name="IOStreamClass" c:type="GIOStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SocketConnectionPrivate" c:type="GSocketConnectionPrivate">
    </record>
    <class name="SocketControlMessage"
           c:type="GSocketControlMessage"
           parent="GObject.Object"
           abstract="1"
           glib:type-name="GSocketControlMessage"
           glib:get-type="g_socket_control_message_get_type"
           glib:type-struct="SocketControlMessageClass">
      <doc xml:whitespace="preserve">Base class for socket-type specific control messages that can be sent and
received over #GSocket.</doc>
      <function name="deserialize"
                c:identifier="g_socket_control_message_deserialize">
        <return-value transfer-ownership="full">
          <type name="SocketControlMessage" c:type="GSocketControlMessage*"/>
        </return-value>
        <parameters>
          <parameter name="level" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
          <parameter name="size" transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="get_size" invoker="get_size">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_level" invoker="get_level">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_type">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </virtual-method>
      <virtual-method name="serialize" invoker="serialize">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_size" c:identifier="g_socket_control_message_get_size">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="get_level"
              c:identifier="g_socket_control_message_get_level">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <method name="get_msg_type"
              c:identifier="g_socket_control_message_get_msg_type">
        <return-value transfer-ownership="none">
          <type name="int" c:type="int"/>
        </return-value>
      </method>
      <method name="serialize"
              c:identifier="g_socket_control_message_serialize">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SocketControlMessagePrivate"
              c:type="GSocketControlMessagePrivate*"/>
      </field>
    </class>
    <record name="SocketControlMessageClass"
            c:type="GSocketControlMessageClass"
            glib:is-gtype-struct-for="SocketControlMessage">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_size">
        <callback name="get_size" c:type="get_size">
          <return-value transfer-ownership="none">
            <type name="gsize" c:type="gsize"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <type name="SocketControlMessage"
                    c:type="GSocketControlMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_level">
        <callback name="get_level" c:type="get_level">
          <return-value transfer-ownership="none">
            <type name="int" c:type="int"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <type name="SocketControlMessage"
                    c:type="GSocketControlMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_type">
        <callback name="get_type" c:type="get_type">
          <return-value transfer-ownership="none">
            <type name="int" c:type="int"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <type name="SocketControlMessage"
                    c:type="GSocketControlMessage*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="serialize">
        <callback name="serialize" c:type="serialize">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="message" transfer-ownership="none">
              <type name="SocketControlMessage"
                    c:type="GSocketControlMessage*"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="deserialize">
        <callback name="deserialize" c:type="deserialize">
          <return-value transfer-ownership="full">
            <type name="SocketControlMessage" c:type="GSocketControlMessage*"/>
          </return-value>
          <parameters>
            <parameter name="level" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="int" c:type="int"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type name="gsize" c:type="gsize"/>
            </parameter>
            <parameter name="data" transfer-ownership="none">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SocketControlMessagePrivate"
            c:type="GSocketControlMessagePrivate">
    </record>
    <enumeration name="SocketFamily"
                 version="2.22"
                 glib:type-name="GSocketFamily"
                 glib:get-type="g_socket_family_get_type"
                 c:type="GSocketFamily">
      <doc xml:whitespace="preserve">The protocol family of a #GSocketAddress. (These values are
identical to the system defines %AF_INET, %AF_INET6 and %AF_UNIX,
if available.)</doc>
      <member name="invalid"
              value="0"
              c:identifier="G_SOCKET_FAMILY_INVALID"
              glib:nick="invalid"/>
      <member name="unix"
              value="1"
              c:identifier="G_SOCKET_FAMILY_UNIX"
              glib:nick="unix"/>
      <member name="ipv4"
              value="2"
              c:identifier="G_SOCKET_FAMILY_IPV4"
              glib:nick="ipv4"/>
      <member name="ipv6"
              value="10"
              c:identifier="G_SOCKET_FAMILY_IPV6"
              glib:nick="ipv6"/>
    </enumeration>
    <class name="SocketListener"
           c:type="GSocketListener"
           parent="GObject.Object"
           glib:type-name="GSocketListener"
           glib:get-type="g_socket_listener_get_type"
           glib:type-struct="SocketListenerClass">
      <constructor name="new" c:identifier="g_socket_listener_new">
        <return-value transfer-ownership="full">
          <type name="SocketListener" c:type="GSocketListener*"/>
        </return-value>
      </constructor>
      <virtual-method name="changed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </virtual-method>
      <method name="set_backlog" c:identifier="g_socket_listener_set_backlog">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="listen_backlog" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_socket"
              c:identifier="g_socket_listener_add_socket"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="socket" transfer-ownership="none">
            <type name="Socket" c:type="GSocket*"/>
          </parameter>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_address"
              c:identifier="g_socket_listener_add_address"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="SocketType" c:type="GSocketType"/>
          </parameter>
          <parameter name="protocol" transfer-ownership="none">
            <type name="SocketProtocol" c:type="GSocketProtocol"/>
          </parameter>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
          <parameter name="effective_address" transfer-ownership="none">
            <type name="SocketAddress" c:type="GSocketAddress**"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_inet_port"
              c:identifier="g_socket_listener_add_inet_port"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="add_any_inet_port"
              c:identifier="g_socket_listener_add_any_inet_port"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
        <parameters>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject*"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept_socket"
              c:identifier="g_socket_listener_accept_socket"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
        <parameters>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept_socket_async"
              c:identifier="g_socket_listener_accept_socket_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept_socket_finish"
              c:identifier="g_socket_listener_accept_socket_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Socket" c:type="GSocket*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject**"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept" c:identifier="g_socket_listener_accept" throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject**"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept_async"
              c:identifier="g_socket_listener_accept_async">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="3">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="accept_finish"
              c:identifier="g_socket_listener_accept_finish"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="SocketConnection" c:type="GSocketConnection*"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
          <parameter name="source_object" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject**"/>
          </parameter>
        </parameters>
      </method>
      <method name="close" c:identifier="g_socket_listener_close">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <property name="listen-backlog"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SocketListenerPrivate" c:type="GSocketListenerPrivate*"/>
      </field>
    </class>
    <record name="SocketListenerClass"
            c:type="GSocketListenerClass"
            glib:is-gtype-struct-for="SocketListener">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="listener" transfer-ownership="none">
              <type name="SocketListener" c:type="GSocketListener*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SocketListenerPrivate" c:type="GSocketListenerPrivate">
    </record>
    <enumeration name="SocketMsgFlags"
                 version="2.22"
                 glib:type-name="GSocketMsgFlags"
                 glib:get-type="g_socket_msg_flags_get_type"
                 c:type="GSocketMsgFlags">
      <doc xml:whitespace="preserve">Flags used in g_socket_receive_message() and g_socket_send_message().
The flags listed in the enum are some commonly available flags, but the
values used for them are the same as on the platform, and any other flags
are passed in/out as is. So to use a platform specific flag, just include
the right system header and pass in the flag.</doc>
      <member name="none"
              value="0"
              c:identifier="G_SOCKET_MSG_NONE"
              glib:nick="none"/>
      <member name="oob"
              value="1"
              c:identifier="G_SOCKET_MSG_OOB"
              glib:nick="oob"/>
      <member name="peek"
              value="2"
              c:identifier="G_SOCKET_MSG_PEEK"
              glib:nick="peek"/>
      <member name="dontroute"
              value="4"
              c:identifier="G_SOCKET_MSG_DONTROUTE"
              glib:nick="dontroute"/>
    </enumeration>
    <record name="SocketPrivate" c:type="GSocketPrivate">
    </record>
    <enumeration name="SocketProtocol"
                 version="2.22"
                 glib:type-name="GSocketProtocol"
                 glib:get-type="g_socket_protocol_get_type"
                 c:type="GSocketProtocol">
      <doc xml:whitespace="preserve">A protocol identifier is specified when creating a #GSocket, which is a
family/type specific identifier, where 0 means the default protocol for
the particular family/type.
This enum contains a set of commonly available and used protocols. You
can also pass any other identifiers handled by the platform in order to
use protocols not listed here.</doc>
      <member name="unknown"
              value="-1"
              c:identifier="G_SOCKET_PROTOCOL_UNKNOWN"
              glib:nick="unknown"/>
      <member name="default"
              value="0"
              c:identifier="G_SOCKET_PROTOCOL_DEFAULT"
              glib:nick="default"/>
      <member name="tcp"
              value="6"
              c:identifier="G_SOCKET_PROTOCOL_TCP"
              glib:nick="tcp"/>
      <member name="udp"
              value="17"
              c:identifier="G_SOCKET_PROTOCOL_UDP"
              glib:nick="udp"/>
      <member name="sctp"
              value="132"
              c:identifier="G_SOCKET_PROTOCOL_SCTP"
              glib:nick="sctp"/>
    </enumeration>
    <class name="SocketService"
           c:type="GSocketService"
           version="2.22"
           parent="SocketListener"
           glib:type-name="GSocketService"
           glib:get-type="g_socket_service_get_type"
           glib:type-struct="SocketServiceClass">
      <doc xml:whitespace="preserve">A helper class for handling accepting incomming connections in the
glib mainloop.</doc>
      <constructor name="new" c:identifier="g_socket_service_new">
        <return-value transfer-ownership="full">
          <type name="SocketService" c:type="GSocketService*"/>
        </return-value>
      </constructor>
      <method name="start" c:identifier="g_socket_service_start">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="stop" c:identifier="g_socket_service_stop">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="is_active" c:identifier="g_socket_service_is_active">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <field name="parent_instance">
        <type name="SocketListener" c:type="GSocketListener"/>
      </field>
      <field name="priv">
        <type name="SocketServicePrivate" c:type="GSocketServicePrivate*"/>
      </field>
      <glib:signal name="incoming">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="SocketConnection" c:type="GSocketConnection"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SocketServiceClass"
            c:type="GSocketServiceClass"
            glib:is-gtype-struct-for="SocketService">
      <field name="parent_class">
        <type name="SocketListenerClass" c:type="GSocketListenerClass"/>
      </field>
      <field name="incoming">
        <callback name="incoming" c:type="incoming">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="service" transfer-ownership="none">
              <type name="SocketService" c:type="GSocketService*"/>
            </parameter>
            <parameter name="connection" transfer-ownership="none">
              <type name="SocketConnection" c:type="GSocketConnection*"/>
            </parameter>
            <parameter name="source_object" transfer-ownership="none">
              <type name="GObject.Object" c:type="GObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="SocketServicePrivate" c:type="GSocketServicePrivate">
    </record>
    <callback name="SocketSourceFunc"
              c:type="GSocketSourceFunc"
              version="2.22">
      <doc xml:whitespace="preserve">This is the function type of the callback used for the #GSource
returned by g_socket_create_source().</doc>
      <return-value transfer-ownership="none">
        <doc xml:whitespace="preserve">it should return %FALSE if the source should be removed.</doc>
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="socket" transfer-ownership="none">
          <doc xml:whitespace="preserve">the #GSocket</doc>
          <type name="Socket" c:type="GSocket*"/>
        </parameter>
        <parameter name="condition" transfer-ownership="none">
          <doc xml:whitespace="preserve">the current condition at the source fired.</doc>
          <type name="GObject.IOCondition" c:type="GIOCondition"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none" closure="2">
          <doc xml:whitespace="preserve">data passed in by the user.</doc>
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </callback>
    <enumeration name="SocketType"
                 version="2.22"
                 glib:type-name="GSocketType"
                 glib:get-type="g_socket_type_get_type"
                 c:type="GSocketType">
      <doc xml:whitespace="preserve">Flags used when creating a #GSocket. Some protocols may not implement
all the socket types.</doc>
      <member name="invalid"
              value="0"
              c:identifier="G_SOCKET_TYPE_INVALID"
              glib:nick="invalid"/>
      <member name="stream"
              value="1"
              c:identifier="G_SOCKET_TYPE_STREAM"
              glib:nick="stream"/>
      <member name="datagram"
              value="2"
              c:identifier="G_SOCKET_TYPE_DATAGRAM"
              glib:nick="datagram"/>
      <member name="seqpacket"
              value="3"
              c:identifier="G_SOCKET_TYPE_SEQPACKET"
              glib:nick="seqpacket"/>
    </enumeration>
    <record name="SrvTarget"
            c:type="GSrvTarget"
            glib:type-name="GSrvTarget"
            glib:get-type="g_srv_target_get_type">
      <constructor name="new" c:identifier="g_srv_target_new">
        <return-value transfer-ownership="full">
          <type name="SrvTarget" c:type="GSrvTarget*"/>
        </return-value>
        <parameters>
          <parameter name="hostname" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="port" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="priority" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
          <parameter name="weight" transfer-ownership="none">
            <type name="uint16" c:type="guint16"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="copy" c:identifier="g_srv_target_copy">
        <return-value transfer-ownership="full">
          <type name="SrvTarget" c:type="GSrvTarget*"/>
        </return-value>
      </method>
      <method name="free" c:identifier="g_srv_target_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="get_hostname" c:identifier="g_srv_target_get_hostname">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
      </method>
      <method name="get_port" c:identifier="g_srv_target_get_port">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
      </method>
      <method name="get_priority" c:identifier="g_srv_target_get_priority">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
      </method>
      <method name="get_weight" c:identifier="g_srv_target_get_weight">
        <return-value transfer-ownership="none">
          <type name="uint16" c:type="guint16"/>
        </return-value>
      </method>
    </record>
    <class name="TcpConnection"
           c:type="GTcpConnection"
           version="2.22"
           parent="SocketConnection"
           glib:type-name="GTcpConnection"
           glib:get-type="g_tcp_connection_get_type"
           glib:type-struct="TcpConnectionClass">
      <doc xml:whitespace="preserve">A #GSocketConnection for UNIX domain socket connections.</doc>
      <method name="set_graceful_disconnect"
              c:identifier="g_tcp_connection_set_graceful_disconnect">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="graceful_disconnect" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_graceful_disconnect"
              c:identifier="g_tcp_connection_get_graceful_disconnect">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="graceful-disconnect"
                writable="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="SocketConnection" c:type="GSocketConnection"/>
      </field>
      <field name="priv">
        <type name="TcpConnectionPrivate" c:type="GTcpConnectionPrivate*"/>
      </field>
    </class>
    <record name="TcpConnectionClass"
            c:type="GTcpConnectionClass"
            glib:is-gtype-struct-for="TcpConnection">
      <field name="parent_class">
        <type name="SocketConnectionClass" c:type="GSocketConnectionClass"/>
      </field>
    </record>
    <record name="TcpConnectionPrivate" c:type="GTcpConnectionPrivate">
    </record>
    <class name="ThemedIcon"
           c:type="GThemedIcon"
           parent="GObject.Object"
           glib:type-name="GThemedIcon"
           glib:get-type="g_themed_icon_get_type"
           glib:type-struct="ThemedIconClass">
      <doc xml:whitespace="preserve">An implementation of #GIcon for themed icons.</doc>
      <implements name="Icon"/>
      <constructor name="new" c:identifier="g_themed_icon_new">
        <return-value transfer-ownership="full">
          <type name="ThemedIcon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="iconname" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_default_fallbacks"
                   c:identifier="g_themed_icon_new_with_default_fallbacks">
        <return-value transfer-ownership="full">
          <type name="ThemedIcon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="iconname" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_names"
                   c:identifier="g_themed_icon_new_from_names">
        <return-value transfer-ownership="full">
          <type name="ThemedIcon" c:type="GIcon*"/>
        </return-value>
        <parameters>
          <parameter name="iconnames" transfer-ownership="none">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </parameter>
          <parameter name="len" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="prepend_name" c:identifier="g_themed_icon_prepend_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="iconname" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_name" c:identifier="g_themed_icon_append_name">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="iconname" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_names" c:identifier="g_themed_icon_get_names">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <property name="name"
                readable="0"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="names"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GObject.Strv" c:type="GStrv"/>
      </property>
      <property name="use-default-fallbacks"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
    </class>
    <record name="ThemedIconClass"
            c:type="GThemedIconClass"
            glib:is-gtype-struct-for="ThemedIcon">
    </record>
    <class name="ThreadedSocketService"
           c:type="GThreadedSocketService"
           version="2.22"
           parent="SocketService"
           glib:type-name="GThreadedSocketService"
           glib:get-type="g_threaded_socket_service_get_type"
           glib:type-struct="ThreadedSocketServiceClass">
      <doc xml:whitespace="preserve">A helper class for handling accepting incomming connections in the
glib mainloop and handling them in a thread.</doc>
      <constructor name="new" c:identifier="g_threaded_socket_service_new">
        <return-value transfer-ownership="full">
          <type name="ThreadedSocketService" c:type="GSocketService*"/>
        </return-value>
        <parameters>
          <parameter name="max_threads" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <property name="max-threads"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="SocketService" c:type="GSocketService"/>
      </field>
      <field name="priv">
        <type name="ThreadedSocketServicePrivate"
              c:type="GThreadedSocketServicePrivate*"/>
      </field>
      <glib:signal name="run">
        <return-value transfer-ownership="full">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="SocketConnection" c:type="GSocketConnection"/>
          </parameter>
          <parameter name="p0" transfer-ownership="none">
            <type name="GObject.Object" c:type="GObject"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ThreadedSocketServiceClass"
            c:type="GThreadedSocketServiceClass"
            glib:is-gtype-struct-for="ThreadedSocketService">
      <field name="parent_class">
        <type name="SocketServiceClass" c:type="GSocketServiceClass"/>
      </field>
      <field name="run">
        <callback name="run" c:type="run">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="service" transfer-ownership="none">
              <type name="ThreadedSocketService"
                    c:type="GThreadedSocketService*"/>
            </parameter>
            <parameter name="connection" transfer-ownership="none">
              <type name="SocketConnection" c:type="GSocketConnection*"/>
            </parameter>
            <parameter name="source_object" transfer-ownership="none">
              <type name="GObject.Object" c:type="GObject*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="ThreadedSocketServicePrivate"
            c:type="GThreadedSocketServicePrivate">
    </record>
    <class name="UnixConnection"
           c:type="GUnixConnection"
           parent="SocketConnection"
           glib:type-name="GUnixConnection"
           glib:get-type="g_unix_connection_get_type"
           glib:type-struct="UnixConnectionClass">
      <method name="send_fd"
              c:identifier="g_unix_connection_send_fd"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="receive_fd"
              c:identifier="g_unix_connection_receive_fd"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="send_credentials"
              c:identifier="g_unix_connection_send_credentials"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <method name="receive_credentials"
              c:identifier="g_unix_connection_receive_credentials"
              throws="1">
        <return-value transfer-ownership="full">
          <type name="Credentials" c:type="GCredentials*"/>
        </return-value>
        <parameters>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="SocketConnection" c:type="GSocketConnection"/>
      </field>
      <field name="priv">
        <type name="UnixConnectionPrivate" c:type="GUnixConnectionPrivate*"/>
      </field>
    </class>
    <record name="UnixConnectionClass"
            c:type="GUnixConnectionClass"
            glib:is-gtype-struct-for="UnixConnection">
      <field name="parent_class">
        <type name="SocketConnectionClass" c:type="GSocketConnectionClass"/>
      </field>
    </record>
    <record name="UnixConnectionPrivate" c:type="GUnixConnectionPrivate">
    </record>
    <class name="UnixCredentialsMessage"
           c:type="GUnixCredentialsMessage"
           version="2.26"
           parent="SocketControlMessage"
           glib:type-name="GUnixCredentialsMessage"
           glib:get-type="g_unix_credentials_message_get_type"
           glib:type-struct="UnixCredentialsMessageClass">
      <doc xml:whitespace="preserve">The #GUnixCredentialsMessage structure contains only private data
and should only be accessed using the provided API.</doc>
      <constructor name="new" c:identifier="g_unix_credentials_message_new">
        <return-value transfer-ownership="full">
          <type name="UnixCredentialsMessage" c:type="GSocketControlMessage*"/>
        </return-value>
      </constructor>
      <constructor name="new_with_credentials"
                   c:identifier="g_unix_credentials_message_new_with_credentials">
        <return-value transfer-ownership="full">
          <type name="UnixCredentialsMessage" c:type="GSocketControlMessage*"/>
        </return-value>
        <parameters>
          <parameter name="credentials" transfer-ownership="none">
            <type name="Credentials" c:type="GCredentials*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="is_supported"
                c:identifier="g_unix_credentials_message_is_supported">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </function>
      <method name="get_credentials"
              c:identifier="g_unix_credentials_message_get_credentials">
        <return-value transfer-ownership="full">
          <type name="Credentials" c:type="GCredentials*"/>
        </return-value>
      </method>
      <property name="credentials"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="Credentials" c:type="GCredentials"/>
      </property>
      <field name="parent_instance">
        <type name="SocketControlMessage" c:type="GSocketControlMessage"/>
      </field>
      <field name="priv">
        <type name="UnixCredentialsMessagePrivate"
              c:type="GUnixCredentialsMessagePrivate*"/>
      </field>
    </class>
    <record name="UnixCredentialsMessageClass"
            c:type="GUnixCredentialsMessageClass"
            glib:is-gtype-struct-for="UnixCredentialsMessage"
            version="2.26">
      <doc xml:whitespace="preserve">Class structure for #GUnixCredentialsMessage.</doc>
      <field name="parent_class">
        <type name="SocketControlMessageClass"
              c:type="GSocketControlMessageClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UnixCredentialsMessagePrivate"
            c:type="GUnixCredentialsMessagePrivate">
    </record>
    <class name="UnixFDList"
           c:type="GUnixFDList"
           parent="GObject.Object"
           glib:type-name="GUnixFDList"
           glib:get-type="g_unix_fd_list_get_type"
           glib:type-struct="UnixFDListClass">
      <constructor name="new" c:identifier="g_unix_fd_list_new">
        <return-value transfer-ownership="full">
          <type name="UnixFDList" c:type="GUnixFDList*"/>
        </return-value>
      </constructor>
      <constructor name="new_from_array"
                   c:identifier="g_unix_fd_list_new_from_array">
        <return-value transfer-ownership="full">
          <type name="UnixFDList" c:type="GUnixFDList*"/>
        </return-value>
        <parameters>
          <parameter name="fds"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <type name="int" c:type="gint*"/>
          </parameter>
          <parameter name="n_fds" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="append" c:identifier="g_unix_fd_list_append" throws="1">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_length" c:identifier="g_unix_fd_list_get_length">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <method name="get" c:identifier="g_unix_fd_list_get" throws="1">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="index_" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <method name="peek_fds" c:identifier="g_unix_fd_list_peek_fds">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint*"/>
        </return-value>
        <parameters>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="steal_fds" c:identifier="g_unix_fd_list_steal_fds">
        <return-value transfer-ownership="full">
          <type name="int" c:type="gint*"/>
        </return-value>
        <parameters>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="UnixFDListPrivate" c:type="GUnixFDListPrivate*"/>
      </field>
    </class>
    <record name="UnixFDListClass"
            c:type="GUnixFDListClass"
            glib:is-gtype-struct-for="UnixFDList">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UnixFDListPrivate" c:type="GUnixFDListPrivate">
    </record>
    <class name="UnixFDMessage"
           c:type="GUnixFDMessage"
           parent="SocketControlMessage"
           glib:type-name="GUnixFDMessage"
           glib:get-type="g_unix_fd_message_get_type"
           glib:type-struct="UnixFDMessageClass">
      <constructor name="new_with_fd_list"
                   c:identifier="g_unix_fd_message_new_with_fd_list">
        <return-value transfer-ownership="full">
          <type name="UnixFDMessage" c:type="GSocketControlMessage*"/>
        </return-value>
        <parameters>
          <parameter name="fd_list" transfer-ownership="none">
            <type name="UnixFDList" c:type="GUnixFDList*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new" c:identifier="g_unix_fd_message_new">
        <return-value transfer-ownership="full">
          <type name="UnixFDMessage" c:type="GSocketControlMessage*"/>
        </return-value>
      </constructor>
      <method name="get_fd_list" c:identifier="g_unix_fd_message_get_fd_list">
        <return-value transfer-ownership="full">
          <type name="UnixFDList" c:type="GUnixFDList*"/>
        </return-value>
      </method>
      <method name="steal_fds" c:identifier="g_unix_fd_message_steal_fds">
        <return-value transfer-ownership="full">
          <type name="int" c:type="gint*"/>
        </return-value>
        <parameters>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <type name="int" c:type="gint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="append_fd"
              c:identifier="g_unix_fd_message_append_fd"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </method>
      <property name="fd-list"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="UnixFDList" c:type="GUnixFDList"/>
      </property>
      <field name="parent_instance">
        <type name="SocketControlMessage" c:type="GSocketControlMessage"/>
      </field>
      <field name="priv">
        <type name="UnixFDMessagePrivate" c:type="GUnixFDMessagePrivate*"/>
      </field>
    </class>
    <record name="UnixFDMessageClass"
            c:type="GUnixFDMessageClass"
            glib:is-gtype-struct-for="UnixFDMessage">
      <field name="parent_class">
        <type name="SocketControlMessageClass"
              c:type="GSocketControlMessageClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UnixFDMessagePrivate" c:type="GUnixFDMessagePrivate">
    </record>
    <class name="UnixInputStream"
           c:type="GUnixInputStream"
           parent="InputStream"
           glib:type-name="GUnixInputStream"
           glib:get-type="g_unix_input_stream_get_type"
           glib:type-struct="UnixInputStreamClass">
      <doc xml:whitespace="preserve">Implements #GInputStream for reading from selectable unix file descriptors</doc>
      <constructor name="new" c:identifier="g_unix_input_stream_new">
        <return-value transfer-ownership="full">
          <type name="UnixInputStream" c:type="GInputStream*"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="close_fd" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_close_fd"
              c:identifier="g_unix_input_stream_set_close_fd">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="close_fd" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_close_fd"
              c:identifier="g_unix_input_stream_get_close_fd">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_fd" c:identifier="g_unix_input_stream_get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <property name="close-fd" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="fd"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="InputStream" c:type="GInputStream"/>
      </field>
      <field name="priv">
        <type name="UnixInputStreamPrivate" c:type="GUnixInputStreamPrivate*"/>
      </field>
    </class>
    <record name="UnixInputStreamClass"
            c:type="GUnixInputStreamClass"
            glib:is-gtype-struct-for="UnixInputStream">
      <field name="parent_class">
        <type name="InputStreamClass" c:type="GInputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UnixInputStreamPrivate" c:type="GUnixInputStreamPrivate">
    </record>
    <record name="UnixMountEntry" c:type="GUnixMountEntry">
      <doc xml:whitespace="preserve">Defines a Unix mount entry (e.g. &lt;filename&gt;/media/cdrom&lt;/filename&gt;).
This corresponds roughly to a mtab entry.</doc>
    </record>
    <class name="UnixMountMonitor"
           c:type="GUnixMountMonitor"
           parent="GObject.Object"
           glib:type-name="GUnixMountMonitor"
           glib:get-type="g_unix_mount_monitor_get_type"
           glib:type-struct="UnixMountMonitorClass">
      <doc xml:whitespace="preserve">Watches #GUnixMount&lt;!-- --&gt;s for changes.</doc>
      <constructor name="new" c:identifier="g_unix_mount_monitor_new">
        <return-value transfer-ownership="full">
          <type name="UnixMountMonitor" c:type="GUnixMountMonitor*"/>
        </return-value>
      </constructor>
      <method name="set_rate_limit"
              c:identifier="g_unix_mount_monitor_set_rate_limit">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="limit_msec" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="mountpoints-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="mounts-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="UnixMountMonitorClass"
            c:type="GUnixMountMonitorClass"
            glib:is-gtype-struct-for="UnixMountMonitor">
    </record>
    <record name="UnixMountPoint" c:type="GUnixMountPoint">
      <doc xml:whitespace="preserve">Defines a Unix mount point (e.g. &lt;filename&gt;/dev&lt;/filename&gt;).
This corresponds roughly to a fstab entry.</doc>
      <method name="free" c:identifier="g_unix_mount_point_free">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </method>
      <method name="compare" c:identifier="g_unix_mount_point_compare">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
        <parameters>
          <parameter name="mount2" transfer-ownership="none">
            <type name="UnixMountPoint" c:type="GUnixMountPoint*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mount_path"
              c:identifier="g_unix_mount_point_get_mount_path">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_device_path"
              c:identifier="g_unix_mount_point_get_device_path">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_fs_type" c:identifier="g_unix_mount_point_get_fs_type">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="is_readonly" c:identifier="g_unix_mount_point_is_readonly">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_user_mountable"
              c:identifier="g_unix_mount_point_is_user_mountable">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="is_loopback" c:identifier="g_unix_mount_point_is_loopback">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="guess_can_eject"
              c:identifier="g_unix_mount_point_guess_can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="guess_name" c:identifier="g_unix_mount_point_guess_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="guess_icon" c:identifier="g_unix_mount_point_guess_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
    </record>
    <class name="UnixOutputStream"
           c:type="GUnixOutputStream"
           parent="OutputStream"
           glib:type-name="GUnixOutputStream"
           glib:get-type="g_unix_output_stream_get_type"
           glib:type-struct="UnixOutputStreamClass">
      <doc xml:whitespace="preserve">Implements #GOutputStream for outputting to selectable unix file descriptors</doc>
      <constructor name="new" c:identifier="g_unix_output_stream_new">
        <return-value transfer-ownership="full">
          <type name="UnixOutputStream" c:type="GOutputStream*"/>
        </return-value>
        <parameters>
          <parameter name="fd" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="close_fd" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="set_close_fd"
              c:identifier="g_unix_output_stream_set_close_fd">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="close_fd" transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_close_fd"
              c:identifier="g_unix_output_stream_get_close_fd">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_fd" c:identifier="g_unix_output_stream_get_fd">
        <return-value transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </return-value>
      </method>
      <property name="close-fd" writable="1" transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="fd"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
      <field name="parent_instance">
        <type name="OutputStream" c:type="GOutputStream"/>
      </field>
      <field name="priv">
        <type name="UnixOutputStreamPrivate"
              c:type="GUnixOutputStreamPrivate*"/>
      </field>
    </class>
    <record name="UnixOutputStreamClass"
            c:type="GUnixOutputStreamClass"
            glib:is-gtype-struct-for="UnixOutputStream">
      <field name="parent_class">
        <type name="OutputStreamClass" c:type="GOutputStreamClass"/>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <record name="UnixOutputStreamPrivate" c:type="GUnixOutputStreamPrivate">
    </record>
    <class name="UnixSocketAddress"
           c:type="GUnixSocketAddress"
           parent="SocketAddress"
           glib:type-name="GUnixSocketAddress"
           glib:get-type="g_unix_socket_address_get_type"
           glib:type-struct="UnixSocketAddressClass">
      <implements name="SocketConnectable"/>
      <constructor name="new" c:identifier="g_unix_socket_address_new">
        <return-value transfer-ownership="full">
          <type name="UnixSocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_abstract"
                   c:identifier="g_unix_socket_address_new_abstract">
        <return-value transfer-ownership="full">
          <type name="UnixSocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="path_len" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_with_type"
                   c:identifier="g_unix_socket_address_new_with_type">
        <return-value transfer-ownership="full">
          <type name="UnixSocketAddress" c:type="GSocketAddress*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="path_len" transfer-ownership="none">
            <type name="int" c:type="gint"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="UnixSocketAddressType"
                  c:type="GUnixSocketAddressType"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="abstract_names_supported"
                c:identifier="g_unix_socket_address_abstract_names_supported">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </function>
      <method name="get_path" c:identifier="g_unix_socket_address_get_path">
        <return-value transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_path_len"
              c:identifier="g_unix_socket_address_get_path_len">
        <return-value transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </return-value>
      </method>
      <method name="get_address_type"
              c:identifier="g_unix_socket_address_get_address_type">
        <return-value transfer-ownership="full">
          <type name="UnixSocketAddressType" c:type="GUnixSocketAddressType"/>
        </return-value>
      </method>
      <method name="get_is_abstract"
              c:identifier="g_unix_socket_address_get_is_abstract">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <property name="abstract"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </property>
      <property name="address-type"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="UnixSocketAddressType" c:type="GUnixSocketAddressType"/>
      </property>
      <property name="path"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="utf8" c:type="gchararray"/>
      </property>
      <property name="path-as-array"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="GLib.ByteArray" c:type="GByteArray"/>
      </property>
      <field name="parent_instance">
        <type name="SocketAddress" c:type="GSocketAddress"/>
      </field>
      <field name="priv">
        <type name="UnixSocketAddressPrivate"
              c:type="GUnixSocketAddressPrivate*"/>
      </field>
    </class>
    <record name="UnixSocketAddressClass"
            c:type="GUnixSocketAddressClass"
            glib:is-gtype-struct-for="UnixSocketAddress">
      <field name="parent_class">
        <type name="SocketAddressClass" c:type="GSocketAddressClass"/>
      </field>
    </record>
    <record name="UnixSocketAddressPrivate" c:type="GUnixSocketAddressPrivate">
    </record>
    <enumeration name="UnixSocketAddressType"
                 version="2.26"
                 glib:type-name="GUnixSocketAddressType"
                 glib:get-type="g_unix_socket_address_type_get_type"
                 c:type="GUnixSocketAddressType">
      <doc xml:whitespace="preserve">The type of name used by a #GUnixSocketAddress.
%G_UNIX_SOCKET_ADDRESS_PATH indicates a traditional unix domain
socket bound to a filesystem path. %G_UNIX_SOCKET_ADDRESS_ANONYMOUS
indicates a socket not bound to any name (eg, a client-side socket,
or a socket created with socketpair()).
For abstract sockets, there are two incompatible ways of naming
sockaddr_un&lt;/literal&gt; as the name, padding the unused parts of the
%sun_path field with zeroes; this corresponds to
%G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED. However, many programs
instead just use a portion of %sun_path, and pass an appropriate
smaller length to bind() or connect(). This is
%G_UNIX_SOCKET_ADDRESS_ABSTRACT.</doc>
      <member name="invalid"
              value="0"
              c:identifier="G_UNIX_SOCKET_ADDRESS_INVALID"
              glib:nick="invalid"/>
      <member name="anonymous"
              value="1"
              c:identifier="G_UNIX_SOCKET_ADDRESS_ANONYMOUS"
              glib:nick="anonymous"/>
      <member name="path"
              value="2"
              c:identifier="G_UNIX_SOCKET_ADDRESS_PATH"
              glib:nick="path"/>
      <member name="abstract"
              value="3"
              c:identifier="G_UNIX_SOCKET_ADDRESS_ABSTRACT"
              glib:nick="abstract"/>
      <member name="abstract_padded"
              value="4"
              c:identifier="G_UNIX_SOCKET_ADDRESS_ABSTRACT_PADDED"
              glib:nick="abstract-padded"/>
    </enumeration>
    <constant name="VFS_EXTENSION_POINT_NAME" value="gio-vfs">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_IDENTIFIER_KIND_HAL_UDI" value="hal-udi">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_IDENTIFIER_KIND_LABEL" value="label">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_IDENTIFIER_KIND_NFS_MOUNT" value="nfs-mount">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_IDENTIFIER_KIND_UNIX_DEVICE" value="unix-device">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_IDENTIFIER_KIND_UUID" value="uuid">
      <type name="utf8"/>
    </constant>
    <constant name="VOLUME_MONITOR_EXTENSION_POINT_NAME"
              value="gio-volume-monitor">
      <type name="utf8"/>
    </constant>
    <class name="Vfs"
           c:type="GVfs"
           parent="GObject.Object"
           glib:type-name="GVfs"
           glib:get-type="g_vfs_get_type"
           glib:type-struct="VfsClass">
      <doc xml:whitespace="preserve">Virtual File System object.</doc>
      <function name="get_default" c:identifier="g_vfs_get_default">
        <return-value transfer-ownership="full">
          <type name="Vfs" c:type="GVfs*"/>
        </return-value>
      </function>
      <function name="get_local" c:identifier="g_vfs_get_local">
        <return-value transfer-ownership="full">
          <type name="Vfs" c:type="GVfs*"/>
        </return-value>
      </function>
      <virtual-method name="is_active" invoker="is_active">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_file_for_path" invoker="get_file_for_path">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_file_for_uri" invoker="get_file_for_uri">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_supported_uri_schemes"
                      invoker="get_supported_uri_schemes">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </virtual-method>
      <virtual-method name="parse_name" invoker="parse_name">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="parse_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="local_file_add_info">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="device" transfer-ownership="none">
            <type name="uint64" c:type="guint64"/>
          </parameter>
          <parameter name="attribute_matcher" transfer-ownership="none">
            <type name="FileAttributeMatcher" c:type="GFileAttributeMatcher*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="extra_data" transfer-ownership="none">
            <type name="any" c:type="gpointer*"/>
          </parameter>
          <parameter name="free_extra_data" transfer-ownership="none">
            <type name="GLib.DestroyNotify" c:type="GDestroyNotify*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="add_writable_namespaces">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="list" transfer-ownership="none">
            <type name="FileAttributeInfoList"
                  c:type="GFileAttributeInfoList*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="local_file_set_attributes" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
          <parameter name="flags" transfer-ownership="none">
            <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="local_file_removed">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="filename" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="local_file_moved">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="source" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="dest" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="is_active" c:identifier="g_vfs_is_active">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="get_file_for_path" c:identifier="g_vfs_get_file_for_path">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="path" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_file_for_uri" c:identifier="g_vfs_get_file_for_uri">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="uri" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_supported_uri_schemes"
              c:identifier="g_vfs_get_supported_uri_schemes">
        <return-value transfer-ownership="full">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="parse_name" c:identifier="g_vfs_parse_name">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
        <parameters>
          <parameter name="parse_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="VfsClass" c:type="GVfsClass" glib:is-gtype-struct-for="Vfs">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="is_active">
        <callback name="is_active" c:type="is_active">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_file_for_path">
        <callback name="get_file_for_path" c:type="get_file_for_path">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="path" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_file_for_uri">
        <callback name="get_file_for_uri" c:type="get_file_for_uri">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="uri" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_supported_uri_schemes">
        <callback name="get_supported_uri_schemes"
                  c:type="get_supported_uri_schemes">
          <return-value transfer-ownership="full">
            <array c:type="gchar**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="parse_name">
        <callback name="parse_name" c:type="parse_name">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="parse_name" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="local_file_add_info">
        <callback name="local_file_add_info" c:type="local_file_add_info">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="filename" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="device" transfer-ownership="none">
              <type name="uint64" c:type="guint64"/>
            </parameter>
            <parameter name="attribute_matcher" transfer-ownership="none">
              <type name="FileAttributeMatcher"
                    c:type="GFileAttributeMatcher*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="FileInfo" c:type="GFileInfo*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="extra_data" transfer-ownership="none">
              <type name="any" c:type="gpointer*"/>
            </parameter>
            <parameter name="free_extra_data" transfer-ownership="none">
              <type name="GLib.DestroyNotify" c:type="GDestroyNotify*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="add_writable_namespaces">
        <callback name="add_writable_namespaces"
                  c:type="add_writable_namespaces">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="list" transfer-ownership="none">
              <type name="FileAttributeInfoList"
                    c:type="GFileAttributeInfoList*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="local_file_set_attributes">
        <callback name="local_file_set_attributes"
                  c:type="local_file_set_attributes"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="filename" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="info" transfer-ownership="none">
              <type name="FileInfo" c:type="GFileInfo*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="FileQueryInfoFlags" c:type="GFileQueryInfoFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="local_file_removed">
        <callback name="local_file_removed" c:type="local_file_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="filename" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="local_file_moved">
        <callback name="local_file_moved" c:type="local_file_moved">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="vfs" transfer-ownership="none">
              <type name="Vfs" c:type="GVfs*"/>
            </parameter>
            <parameter name="source" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="dest" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved7">
        <callback name="g_reserved7" c:type="_g_reserved7">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <interface name="Volume"
               c:type="GVolume"
               glib:type-name="GVolume"
               glib:get-type="g_volume_get_type"
               glib:type-struct="VolumeIface">
      <doc xml:whitespace="preserve">Opaque mountable volume object.</doc>
      <virtual-method name="get_name" invoker="get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_icon" invoker="get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_uuid" invoker="get_uuid">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_drive" invoker="get_drive">
        <return-value transfer-ownership="full">
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_mount" invoker="get_mount">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_mount" invoker="can_mount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="can_eject" invoker="can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="mount_fn">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="mount_finish" invoker="mount_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject" invoker="eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="4">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_finish" invoker="eject_finish" throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_identifier" invoker="get_identifier">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enumerate_identifiers"
                      invoker="enumerate_identifiers">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </virtual-method>
      <virtual-method name="should_automount" invoker="should_automount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </virtual-method>
      <virtual-method name="get_activation_root" invoker="get_activation_root">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </virtual-method>
      <virtual-method name="eject_with_operation"
                      invoker="eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none" closure="5">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="eject_with_operation_finish"
                      invoker="eject_with_operation_finish"
                      throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_name" c:identifier="g_volume_get_name">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_icon" c:identifier="g_volume_get_icon">
        <return-value transfer-ownership="full">
          <type name="Icon" c:type="GIcon*"/>
        </return-value>
      </method>
      <method name="get_uuid" c:identifier="g_volume_get_uuid">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
      </method>
      <method name="get_drive" c:identifier="g_volume_get_drive">
        <return-value transfer-ownership="full">
          <type name="Drive" c:type="GDrive*"/>
        </return-value>
      </method>
      <method name="get_mount" c:identifier="g_volume_get_mount">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
      </method>
      <method name="can_mount" c:identifier="g_volume_can_mount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="can_eject" c:identifier="g_volume_can_eject">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="should_automount" c:identifier="g_volume_should_automount">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
      </method>
      <method name="mount" c:identifier="g_volume_mount">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountMountFlags" c:type="GMountMountFlags"/>
          </parameter>
          <parameter name="mount_operation"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="mount_finish"
              c:identifier="g_volume_mount_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject" c:identifier="g_volume_eject">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="4">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_finish"
              c:identifier="g_volume_eject_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_identifier" c:identifier="g_volume_get_identifier">
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="char*"/>
        </return-value>
        <parameters>
          <parameter name="kind" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="enumerate_identifiers"
              c:identifier="g_volume_enumerate_identifiers">
        <return-value transfer-ownership="full">
          <array c:type="char**">
            <type name="utf8"/>
          </array>
        </return-value>
      </method>
      <method name="get_activation_root"
              c:identifier="g_volume_get_activation_root">
        <return-value transfer-ownership="full">
          <type name="File" c:type="GFile*"/>
        </return-value>
      </method>
      <method name="eject_with_operation"
              c:identifier="g_volume_eject_with_operation">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="flags" transfer-ownership="none">
            <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
          </parameter>
          <parameter name="mount_operation" transfer-ownership="none">
            <type name="MountOperation" c:type="GMountOperation*"/>
          </parameter>
          <parameter name="cancellable"
                     transfer-ownership="none"
                     allow-none="1">
            <type name="Cancellable" c:type="GCancellable*"/>
          </parameter>
          <parameter name="callback"
                     transfer-ownership="none"
                     scope="async"
                     closure="5">
            <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
          </parameter>
          <parameter name="user_data" transfer-ownership="none">
            <type name="any" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="eject_with_operation_finish"
              c:identifier="g_volume_eject_with_operation_finish"
              throws="1">
        <return-value transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="result" transfer-ownership="none">
            <type name="AsyncResult" c:type="GAsyncResult*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </interface>
    <record name="VolumeIface"
            c:type="GVolumeIface"
            glib:is-gtype-struct-for="Volume">
      <doc xml:whitespace="preserve">Interface for implementing operations for mountable volumes.</doc>
      <field name="g_iface">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="changed">
        <callback name="changed" c:type="changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="removed">
        <callback name="removed" c:type="removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_name">
        <callback name="get_name" c:type="get_name">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_icon">
        <callback name="get_icon" c:type="get_icon">
          <return-value transfer-ownership="full">
            <type name="Icon" c:type="GIcon*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_uuid">
        <callback name="get_uuid" c:type="get_uuid">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_drive">
        <callback name="get_drive" c:type="get_drive">
          <return-value transfer-ownership="full">
            <type name="Drive" c:type="GDrive*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mount">
        <callback name="get_mount" c:type="get_mount">
          <return-value transfer-ownership="full">
            <type name="Mount" c:type="GMount*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_mount">
        <callback name="can_mount" c:type="can_mount">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="can_eject">
        <callback name="can_eject" c:type="can_eject">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_fn">
        <callback name="mount_fn" c:type="mount_fn">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountMountFlags" c:type="GMountMountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_finish">
        <callback name="mount_finish" c:type="mount_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject">
        <callback name="eject" c:type="eject">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="4">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_finish">
        <callback name="eject_finish" c:type="eject_finish" throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_identifier">
        <callback name="get_identifier" c:type="get_identifier">
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="char*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="kind" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enumerate_identifiers">
        <callback name="enumerate_identifiers" c:type="enumerate_identifiers">
          <return-value transfer-ownership="full">
            <array c:type="char**">
              <type name="utf8"/>
            </array>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="should_automount">
        <callback name="should_automount" c:type="should_automount">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_activation_root">
        <callback name="get_activation_root" c:type="get_activation_root">
          <return-value transfer-ownership="full">
            <type name="File" c:type="GFile*"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation">
        <callback name="eject_with_operation" c:type="eject_with_operation">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="flags" transfer-ownership="none">
              <type name="MountUnmountFlags" c:type="GMountUnmountFlags"/>
            </parameter>
            <parameter name="mount_operation" transfer-ownership="none">
              <type name="MountOperation" c:type="GMountOperation*"/>
            </parameter>
            <parameter name="cancellable"
                       transfer-ownership="none"
                       allow-none="1">
              <type name="Cancellable" c:type="GCancellable*"/>
            </parameter>
            <parameter name="callback" transfer-ownership="none">
              <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
            </parameter>
            <parameter name="user_data" transfer-ownership="none" closure="5">
              <type name="any" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="eject_with_operation_finish">
        <callback name="eject_with_operation_finish"
                  c:type="eject_with_operation_finish"
                  throws="1">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
            <parameter name="result" transfer-ownership="none">
              <type name="AsyncResult" c:type="GAsyncResult*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="VolumeMonitor"
           c:type="GVolumeMonitor"
           parent="GObject.Object"
           glib:type-name="GVolumeMonitor"
           glib:get-type="g_volume_monitor_get_type"
           glib:type-struct="VolumeMonitorClass">
      <doc xml:whitespace="preserve">A Volume Monitor that watches for volume events.</doc>
      <function name="get" c:identifier="g_volume_monitor_get">
        <return-value transfer-ownership="full">
          <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
        </return-value>
      </function>
      <function name="adopt_orphan_mount"
                c:identifier="g_volume_monitor_adopt_orphan_mount">
        <return-value transfer-ownership="full">
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="mount" transfer-ownership="none">
            <type name="Mount" c:type="GMount*"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="get_connected_drives"
                      invoker="get_connected_drives">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Drive"/>
          </type>
        </return-value>
      </virtual-method>
      <virtual-method name="get_volumes" invoker="get_volumes">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Volume"/>
          </type>
        </return-value>
      </virtual-method>
      <virtual-method name="get_mounts" invoker="get_mounts">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Mount"/>
          </type>
        </return-value>
      </virtual-method>
      <virtual-method name="get_volume_for_uuid" invoker="get_volume_for_uuid">
        <return-value transfer-ownership="full">
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="uuid" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_mount_for_uuid" invoker="get_mount_for_uuid">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="uuid" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_connected_drives"
              c:identifier="g_volume_monitor_get_connected_drives">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Drive"/>
          </type>
        </return-value>
      </method>
      <method name="get_volumes" c:identifier="g_volume_monitor_get_volumes">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Volume"/>
          </type>
        </return-value>
      </method>
      <method name="get_mounts" c:identifier="g_volume_monitor_get_mounts">
        <return-value transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="Mount"/>
          </type>
        </return-value>
      </method>
      <method name="get_volume_for_uuid"
              c:identifier="g_volume_monitor_get_volume_for_uuid">
        <return-value transfer-ownership="full">
          <type name="Volume" c:type="GVolume*"/>
        </return-value>
        <parameters>
          <parameter name="uuid" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_mount_for_uuid"
              c:identifier="g_volume_monitor_get_mount_for_uuid">
        <return-value transfer-ownership="full">
          <type name="Mount" c:type="GMount*"/>
        </return-value>
        <parameters>
          <parameter name="uuid" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="any" c:type="gpointer"/>
      </field>
      <glib:signal name="drive-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drive-connected">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drive-disconnected">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drive-eject-button">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="drive-stop-button">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Drive" c:type="GDrive"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-pre-unmount">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="mount-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Mount" c:type="GMount"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="volume-added">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Volume" c:type="GVolume"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="volume-changed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Volume" c:type="GVolume"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="volume-removed">
        <return-value transfer-ownership="full">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Volume" c:type="GVolume"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="VolumeMonitorClass"
            c:type="GVolumeMonitorClass"
            glib:is-gtype-struct-for="VolumeMonitor">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="volume_added">
        <callback name="volume_added" c:type="volume_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="volume_removed">
        <callback name="volume_removed" c:type="volume_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="volume_changed">
        <callback name="volume_changed" c:type="volume_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="volume" transfer-ownership="none">
              <type name="Volume" c:type="GVolume*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_added">
        <callback name="mount_added" c:type="mount_added">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_removed">
        <callback name="mount_removed" c:type="mount_removed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_pre_unmount">
        <callback name="mount_pre_unmount" c:type="mount_pre_unmount">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="mount_changed">
        <callback name="mount_changed" c:type="mount_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drive_connected">
        <callback name="drive_connected" c:type="drive_connected">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drive_disconnected">
        <callback name="drive_disconnected" c:type="drive_disconnected">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drive_changed">
        <callback name="drive_changed" c:type="drive_changed">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_supported">
        <callback name="is_supported" c:type="is_supported">
          <return-value transfer-ownership="none">
            <type name="boolean" c:type="gboolean"/>
          </return-value>
        </callback>
      </field>
      <field name="get_connected_drives">
        <callback name="get_connected_drives" c:type="get_connected_drives">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*">
              <type name="Drive"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_volumes">
        <callback name="get_volumes" c:type="get_volumes">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*">
              <type name="Volume"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mounts">
        <callback name="get_mounts" c:type="get_mounts">
          <return-value transfer-ownership="full">
            <type name="GLib.List" c:type="GList*">
              <type name="Mount"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_volume_for_uuid">
        <callback name="get_volume_for_uuid" c:type="get_volume_for_uuid">
          <return-value transfer-ownership="full">
            <type name="Volume" c:type="GVolume*"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="uuid" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_mount_for_uuid">
        <callback name="get_mount_for_uuid" c:type="get_mount_for_uuid">
          <return-value transfer-ownership="full">
            <type name="Mount" c:type="GMount*"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="uuid" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="adopt_orphan_mount">
        <callback name="adopt_orphan_mount" c:type="adopt_orphan_mount">
          <return-value transfer-ownership="full">
            <type name="Volume" c:type="GVolume*"/>
          </return-value>
          <parameters>
            <parameter name="mount" transfer-ownership="none">
              <type name="Mount" c:type="GMount*"/>
            </parameter>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drive_eject_button">
        <callback name="drive_eject_button" c:type="drive_eject_button">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="drive_stop_button">
        <callback name="drive_stop_button" c:type="drive_stop_button">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="volume_monitor" transfer-ownership="none">
              <type name="VolumeMonitor" c:type="GVolumeMonitor*"/>
            </parameter>
            <parameter name="drive" transfer-ownership="none">
              <type name="Drive" c:type="GDrive*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="g_reserved1">
        <callback name="g_reserved1" c:type="_g_reserved1">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved2">
        <callback name="g_reserved2" c:type="_g_reserved2">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved3">
        <callback name="g_reserved3" c:type="_g_reserved3">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved4">
        <callback name="g_reserved4" c:type="_g_reserved4">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved5">
        <callback name="g_reserved5" c:type="_g_reserved5">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
      <field name="g_reserved6">
        <callback name="g_reserved6" c:type="_g_reserved6">
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
        </callback>
      </field>
    </record>
    <class name="ZlibCompressor"
           c:type="GZlibCompressor"
           parent="GObject.Object"
           glib:type-name="GZlibCompressor"
           glib:get-type="g_zlib_compressor_get_type"
           glib:type-struct="ZlibCompressorClass">
      <implements name="Converter"/>
      <constructor name="new" c:identifier="g_zlib_compressor_new">
        <return-value transfer-ownership="full">
          <type name="ZlibCompressor" c:type="GZlibCompressor*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="ZlibCompressorFormat" c:type="GZlibCompressorFormat"/>
          </parameter>
          <parameter name="level" transfer-ownership="none">
            <type name="int" c:type="int"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_file_info"
              c:identifier="g_zlib_compressor_get_file_info">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
      </method>
      <method name="set_file_info"
              c:identifier="g_zlib_compressor_set_file_info">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="file_info" transfer-ownership="none">
            <type name="FileInfo" c:type="GFileInfo*"/>
          </parameter>
        </parameters>
      </method>
      <property name="file-info" writable="1" transfer-ownership="none">
        <type name="FileInfo" c:type="GFileInfo"/>
      </property>
      <property name="format"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="ZlibCompressorFormat" c:type="GZlibCompressorFormat"/>
      </property>
      <property name="level"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </property>
    </class>
    <record name="ZlibCompressorClass"
            c:type="GZlibCompressorClass"
            glib:is-gtype-struct-for="ZlibCompressor">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <enumeration name="ZlibCompressorFormat"
                 version="2.24"
                 glib:type-name="GZlibCompressorFormat"
                 glib:get-type="g_zlib_compressor_format_get_type"
                 c:type="GZlibCompressorFormat">
      <doc xml:whitespace="preserve">Used to select the type of data format to use for #GZlibDecompressor
and #GZlibCompressor.</doc>
      <member name="zlib"
              value="0"
              c:identifier="G_ZLIB_COMPRESSOR_FORMAT_ZLIB"
              glib:nick="zlib"/>
      <member name="gzip"
              value="1"
              c:identifier="G_ZLIB_COMPRESSOR_FORMAT_GZIP"
              glib:nick="gzip"/>
      <member name="raw"
              value="2"
              c:identifier="G_ZLIB_COMPRESSOR_FORMAT_RAW"
              glib:nick="raw"/>
    </enumeration>
    <class name="ZlibDecompressor"
           c:type="GZlibDecompressor"
           parent="GObject.Object"
           glib:type-name="GZlibDecompressor"
           glib:get-type="g_zlib_decompressor_get_type"
           glib:type-struct="ZlibDecompressorClass">
      <implements name="Converter"/>
      <constructor name="new" c:identifier="g_zlib_decompressor_new">
        <return-value transfer-ownership="full">
          <type name="ZlibDecompressor" c:type="GZlibDecompressor*"/>
        </return-value>
        <parameters>
          <parameter name="format" transfer-ownership="none">
            <type name="ZlibCompressorFormat" c:type="GZlibCompressorFormat"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_file_info"
              c:identifier="g_zlib_decompressor_get_file_info">
        <return-value transfer-ownership="full">
          <type name="FileInfo" c:type="GFileInfo*"/>
        </return-value>
      </method>
      <property name="file-info" transfer-ownership="none">
        <type name="FileInfo" c:type="GFileInfo"/>
      </property>
      <property name="format"
                writable="1"
                construct-only="1"
                transfer-ownership="none">
        <type name="ZlibCompressorFormat" c:type="GZlibCompressorFormat"/>
      </property>
    </class>
    <record name="ZlibDecompressorClass"
            c:type="GZlibDecompressorClass"
            glib:is-gtype-struct-for="ZlibDecompressor">
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <function name="app_info_create_from_commandline"
              c:identifier="g_app_info_create_from_commandline"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="AppInfo" c:type="GAppInfo*"/>
      </return-value>
      <parameters>
        <parameter name="commandline" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="application_name"
                   transfer-ownership="none"
                   allow-none="1">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="AppInfoCreateFlags" c:type="GAppInfoCreateFlags"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_all" c:identifier="g_app_info_get_all">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*">
          <type name="AppInfo"/>
        </type>
      </return-value>
    </function>
    <function name="app_info_get_all_for_type"
              c:identifier="g_app_info_get_all_for_type">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*">
          <type name="AppInfo"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_default_for_type"
              c:identifier="g_app_info_get_default_for_type">
      <return-value transfer-ownership="full">
        <type name="AppInfo" c:type="GAppInfo*"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="must_support_uris" transfer-ownership="none">
          <type name="boolean" c:type="gboolean"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_get_default_for_uri_scheme"
              c:identifier="g_app_info_get_default_for_uri_scheme">
      <return-value transfer-ownership="full">
        <type name="AppInfo" c:type="GAppInfo*"/>
      </return-value>
      <parameters>
        <parameter name="uri_scheme" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_launch_default_for_uri"
              c:identifier="g_app_info_launch_default_for_uri"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="launch_context" transfer-ownership="none">
          <type name="AppLaunchContext" c:type="GAppLaunchContext*"/>
        </parameter>
      </parameters>
    </function>
    <function name="app_info_reset_type_associations"
              c:identifier="g_app_info_reset_type_associations">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="content_type" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="async_initable_new_async"
              c:identifier="g_async_initable_new_async"
              introspectable="0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="async"
                   closure="4">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="first_property_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="async_initable_newv_async"
              c:identifier="g_async_initable_newv_async">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="n_parameters" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GObject.Parameter" c:type="GParameter*"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="int" c:type="int"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="async"
                   closure="6">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_get" c:identifier="g_bus_get">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="bus_type" transfer-ownership="none">
          <type name="BusType" c:type="GBusType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="async"
                   closure="3">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_get_finish" c:identifier="g_bus_get_finish" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusConnection" c:type="GDBusConnection*"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_get_sync" c:identifier="g_bus_get_sync" throws="1">
      <return-value transfer-ownership="full">
        <type name="DBusConnection" c:type="GDBusConnection*"/>
      </return-value>
      <parameters>
        <parameter name="bus_type" transfer-ownership="none">
          <type name="BusType" c:type="GBusType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_own_name" c:identifier="g_bus_own_name">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="bus_type" transfer-ownership="none">
          <type name="BusType" c:type="GBusType"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="BusNameOwnerFlags" c:type="GBusNameOwnerFlags"/>
        </parameter>
        <parameter name="bus_acquired_handler"
                   transfer-ownership="none"
                   scope="call">
          <type name="BusAcquiredCallback" c:type="GBusAcquiredCallback"/>
        </parameter>
        <parameter name="name_acquired_handler"
                   transfer-ownership="none"
                   scope="call">
          <type name="BusNameAcquiredCallback"
                c:type="GBusNameAcquiredCallback"/>
        </parameter>
        <parameter name="name_lost_handler"
                   transfer-ownership="none"
                   scope="notified"
                   closure="6"
                   destroy="7">
          <type name="BusNameLostCallback" c:type="GBusNameLostCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="user_data_free_func"
                   transfer-ownership="none"
                   scope="call">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_own_name_on_connection"
              c:identifier="g_bus_own_name_on_connection">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="BusNameOwnerFlags" c:type="GBusNameOwnerFlags"/>
        </parameter>
        <parameter name="name_acquired_handler"
                   transfer-ownership="none"
                   scope="call">
          <type name="BusNameAcquiredCallback"
                c:type="GBusNameAcquiredCallback"/>
        </parameter>
        <parameter name="name_lost_handler"
                   transfer-ownership="none"
                   scope="notified"
                   closure="5"
                   destroy="6">
          <type name="BusNameLostCallback" c:type="GBusNameLostCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="user_data_free_func"
                   transfer-ownership="none"
                   scope="call">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_own_name_on_connection_with_closures"
              c:identifier="g_bus_own_name_on_connection_with_closures">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="BusNameOwnerFlags" c:type="GBusNameOwnerFlags"/>
        </parameter>
        <parameter name="name_acquired_closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="name_lost_closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_own_name_with_closures"
              c:identifier="g_bus_own_name_with_closures">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="bus_type" transfer-ownership="none">
          <type name="BusType" c:type="GBusType"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="BusNameOwnerFlags" c:type="GBusNameOwnerFlags"/>
        </parameter>
        <parameter name="bus_acquired_closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="name_acquired_closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="name_lost_closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_unown_name" c:identifier="g_bus_unown_name">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="owner_id" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_unwatch_name" c:identifier="g_bus_unwatch_name">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="watcher_id" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_watch_name" c:identifier="g_bus_watch_name">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="bus_type" transfer-ownership="none">
          <type name="BusType" c:type="GBusType"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="BusNameWatcherFlags" c:type="GBusNameWatcherFlags"/>
        </parameter>
        <parameter name="name_appeared_handler"
                   transfer-ownership="none"
                   scope="call">
          <type name="BusNameAppearedCallback"
                c:type="GBusNameAppearedCallback"/>
        </parameter>
        <parameter name="name_vanished_handler"
                   transfer-ownership="none"
                   scope="notified"
                   closure="5"
                   destroy="6">
          <type name="BusNameVanishedCallback"
                c:type="GBusNameVanishedCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="user_data_free_func"
                   transfer-ownership="none"
                   scope="call">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_watch_name_on_connection"
              c:identifier="g_bus_watch_name_on_connection">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="BusNameWatcherFlags" c:type="GBusNameWatcherFlags"/>
        </parameter>
        <parameter name="name_appeared_handler"
                   transfer-ownership="none"
                   scope="call">
          <type name="BusNameAppearedCallback"
                c:type="GBusNameAppearedCallback"/>
        </parameter>
        <parameter name="name_vanished_handler"
                   transfer-ownership="none"
                   scope="notified"
                   closure="5"
                   destroy="6">
          <type name="BusNameVanishedCallback"
                c:type="GBusNameVanishedCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="user_data_free_func"
                   transfer-ownership="none"
                   scope="call">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_watch_name_on_connection_with_closures"
              c:identifier="g_bus_watch_name_on_connection_with_closures">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="connection" transfer-ownership="none">
          <type name="DBusConnection" c:type="GDBusConnection*"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="BusNameWatcherFlags" c:type="GBusNameWatcherFlags"/>
        </parameter>
        <parameter name="name_appeared_closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="name_vanished_closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
      </parameters>
    </function>
    <function name="bus_watch_name_with_closures"
              c:identifier="g_bus_watch_name_with_closures">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="bus_type" transfer-ownership="none">
          <type name="BusType" c:type="GBusType"/>
        </parameter>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="flags" transfer-ownership="none">
          <type name="BusNameWatcherFlags" c:type="GBusNameWatcherFlags"/>
        </parameter>
        <parameter name="name_appeared_closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="name_vanished_closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_can_be_executable"
              c:identifier="g_content_type_can_be_executable">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_equals" c:identifier="g_content_type_equals">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type1" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="type2" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_from_mime_type"
              c:identifier="g_content_type_from_mime_type">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="mime_type" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_get_description"
              c:identifier="g_content_type_get_description">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_get_icon"
              c:identifier="g_content_type_get_icon">
      <return-value transfer-ownership="full">
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_get_mime_type"
              c:identifier="g_content_type_get_mime_type">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_guess" c:identifier="g_content_type_guess">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="data" transfer-ownership="none">
          <array c:type="guchar*">
            <type name="uint8"/>
          </array>
        </parameter>
        <parameter name="data_size" transfer-ownership="none">
          <type name="gsize" c:type="gsize"/>
        </parameter>
        <parameter name="result_uncertain"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="boolean" c:type="gboolean*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_guess_for_tree"
              c:identifier="g_content_type_guess_for_tree">
      <return-value transfer-ownership="full">
        <array c:type="gchar**">
          <type name="utf8"/>
        </array>
      </return-value>
      <parameters>
        <parameter name="root" transfer-ownership="none">
          <type name="File" c:type="GFile*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_is_a" c:identifier="g_content_type_is_a">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="supertype" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_type_is_unknown"
              c:identifier="g_content_type_is_unknown">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="type" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="content_types_get_registered"
              c:identifier="g_content_types_get_registered">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*">
          <type name="utf8"/>
        </type>
      </return-value>
    </function>
    <function name="dbus_address_get_for_bus_sync"
              c:identifier="g_dbus_address_get_for_bus_sync"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="bus_type" transfer-ownership="none">
          <type name="BusType" c:type="GBusType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_address_get_stream"
              c:identifier="g_dbus_address_get_stream">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="async"
                   closure="3">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_address_get_stream_finish"
              c:identifier="g_dbus_address_get_stream_finish"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="IOStream" c:type="GIOStream*"/>
      </return-value>
      <parameters>
        <parameter name="res" transfer-ownership="none">
          <type name="AsyncResult" c:type="GAsyncResult*"/>
        </parameter>
        <parameter name="out_guid" transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_address_get_stream_sync"
              c:identifier="g_dbus_address_get_stream_sync"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="IOStream" c:type="GIOStream*"/>
      </return-value>
      <parameters>
        <parameter name="address" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="out_guid" transfer-ownership="none">
          <array c:type="gchar**">
            <type name="utf8"/>
          </array>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_error_encode_gerror"
              c:identifier="g_dbus_error_encode_gerror">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_error_get_remote_error"
              c:identifier="g_dbus_error_get_remote_error">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_error_is_remote_error"
              c:identifier="g_dbus_error_is_remote_error">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_error_new_for_dbus_error"
              c:identifier="g_dbus_error_new_for_dbus_error">
      <return-value transfer-ownership="full">
        <type name="GLib.Error" c:type="GError*"/>
      </return-value>
      <parameters>
        <parameter name="dbus_error_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="dbus_error_message" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_error_register_error"
              c:identifier="g_dbus_error_register_error">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="error_domain" transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="error_code" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="dbus_error_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_error_register_error_domain"
              c:identifier="g_dbus_error_register_error_domain">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="error_domain_quark_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="quark_volatile"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="gsize" c:type="gsize*"/>
        </parameter>
        <parameter name="entries" transfer-ownership="none">
          <type name="DBusErrorEntry" c:type="GDBusErrorEntry*"/>
        </parameter>
        <parameter name="num_entries" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_error_set_dbus_error"
              c:identifier="g_dbus_error_set_dbus_error"
              introspectable="0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter name="dbus_error_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="dbus_error_message" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_error_strip_remote_error"
              c:identifier="g_dbus_error_strip_remote_error">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_error_unregister_error"
              c:identifier="g_dbus_error_unregister_error">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="error_domain" transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="error_code" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="dbus_error_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_generate_guid" c:identifier="g_dbus_generate_guid">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="gchar*"/>
      </return-value>
    </function>
    <function name="dbus_is_address" c:identifier="g_dbus_is_address">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_is_guid" c:identifier="g_dbus_is_guid">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_is_interface_name"
              c:identifier="g_dbus_is_interface_name">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_is_member_name" c:identifier="g_dbus_is_member_name">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_is_name" c:identifier="g_dbus_is_name">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_is_supported_address"
              c:identifier="g_dbus_is_supported_address"
              throws="1">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="dbus_is_unique_name" c:identifier="g_dbus_is_unique_name">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="string" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_hash" c:identifier="g_file_hash">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="file" transfer-ownership="none">
          <type name="any" c:type="gconstpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_new_for_commandline_arg"
              c:identifier="g_file_new_for_commandline_arg">
      <return-value transfer-ownership="full">
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="arg" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_new_for_path" c:identifier="g_file_new_for_path">
      <return-value transfer-ownership="full">
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_new_for_uri" c:identifier="g_file_new_for_uri">
      <return-value transfer-ownership="full">
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="uri" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="file_parse_name" c:identifier="g_file_parse_name">
      <return-value transfer-ownership="full">
        <type name="File" c:type="GFile*"/>
      </return-value>
      <parameters>
        <parameter name="parse_name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="icon_hash" c:identifier="g_icon_hash">
      <return-value transfer-ownership="none">
        <type name="uint" c:type="guint"/>
      </return-value>
      <parameters>
        <parameter name="icon" transfer-ownership="none">
          <type name="any" c:type="gconstpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="icon_new_for_string"
              c:identifier="g_icon_new_for_string"
              throws="1">
      <return-value transfer-ownership="full">
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="str" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="initable_new"
              c:identifier="g_initable_new"
              introspectable="0">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError**"/>
        </parameter>
        <parameter name="first_property_name" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="initable_newv" c:identifier="g_initable_newv" throws="1">
      <return-value transfer-ownership="none">
        <type name="any" c:type="gpointer"/>
      </return-value>
      <parameters>
        <parameter name="object_type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="n_parameters" transfer-ownership="none">
          <type name="uint" c:type="guint"/>
        </parameter>
        <parameter name="parameters" transfer-ownership="none">
          <type name="GObject.Parameter" c:type="GParameter*"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_error_from_errno" c:identifier="g_io_error_from_errno">
      <return-value transfer-ownership="full">
        <type name="IOErrorEnum" c:type="GIOErrorEnum"/>
      </return-value>
      <parameters>
        <parameter name="err_no" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_get_type"
              c:identifier="g_io_extension_get_type">
      <return-value transfer-ownership="none">
        <type name="GType" c:type="GType"/>
      </return-value>
      <parameters>
        <parameter name="extension" transfer-ownership="none">
          <type name="IOExtension" c:type="GIOExtension*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_implement"
              c:identifier="g_io_extension_point_implement">
      <return-value transfer-ownership="full">
        <type name="IOExtension" c:type="GIOExtension*"/>
      </return-value>
      <parameters>
        <parameter name="extension_point_name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="type" transfer-ownership="none">
          <type name="GType" c:type="GType"/>
        </parameter>
        <parameter name="extension_name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="priority" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_lookup"
              c:identifier="g_io_extension_point_lookup">
      <return-value transfer-ownership="full">
        <type name="IOExtensionPoint" c:type="GIOExtensionPoint*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_extension_point_register"
              c:identifier="g_io_extension_point_register">
      <return-value transfer-ownership="full">
        <type name="IOExtensionPoint" c:type="GIOExtensionPoint*"/>
      </return-value>
      <parameters>
        <parameter name="name" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_modules_load_all_in_directory"
              c:identifier="g_io_modules_load_all_in_directory">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*">
          <type name="IOModule"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="dirname" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_modules_scan_all_in_directory"
              c:identifier="g_io_modules_scan_all_in_directory">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="dirname" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_scheduler_cancel_all_jobs"
              c:identifier="g_io_scheduler_cancel_all_jobs">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
    </function>
    <function name="io_scheduler_push_job"
              c:identifier="g_io_scheduler_push_job">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="job_func"
                   transfer-ownership="none"
                   scope="notified"
                   closure="1"
                   destroy="2">
          <type name="IOSchedulerJobFunc" c:type="GIOSchedulerJobFunc"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="notify" transfer-ownership="none" scope="call">
          <type name="GLib.DestroyNotify" c:type="GDestroyNotify"/>
        </parameter>
        <parameter name="io_priority" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="cancellable" transfer-ownership="none" allow-none="1">
          <type name="Cancellable" c:type="GCancellable*"/>
        </parameter>
      </parameters>
    </function>
    <function name="keyfile_settings_backend_new"
              c:identifier="g_keyfile_settings_backend_new">
      <return-value transfer-ownership="full">
        <type name="SettingsBackend" c:type="GSettingsBackend*"/>
      </return-value>
      <parameters>
        <parameter name="filename" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="root_path" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="root_group" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="proxy_get_default_for_protocol"
              c:identifier="g_proxy_get_default_for_protocol">
      <return-value transfer-ownership="full">
        <type name="Proxy" c:type="GProxy*"/>
      </return-value>
      <parameters>
        <parameter name="protocol" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="proxy_resolver_get_default"
              c:identifier="g_proxy_resolver_get_default">
      <return-value transfer-ownership="full">
        <type name="ProxyResolver" c:type="GProxyResolver*"/>
      </return-value>
    </function>
    <function name="simple_async_report_error_in_idle"
              c:identifier="g_simple_async_report_error_in_idle"
              introspectable="0">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="async"
                   closure="2">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="domain" transfer-ownership="none">
          <type name="GLib.Quark" c:type="GQuark"/>
        </parameter>
        <parameter name="code" transfer-ownership="none">
          <type name="int" c:type="gint"/>
        </parameter>
        <parameter name="format" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter transfer-ownership="none">
          <varargs>
          </varargs>
        </parameter>
      </parameters>
    </function>
    <function name="simple_async_report_gerror_in_idle"
              c:identifier="g_simple_async_report_gerror_in_idle">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="object" transfer-ownership="none">
          <type name="GObject.Object" c:type="GObject*"/>
        </parameter>
        <parameter name="callback"
                   transfer-ownership="none"
                   scope="async"
                   closure="2">
          <type name="AsyncReadyCallback" c:type="GAsyncReadyCallback"/>
        </parameter>
        <parameter name="user_data" transfer-ownership="none">
          <type name="any" c:type="gpointer"/>
        </parameter>
        <parameter name="error" transfer-ownership="none">
          <type name="GLib.Error" c:type="GError*"/>
        </parameter>
      </parameters>
    </function>
    <function name="srv_target_list_sort"
              c:identifier="g_srv_target_list_sort"
              introspectable="0">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*">
          <type name="SrvTarget"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="targets" transfer-ownership="full">
          <type name="GLib.List" c:type="GList*">
            <type name="SrvTarget"/>
          </type>
        </parameter>
      </parameters>
    </function>
    <function name="unix_is_mount_path_system_internal"
              c:identifier="g_unix_is_mount_path_system_internal">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount_path" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_at" c:identifier="g_unix_mount_at">
      <return-value transfer-ownership="full">
        <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
      </return-value>
      <parameters>
        <parameter name="mount_path" transfer-ownership="none">
          <type name="utf8" c:type="char*"/>
        </parameter>
        <parameter name="time_read"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="uint64" c:type="guint64*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_compare" c:identifier="g_unix_mount_compare">
      <return-value transfer-ownership="none">
        <type name="int" c:type="gint"/>
      </return-value>
      <parameters>
        <parameter name="mount1" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
        <parameter name="mount2" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_free" c:identifier="g_unix_mount_free">
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_get_device_path"
              c:identifier="g_unix_mount_get_device_path">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_get_fs_type"
              c:identifier="g_unix_mount_get_fs_type">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_get_mount_path"
              c:identifier="g_unix_mount_get_mount_path">
      <return-value transfer-ownership="none">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_guess_can_eject"
              c:identifier="g_unix_mount_guess_can_eject">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_guess_icon"
              c:identifier="g_unix_mount_guess_icon">
      <return-value transfer-ownership="full">
        <type name="Icon" c:type="GIcon*"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_guess_name"
              c:identifier="g_unix_mount_guess_name">
      <return-value transfer-ownership="full">
        <type name="utf8" c:type="char*"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_guess_should_display"
              c:identifier="g_unix_mount_guess_should_display">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_is_readonly"
              c:identifier="g_unix_mount_is_readonly">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_is_system_internal"
              c:identifier="g_unix_mount_is_system_internal">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="mount_entry" transfer-ownership="none">
          <type name="UnixMountEntry" c:type="GUnixMountEntry*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_points_changed_since"
              c:identifier="g_unix_mount_points_changed_since">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="time" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mount_points_get"
              c:identifier="g_unix_mount_points_get">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*">
          <type name="utf8"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="time_read"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="uint64" c:type="guint64*"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mounts_changed_since"
              c:identifier="g_unix_mounts_changed_since">
      <return-value transfer-ownership="none">
        <type name="boolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="time" transfer-ownership="none">
          <type name="uint64" c:type="guint64"/>
        </parameter>
      </parameters>
    </function>
    <function name="unix_mounts_get" c:identifier="g_unix_mounts_get">
      <return-value transfer-ownership="full">
        <type name="GLib.List" c:type="GList*">
          <type name="utf8"/>
        </type>
      </return-value>
      <parameters>
        <parameter name="time_read"
                   direction="out"
                   caller-allocates="0"
                   transfer-ownership="full">
          <type name="uint64" c:type="guint64*"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
